{"version":3,"file":"static/js/236.bb0a656f.chunk.js","mappings":"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","sources":["Views/Reception/PatientRegistration/index.js"],"sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\r\nimport placeholderImage from \"../../../assets/images/placeholder.jpg\";\r\nimport {getRequest, postRequest} from \"../../../service/apiService\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport {\r\n  API_HOST,\r\n  ALL_COUNTRY, ALL_DEPARTMENT,\r\n  ALL_GENDER,\r\n  ALL_RELATION,\r\n  DISTRICT_BY_STATE, DOCTOR_BY_SPECIALITY, PATIENT_IMAGE_UPLOAD,\r\n  STATE_BY_COUNTRY, GET_DOCTOR_SESSION, PATIENT_REGISTRATION, GET_SESSION, HOSPITAL\r\n} from \"../../../config/apiConfig\";\r\nimport {DEPARTMENT_CODE_OPD} from \"../../../config/constants\";\r\nimport axios from \"axios\";\r\nconst PatientRegistration = () => {\r\n  useEffect(() => {\r\n    // Fetching gender data (simulated API response)\r\n    fetchGenderData();\r\n    fetchRelationData();\r\n    fetchCountryData();\r\n    fetchDepartment();\r\n    fetchSesion();\r\n    fetchHospitalDetails();\r\n  }, []);\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [genderData,setGenderData]=useState([]);\r\n  const [imageURL,setImageURL]=useState(\"\");\r\n  const [relationData,setRelationData]=useState([]);\r\n  const [countryData,setCountryData]=useState([]);\r\n  const [stateData,setStateData]=useState([]);\r\n  const [nokStateData,setNokStateData]=useState([]);\r\n  const [districtData,setDistrictData]=useState([]);\r\n  const [nokDistrictData,setNokDistrictData]=useState([]);\r\n  const [departmentData,setDepartmentData]=useState([]);\r\n  const [doctorData,setDoctorData]=useState([]);\r\n  const [session,setSession]=useState([]);\r\n  const [formData, setFormData] = useState({\r\n    imageurl:undefined,\r\n    firstName: undefined,\r\n      middleName: undefined,\r\n      lastName: undefined,\r\n      mobileNo: undefined,\r\n      gender: undefined,\r\n      relation: undefined,\r\n      dob: undefined,\r\n      age: undefined,\r\n      email: undefined,\r\n    address1: undefined,\r\n    address2: undefined,\r\n    country: undefined,\r\n    state: undefined,\r\n    district: undefined,\r\n    city: undefined,\r\n    pinCode: undefined,\r\n    nokFirstName: undefined,\r\n    nokMiddleName: undefined,\r\n    nokLastName: undefined,\r\n    nokEmail: undefined,\r\n    nokMobile: undefined,\r\n    nokAddress1: undefined,\r\n    nokAddress2: undefined,\r\n    nokCountry: undefined,\r\n    nokState: undefined,\r\n    nokDistrict: undefined,\r\n    nokCity: undefined,\r\n    nokPinCode: undefined,\r\n    emergencyFirstName: undefined,\r\n    emergencyLastName: undefined,\r\n    emergencyMobile: undefined,\r\n    height: undefined,\r\n    weight: undefined,\r\n    temperature: undefined,\r\n    systolicBP: undefined,\r\n    diastolicBP: undefined,\r\n    pulse: undefined,\r\n    bmi: undefined,\r\n    rr: undefined,\r\n    spo2: undefined,\r\n    speciality: undefined,\r\n    doctor: undefined,\r\n    session: undefined,\r\n    appointmentDate: undefined,\r\n    maritalStatus: undefined,\r\n    religion: undefined,\r\n    emergencyRelationId: undefined,\r\n    nokRelation: undefined,\r\n    idealWeight: undefined,\r\n    varation:undefined,\r\n    department: undefined,\r\n    selDoctorId: undefined,\r\n    selSession: undefined\r\n\r\n  });\r\n  const [image, setImage] = useState(placeholderImage);\r\n  const [isCameraOn, setIsCameraOn] = useState(false);\r\n  const [preConsultationFlag, setPreConsultationFlag] = useState(false);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  let stream = null;\r\n\r\n  const startCamera = async () => {\r\n    try {\r\n      setIsCameraOn(true); // Ensure the video element is rendered before accessing ref\r\n      setTimeout(async () => {\r\n        stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      }, 100);\r\n    } catch (error) {\r\n      console.error(\"Error accessing camera:\", error);\r\n    }\r\n  };\r\n  async function fetchHospitalDetails() {\r\n    try {\r\n      const data = await getRequest(`${HOSPITAL}/${sessionStorage.getItem('hospitalId')}`);\r\n      if (data.status === 200) {\r\n        if(data.response.preConsultationAvailable=='y'||data.response.preConsultationAvailable=='Y'){\r\n          setPreConsultationFlag(true);\r\n        }\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n\r\n  const capturePhoto = () => {\r\n    if (videoRef.current && canvasRef.current) {\r\n      const video = videoRef.current;\r\n      const canvas = canvasRef.current;\r\n      \r\n      // Set canvas dimensions to match video stream\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n  \r\n      const context = canvas.getContext(\"2d\");\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height)\r\n      const imageData = canvas.toDataURL(\"image/png\");\r\n  \r\n      setImage(imageData);\r\n      stopCamera();\r\n      debugger;\r\n      confirmUpload(imageData);\r\n\r\n    }\r\n  };\r\n  \r\n\r\n  const stopCamera = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      setIsCameraOn(false);\r\n    }\r\n\r\n  };\r\n  const confirmUpload = (imageData) => {\r\n    Swal.fire({\r\n      title: \"Confirm Upload\",\r\n      text: \"Do you want to upload this photo?\",\r\n      imageUrl: imageData,\r\n      imageWidth: 200,\r\n      imageHeight: 150,\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes, Upload\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        uploadImage(imageData);\r\n      }\r\n    });\r\n  };\r\n  const uploadImage = async (base64Image) => {\r\n    try {\r\n      // Convert base64 to Blob\r\n      const blob = await fetch(base64Image).then((res) => res.blob());\r\n      const formData1 = new FormData();\r\n      formData1.append(\"file\", blob, \"photo.png\");\r\n\r\n      // Send the formData to the server\r\n      const response = await fetch(`${API_HOST}${PATIENT_IMAGE_UPLOAD}`, {\r\n        method: \"POST\",\r\n        body: formData1,\r\n      });\r\n\r\n      // Parse JSON response\r\n      const data = await response.json();\r\n\r\n      if (response.status === 200 && data.response) {\r\n        // Extracting the image path\r\n        const extractedPath = data.response;\r\n\r\n        // Updating state with the extracted image path\r\n        setImageURL(extractedPath);\r\n        console.log(\"Uploaded Image URL:\", extractedPath);\r\n\r\n        // Show success alert\r\n        Swal.fire(\"Success!\", \"Image uploaded successfully!\", \"success\");\r\n      } else {\r\n        Swal.fire(\"Error!\", \"Failed to upload image!\", \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      Swal.fire(\"Error!\", \"Something went wrong!\", \"error\");\r\n    }\r\n  };\r\n\r\n  const clearPhoto = () => {\r\n    setImage(placeholderImage);\r\n  };\r\n  // const handleChange = (e) => {\r\n  //   setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  // };\r\n  function calculateDOBFromAge(age) {\r\n    const today = new Date();\r\n    const birthYear = today.getFullYear() - age;\r\n\r\n    // Default to today's month and day\r\n    return new Date(birthYear, today.getMonth(), today.getDate()).toISOString().split('T')[0];\r\n  }\r\n  function checkBMI(a,b)  {\r\n    debugger;\r\n    if(a === '' || b == ''){\r\n      return ;\r\n    }\r\n    var c=b/100;\r\n    var d=c*c;\r\n    var sub = a/d;\r\n    return(parseFloat(Math.round(sub * 100) / 100).toFixed(2));\r\n  }\r\n  const handleChange = (e) => {\r\n\r\n    const { name, value } = e.target;\r\n\r\n    const updatedFormData = { ...formData, [name]: value };\r\n    if(name=='dob'){\r\n      updatedFormData.age=calculateAgeFromDOB(value);\r\n    }\r\n    else if(name == 'age'){\r\n      updatedFormData.dob=calculateDOBFromAge(value)\r\n    }\r\n    else if(name == 'weight'&&formData.height!=undefined){\r\n      updatedFormData.bmi=checkBMI(value,formData.height);\r\n    }else if(name == 'height'&&formData.weight!=undefined){\r\n      updatedFormData.bmi=checkBMI(formData.weight,value);\r\n    }\r\n\r\n\r\n    setFormData(updatedFormData);\r\n    let error = \"\";\r\n\r\n    if (name === \"firstName\" && !value.trim()) {\r\n      error = \"First Name is required.\";\r\n    }\r\n\r\n    if (name === \"gender\" && !value) {\r\n      error = \"Gender is required.\";\r\n    }\r\n\r\n    if (name === \"relation\" && !value) {\r\n      error = \"Relation is required.\";\r\n    }\r\n\r\n    if (name === \"dob\" && !value) {\r\n      error = \"Date of Birth is required.\";\r\n    }\r\n\r\n    if (name === \"email\") {\r\n      if (!value.trim()) {\r\n        error = \"Email is required.\";\r\n      } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\r\n        error = \"Invalid email format.\";\r\n      }\r\n    }\r\n\r\n    if (name === \"mobileNo\") {\r\n      if (!value.trim()) {\r\n        error = \"Mobile number is required.\";\r\n      } else if (!/^\\d{10}$/.test(value)) {\r\n        error = \"Mobile number must be exactly 10 digits.\";\r\n      }\r\n    }\r\n\r\n    if (name === \"pinCode\") {\r\n      if (!/^\\d{6}$/.test(value)) {\r\n        error = \"Pin Code must be exactly 6 digits.\";\r\n      }\r\n    }\r\n\r\n    if (name === \"age\") {\r\n      if (value !== \"\" && (isNaN(value) || Number(value) < 0)) {\r\n        error = \"Age can not be negative.\";\r\n      }\r\n    }\r\n\r\n    const numericFields = [\r\n      \"height\",\r\n      \"weight\",\r\n      \"temperature\",\r\n      \"systolicBP\",\r\n      \"diastolicBP\",\r\n      \"pulse\",\r\n      \"bmi\",\r\n      \"rr\",\r\n      \"spo2\"\r\n    ];\r\n\r\n    if (numericFields.includes(name)) {\r\n      if (value!= undefined && (value !== \"\" && (isNaN(value) || Number(value) < 0))) {\r\n        error = `${name.charAt(0).toUpperCase() + name.slice(1)} must be a non-negative number.`;\r\n      }\r\n    }\r\n\r\n    setErrors((prevErrors) => {\r\n      const newErrors = { ...prevErrors };\r\n      if (error) {\r\n        newErrors[name] = error;\r\n      } else {\r\n        delete newErrors[name];\r\n      }\r\n      return newErrors;\r\n    });\r\n  };\r\n\r\n\r\n  const handleAddChange = (e) => {\r\n    debugger;\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n  async function fetchGenderData() {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const data = await getRequest(`${ALL_GENDER}/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setGenderData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setGenderData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n\r\n\r\n  };\r\nasync function fetchRelationData() {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const data = await getRequest(`${ALL_RELATION}/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setRelationData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setRelationData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  async function fetchCountryData() {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const data = await getRequest(`${ALL_COUNTRY}/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setCountryData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setCountryData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function fetchStates(value) {\r\n    try {\r\n      const data = await getRequest(`${STATE_BY_COUNTRY}${value}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setStateData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setStateData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  async function fetchSesion() {\r\n    try {\r\n      const data = await getRequest(`${GET_SESSION}1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setSession(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setSession([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  async function fetchDistrict(value) {\r\n    try {\r\n      const data = await getRequest(`${DISTRICT_BY_STATE}${value}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setDistrictData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDistrictData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function fetchNokStates(value) {\r\n  try{\r\n\r\n    const data = await getRequest(`${STATE_BY_COUNTRY}${value}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setNokStateData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setNokStateData([]);\r\n      }\r\n    } catch (error) {\r\n        console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function fetchNokDistrict(value) {\r\n    try {\r\n      const data = await getRequest(`${DISTRICT_BY_STATE}${value}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setNokDistrictData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setNokDistrictData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\nasync function fetchDepartment() {\r\n    try {\r\n      const data = await getRequest(`${ALL_DEPARTMENT}/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        const filteredDepartments = data.response.filter(\r\n            (dept) => dept.departmentTypeId === DEPARTMENT_CODE_OPD\r\n        );\r\n        setDepartmentData(filteredDepartments);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDepartmentData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function sendRegistrationRequest() {\r\n    console.log(formData);\r\n    sendPatientData();\r\n  }\r\n  const validateForm = () => {\r\n    const requiredFields = [\"firstName\", \"gender\", \"relation\", \"dob\", \"email\", \"mobileNo\"];\r\n    const numericFields = [\r\n      \"height\",\r\n      \"weight\",\r\n      \"temperature\",\r\n      \"systolicBP\",\r\n      \"diastolicBP\",\r\n      \"pulse\",\r\n      \"bmi\",\r\n      \"rr\",\r\n      \"spo2\",\r\n      \"age\"\r\n    ];\r\n\r\n    let valid = true;\r\n    const newErrors = {};\r\n\r\n    requiredFields.forEach((field) => {\r\n      if (!formData[field] || formData[field].toString().trim() === \"\") {\r\n        newErrors[field] = `${field.charAt(0).toUpperCase() + field.slice(1)} is required.`;\r\n        valid = false;\r\n      }\r\n    });\r\n\r\n    if (formData.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n      newErrors.email = \"Invalid email format.\";\r\n      valid = false;\r\n    }\r\n\r\n    if (formData.mobileNo && !/^\\d{10}$/.test(formData.mobileNo)) {\r\n      newErrors.mobileNo = \"Mobile number must be exactly 10 digits.\";\r\n      valid = false;\r\n    }\r\n\r\n    if (formData.pinCode && !/^\\d{6}$/.test(formData.pinCode)) {\r\n      newErrors.pinCode = \"Pin Code must be exactly 6 digits.\";\r\n      valid = false;\r\n    }\r\n\r\n    numericFields.forEach((field) => {\r\n      const value = formData[field];\r\n      if (value!=undefined && value !== \"\" && (isNaN(value) || Number(value) < 0)) {\r\n        debugger;\r\n        newErrors[field] = `${field.charAt(0).toUpperCase() + field.slice(1)} must be a non-negative number.`;\r\n        valid = false;\r\n      }\r\n      if ((field === \"age\" || requiredFields.includes(field)) && Number(value) <= 0) {\r\n        newErrors[field] = `${field.charAt(0).toUpperCase() + field.slice(1)} must be greater than 0.`;\r\n        valid = false;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n    return valid;\r\n  };\r\n\r\n  const sendPatientData = async () => {\r\n    if (validateForm()) {\r\n    const requestData = {\r\n      patient: {\r\n        id: 0,\r\n        uhidNo:\"\",\r\n        patientStatus:\"\",\r\n        regDate:new Date(Date.now()).toJSON().split('.')[0].split('T')[0],\r\n        lastChgBy:sessionStorage.getItem('username'),\r\n        patientHospitalId:Number(sessionStorage.getItem('hospitalId')),\r\n        patientFn: formData.firstName,\r\n        patientMn: formData.middleName,\r\n        patientLn: formData.lastName,\r\n        patientDob: formData.dob,\r\n        patientAge: formData.age,\r\n        patientGenderId: formData.gender,\r\n        patientEmailId: formData.email,\r\n        patientMobileNumber: formData.mobileNo,\r\n        patientImage: imageURL,\r\n        fileName: \"string\",\r\n        patientRelationId: formData.relation,\r\n        patientMaritalStatusId: formData.maritalStatus,\r\n        patientReligionId: formData.religion,\r\n        patientAddress1: formData.address1,\r\n        patientAddress2: formData.address2,\r\n        patientCity: formData.city,\r\n        patientPincode: formData.pinCode,\r\n        patientDistrictId: formData.district,\r\n        patientStateId: formData.district,\r\n        patientCountryId: formData.country,\r\n        pincode: \"string\",\r\n        emerFn: formData.emergencyFirstName,\r\n        emerLn: formData.emergencyLastName,\r\n        emerRelationId: formData.emergencyRelationId,\r\n        emerMobile: formData.emergencyMobile,\r\n        nokFn: formData.nokFirstName,\r\n        nokLn: formData.nokLastName,\r\n        nokEmail: formData.nokEmail,\r\n        nokMobileNumber: formData.nokMobile,\r\n        nokAddress1: formData.nokAddress1,\r\n        nokAddress2: formData.nokAddress2,\r\n        nokCity: formData.nokCity,\r\n        nokDistrictId: formData.nokDistrict,\r\n        nokStateId: formData.nokState,\r\n        nokCountryId: formData.nokCountry,\r\n        nokPincode: formData.nokPinCode,\r\n        nokRelationId: formData.nokRelation\r\n      },\r\n      opdPatientDetail: {\r\n        height: formData.height,\r\n        idealWeight: formData.idealWeight,\r\n        weight: formData.weight,\r\n        pulse: formData.pulse,\r\n        temperature: formData.temperature,\r\n        opdDate: formData.appointmentDate,\r\n        rr: formData.rr,\r\n        bmi: formData.bmi,\r\n        spo2: formData.spo2,\r\n        varation: formData.varation,\r\n        bpSystolic: formData.systolicBP,\r\n        bpDiastolic: formData.diastolicBP,\r\n        icdDiag: \"string\",\r\n        workingDiag: \"string\",\r\n        followUpFlag: \"string\",\r\n        followUpDays: 0,\r\n        pastMedicalHistory: \"string\",\r\n        presentComplaints: \"string\",\r\n        familyHistory: \"string\",\r\n        treatmentAdvice: \"string\",\r\n        sosFlag: \"string\",\r\n        recmmdMedAdvice: \"string\",\r\n        medicineFlag: \"s\",\r\n        labFlag: \"s\",\r\n        radioFlag: \"s\",\r\n        referralFlag: \"s\",\r\n        mlcFlag: \"s\",\r\n        policeStation: \"string\",\r\n        policeName: \"string\",\r\n        patientId: 0,\r\n        visitId: 0,\r\n        departmentId: 0,\r\n        hospitalId: 0,\r\n        doctorId: 0,\r\n        lastChgBy: \"string\"\r\n      },\r\n      visit: {\r\n        id: 0,\r\n        tokenNo: 0,\r\n        visitStatus: \"string\",\r\n        // visitDate: new Date(Date.now()).toJSON().split('.')[0],\r\n        visitDate: new Date(Date.now()).toJSON(),\r\n        departmentId: Number(formData.speciality),\r\n        doctorId: Number(formData.selDoctorId),\r\n        doctorName: \"\",\r\n        hospitalId: sessionStorage.getItem('hospitalId'),\r\n        sessionId: Number(formData.selSession),\r\n        billingStatus: \"string\",\r\n        priority:0,\r\n        patientId: 0,\r\n        iniDoctorId: 0,\r\n      },\r\n    };\r\n    debugger;\r\n    if(isNaN(requestData.visit.doctorId))\r\n      requestData.visit=null;\r\n    // requestData.opdPatientDetail=null;\r\n    console.log(new Date(Date.now()).toJSON())\r\n\r\n    try {\r\n      debugger;\r\n      const data = await postRequest(`${PATIENT_REGISTRATION}`,requestData);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        Swal.fire(\"Patient Registration Successful\")\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDoctorData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  }};\r\n\r\n\r\n\r\n  async function fetchDoctor(value) {\r\n    try {\r\n      const data = await getRequest(`${DOCTOR_BY_SPECIALITY}${value}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setDoctorData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDoctorData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function fetchSession(doc) {\r\n\r\n    console.log(doc.target.value);\r\n    if(formData.speciality!=''&&doc){\r\n      console.log(doc);\r\n      let timestamp = Date.now();\r\n      let value = new Date(timestamp).toJSON().split('.')[0].split('T')[0];\r\n      console.log(value);\r\n      const data = await getRequest(`${GET_DOCTOR_SESSION}deptId=${formData.speciality}&doctorId=${doc.target.value}&rosterDate=${value}`);\r\n      if(data.status==200){\r\n        console.log(data.response[0].rosterVal);\r\n        let sessionVal=[{key:0,value:''},{key:1,value: ''}];\r\n        if(data.response[0].rosterVal==\"YY\"){\r\n          sessionVal=[{key:0,value:'Morning'},{key:1,value: 'Evening'}]\r\n        }\r\n        else if (data.response[0].rosterVal==\"NY\"){\r\n          sessionVal=[{key:0,value: 'Evening'}]\r\n        }\r\n        else if (data.response[0].rosterVal==\"YN\"){\r\n          sessionVal=[{key:0,value: 'Morning'}]\r\n        }\r\n        // setSession(sessionVal);\r\n      }\r\n      else{\r\n        Swal.fire(data.message);\r\n      }\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  function calculateAgeFromDOB(dob) {\r\n    const birthDate = new Date(dob);\r\n    const today = new Date();\r\n\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n\r\n    // Adjust if birth date hasn't occurred yet this year\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n\r\n    return age;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"body d-flex py-3\">\r\n      <div className=\"container-xxl\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"border-0 mb-4\">\r\n            <div className=\"card-header py-3 no-bg bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n              <h3 className=\"fw-bold mb-0\">Registration of Other Patient</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Patient Personal Details */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                <h6 className=\"mb-0 fw-bold\">Personal Details</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-9\">\r\n                      <div className=\"row g-3\">\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\" htmlFor=\"firstName\">First Name *</label>\r\n                          <input type=\"text\" className={`form-control ${errors.firstName ? 'is-invalid' : ''}`}\r\n                                 id=\"firstName\" name=\"firstName\" value={formData.firstName} onChange={handleChange}\r\n                                 placeholder=\"Enter First Name\"/>\r\n                          {errors.firstName && <div className=\"invalid-feedback\">{errors.firstName}</div>}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\" htmlFor=\"middleName\">Middle Name</label>\r\n                          <input type=\"text\" id=\"middleName\" value={formData.middleName} name=\"middleName\"\r\n                                 onChange={handleChange} className=\"form-control\" placeholder=\"Enter Middle Name\"/>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\" htmlFor=\"lastName\">Last Name</label>\r\n                          <input type=\"text\" id=\"lastName\" value={formData.lastName} name=\"lastName\"\r\n                                 onChange={handleChange} className=\"form-control\" placeholder=\"Enter Last Name\"/>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\" htmlFor=\"mobileNo\">Mobile No.</label>\r\n                          <input type=\"text\" id=\"mobileNo\"\r\n                                 className={`form-control ${errors.mobileNo ? 'is-invalid' : ''}`} name=\"mobileNo\"\r\n                                 value={formData.mobileNo} onChange={handleChange} placeholder=\"Enter Mobile Number\"/>\r\n                          {errors.mobileNo && <div className=\"invalid-feedback\">{errors.mobileNo}</div>}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\" htmlFor=\"gender\">Gender *</label>\r\n                          <select className={`form-select ${errors.gender ? 'is-invalid' : ''}`} id=\"gender\"\r\n                                  name=\"gender\" value={formData.gender} onChange={handleChange}>\r\n                            <option value=\"\">Select</option>\r\n                            {genderData.map((gender) => (\r\n                                <option key={gender.id} value={gender.id}>\r\n                                  {gender.genderName}\r\n                                </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.gender && <div className=\"invalid-feedback\">{errors.gender}</div>}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\" htmlFor=\"relation\">Relation *</label>\r\n                          <select className={`form-select ${errors.relation ? 'is-invalid' : ''}`} id=\"relation\"\r\n                                  name=\"relation\" value={formData.relation} onChange={handleChange}>\r\n                            <option value=\"\">Select</option>\r\n                            {relationData.map((relation) => (\r\n                                <option key={relation.id} value={relation.id}>\r\n                                  {relation.relationName}\r\n                                </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.relation && <div className=\"invalid-feedback\">{errors.relation}</div>}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\" htmlFor=\"dob\">DOB *</label>\r\n                          <input type=\"date\" id=\"dob\" name=\"dob\"\r\n                                 className={`form-control ${errors.dob ? 'is-invalid' : ''}`} value={formData.dob}\r\n                                 max={new Date().toISOString().split(\"T\")[0]} onChange={handleChange}\r\n                                 placeholder=\"Select Date of Birth\"/>\r\n                          {errors.dob && <div className=\"invalid-feedback\">{errors.dob}</div>}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\" htmlFor=\"age\">Age</label>\r\n                          <input type=\"number\" id=\"age\" name=\"age\"\r\n                                 className={`form-control ${errors.age ? 'is-invalid' : ''}`} value={formData.age}\r\n                                 onChange={handleChange} placeholder=\"Enter Age\"/>\r\n                          {errors.age && <div className=\"invalid-feedback\">{errors.age}</div>}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\" htmlFor=\"email\">Email *</label>\r\n                          <input type=\"email\" id=\"email\" name=\"email\"\r\n                                 className={`form-control ${errors.email ? 'is-invalid' : ''}`} value={formData.email}\r\n                                 onChange={handleChange} placeholder=\"Enter Email Address\"/>\r\n                          {errors.email && <div className=\"invalid-feedback\">{errors.email}</div>}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"card p-3 shadow\">\r\n                          {isCameraOn ? (\r\n                              <video ref={videoRef} autoPlay className=\"d-block mx-auto\"\r\n                                     style={{width: \"100%\", height: \"150px\"}}></video>\r\n                          ) : (\r\n                              <img src={image || \"/default-profile.png\"} alt=\"Profile\" className=\"img-fluid border\"\r\n                                   style={{width: \"100%\", height: \"150px\"}}/>\r\n                          )}\r\n                          <canvas ref={canvasRef} width=\"300\" height=\"150\" style={{display: \"none\"}}></canvas>\r\n                          <div className=\"mt-2\">\r\n                            <button type=\"button\" className=\"btn btn-primary me-2 mb-2\" onClick={startCamera}\r\n                                    disabled={isCameraOn}>\r\n                              Start Camera\r\n                            </button>\r\n                            {isCameraOn && (\r\n                                <button type=\"button\" className=\"btn btn-success me-2 mb-2\" onClick={capturePhoto}>\r\n                                  Take Photo\r\n                                </button>\r\n                            )}\r\n                            <button type=\"button\" className=\"btn btn-danger mb-2\" onClick={clearPhoto}>\r\n                              Clear Photo\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Patient address */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                <h6 className=\"mb-0 fw-bold\">Patient Address</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Address 1</label>\r\n                      <input type=\"text\" className=\"form-control\" name=\"address1\" value={formData.address1}\r\n                             onChange={handleChange} placeholder=\"Enter Address 1\"/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Address 2</label>\r\n                      <input type=\"text\" className=\"form-control\" name=\"address2\" value={formData.address2}\r\n                             onChange={handleChange} placeholder=\"Enter Address 2\"/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Country</label>\r\n                      <select className=\"form-select\" name=\"country\" value={formData.country} onChange={(e) => {\r\n                        handleAddChange(e);\r\n                        fetchStates(e.target.value);\r\n                      }}>\r\n                        <option value=\"\">Select Country</option>\r\n                        {countryData.map((country) => (\r\n                            <option key={country.id} value={country.id}>\r\n                              {country.countryName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">State</label>\r\n                      <select className=\"form-select\" name=\"state\" value={formData.state} onChange={(e) => {\r\n                        handleAddChange(e);\r\n                        fetchDistrict(e.target.value);\r\n                      }}>\r\n                        <option value=\"\">Select State</option>\r\n                        {stateData.map((state) => (\r\n                            <option key={state.id} value={state.id}>\r\n                              {state.stateName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">District</label>\r\n                      <select className=\"form-select\" name=\"district\" value={formData.district} onChange={(e) => {\r\n                        handleAddChange(e);\r\n                      }}>\r\n                        <option value=\"\">Select District</option>\r\n                        {districtData.map((district) => (\r\n                            <option key={district.id} value={district.id}>\r\n                              {district.districtName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">City</label>\r\n                      <input type=\"text\" className=\"form-control\" name=\"city\" value={formData.city}\r\n                             onChange={handleChange} placeholder=\"Enter City\"/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Pin Code</label>\r\n                      <input type=\"text\" className={`form-control ${errors.pinCode ? 'is-invalid' : ''}`} name=\"pinCode\" value={formData.pinCode}\r\n                             onChange={handleChange} placeholder=\"Enter Pin Code\"/>\r\n                      {errors.pinCode && (\r\n                          <div className=\"invalid-feedback\">{errors.pinCode}</div>\r\n                      )}</div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* NOK Details */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                <h6 className=\"mb-0 fw-bold\">NOK Details</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">First Name</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter First Name\" name=\"nokFirstName\"\r\n                             value={formData.nokFirstName}\r\n                             onChange={handleChange}/>\r\n\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Middle Name</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Middle Name\" name=\"nokMiddleName\"\r\n                             value={formData.nokMiddleName}\r\n                             onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Last Name</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Last Name\" name=\"nokLastName\"\r\n                             value={formData.nokLastName}\r\n                             onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Email</label>\r\n                      <input type=\"email\" className=\"form-control\" placeholder=\"Enter Email\"  name=\"nokEmail\"\r\n                             value={formData.nokEmail}\r\n                             onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Mobile No.</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Mobile Number\" name=\"nokMobile\"\r\n                             value={formData.nokMobile}\r\n                             onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Address 1</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Address 1\" name=\"nokAddress1\" value={formData.nokAddress1}\r\n                             onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Address 2</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Address 2\" name=\"nokAddress2\" value={formData.nokAddress2}\r\n                             onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Country</label>\r\n                      <select className=\"form-select\" name=\"nokCountry\" value={formData.nokCountry}\r\n                              onChange={(e) => {\r\n                                handleAddChange(e);\r\n                                fetchNokStates(e.target.value);\r\n                              }}>\r\n                        <option value=\"\">Select Country</option>\r\n                        {countryData.map((country) => (\r\n                            <option key={country.id} value={country.id}>\r\n                              {country.countryName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">State</label>\r\n                      <select className=\"form-select\" name=\"nokState\" value={formData.nokState}\r\n                              onChange={(e) => {\r\n                                handleAddChange(e);\r\n                                fetchNokDistrict(e.target.value);\r\n                              }}>>\r\n                        <option value=\"\">Select State</option>\r\n                        {nokStateData.map((state) => (\r\n                            <option key={state.id} value={state.id}>\r\n                              {state.stateName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">District</label>\r\n                      <select className=\"form-select\" name=\"nokDistrict\" value={formData.nokDistrict} onChange={(e) => {\r\n                        handleAddChange(e)}}>\r\n                        <option value=\"\">Select District</option>\r\n                        {nokDistrictData.map((district) => (\r\n                            <option key={district.id} value={district.id}>\r\n                              {district.districtName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">City</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter City\" name=\"nokCity\" value={formData.nokCity}\r\n                             onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Pin Code</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Pin Code\" name=\"nokPinCode\" value={formData.nokPinCode}\r\n                             onChange={handleChange}/>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Emergency Contact Details Section */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                <h6 className=\"mb-0 fw-bold\">Emergency Contact Details</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">First Name</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter First Name\" name=\"emergencyFirstName\"  value={formData.emergencyFirstName} onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Last Name</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Last Name\" name=\"emergencyLastName\"  value={formData.emergencyLastName} onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Mobile No.</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Mobile Number\" name=\"emergencyMobile\"  value={formData.emergencyMobile} onChange={handleChange}/>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Vital Details Section */}\r\n        {!preConsultationFlag && (<>\r\n\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"card shadow mb-3\">\r\n                <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                  <h6 className=\"mb-0 fw-bold\">Vital Details</h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <form className=\"vital\">\r\n                    <div className=\"row g-3 align-items-center\">\r\n                      {/* Patient Height */}\r\n                      <div className=\"col-md-4 d-flex\">\r\n                        <label className=\"form-label me-2\">Height<span className=\"text-danger\">*</span></label>\r\n                        <input type=\"number\" className={`form-control ${errors.height ? 'is-invalid' : ''}`} min={0}\r\n                               placeholder=\"Height\" name=\"height\" value={formData.height} onChange={handleChange}/>\r\n                        <span className=\"input-group-text\">cm</span>\r\n                        {errors.height && (\r\n                            <div className=\"invalid-feedback d-block\">{errors.height}</div>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* Weight */}\r\n                      <div className=\"col-md-4 d-flex\">\r\n                        <label className=\"form-label me-2\">Weight<span className=\"text-danger\">*</span></label>\r\n                        <input type=\"number\" min={0} className={`form-control ${errors.weight ? 'is-invalid' : ''}`}\r\n                               placeholder=\"Weight\" name=\"weight\" value={formData.weight} onChange={handleChange}/>\r\n                        <span className=\"input-group-text\">kg</span>\r\n                        {errors.weight && (\r\n                            <div className=\"invalid-feedback d-block\">{errors.weight}</div>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* Temperature */}\r\n                      <div className=\"col-md-4 d-flex\">\r\n                        <label className=\"form-label me-2\">Temperature<span className=\"text-danger\">*</span></label>\r\n                        <input type=\"number\" min={0}\r\n                               className={`form-control ${errors.temperature ? 'is-invalid' : ''}`}\r\n                               placeholder=\"Temperature\" name=\"temperature\" value={formData.temperature}\r\n                               onChange={handleChange}/>\r\n                        <span className=\"input-group-text\">°F</span>\r\n                        {errors.temperature && (\r\n                            <div className=\"invalid-feedback d-block\">{errors.temperature}</div>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* BP (Systolic / Diastolic) */}\r\n                      <div className=\"col-md-4 d-flex\">\r\n                        <label className=\"form-label me-2\">BP<span className=\"text-danger\">*</span></label>\r\n                        <input type=\"number\" min={0} className={`form-control ${errors.systolicBP ? 'is-invalid' : ''}`}\r\n                               placeholder=\"Systolic\" name=\"systolicBP\" value={formData.systolicBP}\r\n                               onChange={handleChange}/>\r\n                        <span className=\"input-group-text\">/</span>\r\n                        {errors.systolicBP && (\r\n                            <div className=\"invalid-feedback d-block\">{errors.systolicBP}</div>\r\n                        )}\r\n                        <input type=\"number\" min={0}\r\n                               className={`form-control ${errors.diastolicBP ? 'is-invalid' : ''}`}\r\n                               placeholder=\"Diastolic\" name=\"diastolicBP\" value={formData.diastolicBP}\r\n                               onChange={handleChange}/>\r\n                        <span className=\"input-group-text\">mmHg</span>\r\n                        {errors.diastolicBP && (\r\n                            <div className=\"invalid-feedback d-block\">{errors.diastolicBP}</div>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* Pulse */}\r\n                      <div className=\"col-md-4 d-flex\">\r\n                        <label className=\"form-label me-2\">Pulse<span className=\"text-danger\">*</span></label>\r\n                        <input type=\"number\" min={0} className={`form-control ${errors.pulse ? 'is-invalid' : ''}`}\r\n                               placeholder=\"Pulse\" name=\"pulse\" value={formData.pulse} onChange={handleChange}/>\r\n                        <span className=\"input-group-text\">/min</span>\r\n                        {errors.pulse && (\r\n                            <div className=\"invalid-feedback d-block\">{errors.pulse}</div>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* BMI */}\r\n                      <div className=\"col-md-4 d-flex\">\r\n                        <label className=\"form-label me-2\">BMI</label>\r\n                        <input type=\"number\" min={0} className={`form-control ${errors.bmi ? 'is-invalid' : ''}`}\r\n                               placeholder=\"BMI\" name=\"bmi\" value={formData.bmi} onChange={handleChange}/>\r\n                        <span className=\"input-group-text\">kg/m²</span>\r\n                        {errors.bmi && (\r\n                            <div className=\"invalid-feedback d-block\">{errors.bmi}</div>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* RR */}\r\n                      <div className=\"col-md-4 d-flex\">\r\n                        <label className=\"form-label me-2\">RR</label>\r\n                        <input type=\"number\" min={0} className={`form-control ${errors.rr ? 'is-invalid' : ''}`}\r\n                               placeholder=\"RR\" name=\"rr\" value={formData.rr} onChange={handleChange}/>\r\n                        <span className=\"input-group-text\">/min</span>\r\n                        {errors.rr && (\r\n                            <div className=\"invalid-feedback d-block\">{errors.rr}</div>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* SpO2 */}\r\n                      <div className=\"col-md-4 d-flex\">\r\n                        <label className=\"form-label me-2\">SpO2</label>\r\n                        <input type=\"number\" min={0} className={`form-control ${errors.spo2 ? 'is-invalid' : ''}`}\r\n                               placeholder=\"SpO2\" name=\"spo2\" value={formData.spo2} onChange={handleChange}/>\r\n                        <span className=\"input-group-text\">%</span>\r\n                        {errors.height && (\r\n                            <div className=\"invalid-feedback d-block\">{errors.spo2}</div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>)}\r\n\r\n\r\n\r\n        {/* Appointment Details Section */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                <h6 className=\"mb-0 fw-bold\">Appointment Details</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Speciality</label>\r\n                      <select className=\"form-select\" name=\"speciality\" value={formData.speciality}\r\n                              onChange={(e) => {\r\n                                handleAddChange(e);\r\n                                fetchDoctor(e.target.value);\r\n                              }}>\r\n                        <option value=\"\">Select Speciality</option>\r\n                        {departmentData.map((department) => (\r\n                            <option key={department.id} value={department.id}>\r\n                              {department.departmentName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Doctor Name</label>\r\n                      <select className=\"form-select\" name=\"selDoctorId\" value={formData.selDoctorId} onChange={(e) => {\r\n                        handleAddChange(e);\r\n                        fetchSession(e);\r\n                      }}\r\n                      >\r\n                        <option value=\"\">Select Doctor</option>\r\n                        {doctorData.map((doctor) => (\r\n                            <option key={doctor.id} value={doctor.userId}>\r\n                              {`${doctor.firstName} ${doctor.middleName ? doctor.middleName : \"\"} ${doctor.lastName ? doctor.lastName : \"\"}`}\r\n                            </option>))}\r\n                        {/* Add dynamic options here */}\r\n                      </select>\r\n                    </div>\r\n                    {/*<div className=\"col-md-4\">*/}\r\n                    {/*  <label className=\"form-label\">Date *</label>*/}\r\n                    {/*  <input type=\"date\" name=\"appointmentDate\" className=\"form-control\" name=\"appointmentDate\" value={formData.appointmentDate}*/}\r\n                    {/*         onChange={(e) => {*/}\r\n                    {/*           handleAddChange(e);*/}\r\n                    {/*           fetchSession(e.target.value);*/}\r\n                    {/*         }}*/}\r\n                    {/*         min={new Date().toISOString().split(\"T\")[0]}*/}\r\n                    {/*         placeholder=\"Select Date of Appointment\"/>*/}\r\n                    {/*</div>*/}\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Session</label>\r\n                      <select className=\"form-select\" name=\"selSession\" value={formData.selSession} onChange={(e) => {\r\n                        handleAddChange(e);\r\n                      }}\r\n                      >\r\n                        <option value=\"\">Select Session</option>\r\n                        {session.map((ses) => (\r\n                            <option key={ses.id} value={ses.id}>\r\n                              {ses.sessionName}\r\n                            </option>))}\r\n                        {/* Add dynamic options here */}\r\n                      </select>\r\n                      {/*<select className=\"form-select\">*/}\r\n                      {/*  <option value=\"\">Select Session</option>*/}\r\n                      {/*  /!* Add dynamic options here *!/*/}\r\n                      {/*</select>*/}\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit and Reset Buttons */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-body\">\r\n                <div className=\"row g-3\">\r\n                  <div className=\"mt-4\">\r\n                    <button type=\"submit\" className=\"btn btn-primary me-2\"\r\n                            onClick={sendRegistrationRequest}>Registration\r\n                    </button>\r\n                    <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Changed By, Date, and Time */}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientRegistration;\r\n"],"names":["PatientRegistration","useEffect","async","setLoading","data","getRequest","ALL_GENDER","status","Array","isArray","response","setGenderData","console","error","fetchGenderData","ALL_RELATION","setRelationData","fetchRelationData","ALL_COUNTRY","setCountryData","fetchCountryData","ALL_DEPARTMENT","filteredDepartments","filter","dept","departmentTypeId","DEPARTMENT_CODE_OPD","setDepartmentData","fetchDepartment","GET_SESSION","setSession","fetchSesion","HOSPITAL","sessionStorage","getItem","preConsultationAvailable","setPreConsultationFlag","fetchHospitalDetails","errors","setErrors","useState","loading","genderData","imageURL","setImageURL","relationData","countryData","stateData","setStateData","nokStateData","setNokStateData","districtData","setDistrictData","nokDistrictData","setNokDistrictData","departmentData","doctorData","setDoctorData","session","formData","setFormData","imageurl","undefined","firstName","middleName","lastName","mobileNo","gender","relation","dob","age","email","address1","address2","country","state","district","city","pinCode","nokFirstName","nokMiddleName","nokLastName","nokEmail","nokMobile","nokAddress1","nokAddress2","nokCountry","nokState","nokDistrict","nokCity","nokPinCode","emergencyFirstName","emergencyLastName","emergencyMobile","height","weight","temperature","systolicBP","diastolicBP","pulse","bmi","rr","spo2","speciality","doctor","appointmentDate","maritalStatus","religion","emergencyRelationId","nokRelation","idealWeight","varation","department","selDoctorId","selSession","image","setImage","placeholderImage","isCameraOn","setIsCameraOn","preConsultationFlag","videoRef","useRef","canvasRef","stream","stopCamera","current","srcObject","getTracks","forEach","track","stop","confirmUpload","imageData","Swal","title","text","imageUrl","imageWidth","imageHeight","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","uploadImage","blob","fetch","base64Image","res","formData1","FormData","append","API_HOST","PATIENT_IMAGE_UPLOAD","method","body","json","extractedPath","log","checkBMI","a","b","c","sub","parseFloat","Math","round","toFixed","handleChange","e","name","value","target","updatedFormData","birthDate","Date","today","getFullYear","m","getMonth","getDate","calculateAgeFromDOB","birthYear","toISOString","split","calculateDOBFromAge","trim","test","isNaN","Number","includes","charAt","toUpperCase","slice","prevErrors","newErrors","handleAddChange","prev","sendPatientData","validateForm","requiredFields","valid","field","toString","requestData","patient","id","uhidNo","patientStatus","regDate","now","toJSON","lastChgBy","patientHospitalId","patientFn","patientMn","patientLn","patientDob","patientAge","patientGenderId","patientEmailId","patientMobileNumber","patientImage","fileName","patientRelationId","patientMaritalStatusId","patientReligionId","patientAddress1","patientAddress2","patientCity","patientPincode","patientDistrictId","patientStateId","patientCountryId","pincode","emerFn","emerLn","emerRelationId","emerMobile","nokFn","nokLn","nokMobileNumber","nokDistrictId","nokStateId","nokCountryId","nokPincode","nokRelationId","opdPatientDetail","opdDate","bpSystolic","bpDiastolic","icdDiag","workingDiag","followUpFlag","followUpDays","pastMedicalHistory","presentComplaints","familyHistory","treatmentAdvice","sosFlag","recmmdMedAdvice","medicineFlag","labFlag","radioFlag","referralFlag","mlcFlag","policeStation","policeName","patientId","visitId","departmentId","hospitalId","doctorId","visit","tokenNo","visitStatus","visitDate","doctorName","sessionId","billingStatus","priority","iniDoctorId","postRequest","PATIENT_REGISTRATION","_jsx","className","children","_jsxs","htmlFor","type","onChange","placeholder","map","genderName","relationName","max","ref","autoPlay","style","width","src","alt","display","onClick","setTimeout","navigator","mediaDevices","getUserMedia","video","disabled","capturePhoto","canvas","videoWidth","videoHeight","getContext","drawImage","toDataURL","clearPhoto","STATE_BY_COUNTRY","fetchStates","countryName","DISTRICT_BY_STATE","fetchDistrict","stateName","districtName","fetchNokStates","fetchNokDistrict","_Fragment","min","DOCTOR_BY_SPECIALITY","fetchDoctor","departmentName","doc","timestamp","GET_DOCTOR_SESSION","rosterVal","sessionVal","key","message","fetchSession","userId","ses","sessionName"],"sourceRoot":""}