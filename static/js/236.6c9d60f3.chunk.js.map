{"version":3,"file":"static/js/236.6c9d60f3.chunk.js","mappings":"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","sources":["Views/Reception/PatientRegistration/index.js","service/apiService.js"],"sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\r\nimport placeholderImage from \"../../../assets/images/placeholder.jpg\";\r\nimport {getRequest} from \"../../../service/apiService\";\r\nimport {\r\n  ALL_COUNTRY, ALL_DEPARTMENT,\r\n  ALL_GENDER,\r\n  ALL_RELATION,\r\n  DEPARTMENT,\r\n  DISTRICT_BY_STATE, DOCTOR_BY_SPECIALITY,\r\n  STATE_BY_COUNTRY\r\n} from \"../../../config/apiConfig\";\r\nconst PatientRegistration = () => {\r\n  useEffect(() => {\r\n    // Fetching gender data (simulated API response)\r\n    fetchGenderData();\r\n    fetchRelationData();\r\n    fetchCountryData();\r\n    fetchDepartment();\r\n  }, []);\r\n  const [loading, setLoading] = useState(false);\r\n  const [genderData,setGenderData]=useState([]);\r\n  const [relationData,setRelationData]=useState([]);\r\n  const [countryData,setCountryData]=useState([]);\r\n  const [stateData,setStateData]=useState([]);\r\n  const [nokStateData,setNokStateData]=useState([]);\r\n  const [districtData,setDistrictData]=useState([]);\r\n  const [nokDistrictData,setNokDistrictData]=useState([]);\r\n  const [departmentData,setDepartmentData]=useState([]);\r\n  const [doctorData,setDoctorData]=useState([]);\r\n  const [formData, setFormData] = useState({\r\n      firstName: \"\",\r\n      middleName: \"\",\r\n      lastName: \"\",\r\n      mobileNo: \"\",\r\n      gender: \"\",\r\n      relation: \"\",\r\n      dob: \"\",\r\n      age: \"\",\r\n      email: \"\",\r\n    address1: \"\",\r\n    address2: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n    district: \"\",\r\n    city: \"\",\r\n    pinCode: \"\",\r\n    nokFirstName: \"\",\r\n    nokMiddleName: \"\",\r\n    nokLastName: \"\",\r\n    nokEmail: \"\",\r\n    nokMobile: \"\",\r\n    nokAddress1: \"\",\r\n    nokAddress2: \"\",\r\n    nokCountry: \"\",\r\n    nokState: \"\",\r\n    nokDistrict: \"\",\r\n    nokCity: \"\",\r\n    nokPinCode: \"\",\r\n    emergencyFirstName: \"\",\r\n    emergencyLastName: \"\",\r\n    emergencyMobile: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    temperature: \"\",\r\n    systolicBP: \"\",\r\n    diastolicBP: \"\",\r\n    pulse: \"\",\r\n    bmi: \"\",\r\n    rr: \"\",\r\n    spo2: \"\",\r\n    speciality: \"\",\r\n    doctor: \"\",\r\n    session: \"\",\r\n    appointmentDate: \"\"\r\n\r\n  });\r\n  const [image, setImage] = useState(placeholderImage);\r\n  const [isCameraOn, setIsCameraOn] = useState(false);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  let stream = null;\r\n\r\n  const startCamera = async () => {\r\n    try {\r\n      setIsCameraOn(true); // Ensure the video element is rendered before accessing ref\r\n      setTimeout(async () => {\r\n        stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      }, 100);\r\n    } catch (error) {\r\n      console.error(\"Error accessing camera:\", error);\r\n    }\r\n  };\r\n\r\n  const capturePhoto = () => {\r\n    if (videoRef.current && canvasRef.current) {\r\n      const video = videoRef.current;\r\n      const canvas = canvasRef.current;\r\n      \r\n      // Set canvas dimensions to match video stream\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n  \r\n      const context = canvas.getContext(\"2d\");\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n  \r\n      setImage(canvas.toDataURL(\"image/png\"));\r\n      stopCamera();\r\n    }\r\n  };\r\n  \r\n\r\n  const stopCamera = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      setIsCameraOn(false);\r\n    }\r\n  };\r\n\r\n  const clearPhoto = () => {\r\n    setImage(placeholderImage);\r\n  };\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleAddChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n  async function fetchGenderData() {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const data = await getRequest(`${ALL_GENDER}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setGenderData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setGenderData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n\r\n\r\n  };\r\nasync function fetchRelationData() {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const data = await getRequest(`${ALL_RELATION}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setRelationData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setRelationData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  async function fetchCountryData() {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const data = await getRequest(`${ALL_COUNTRY}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setCountryData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setCountryData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function fetchStates(value) {\r\n    try {\r\n      const data = await getRequest(`${STATE_BY_COUNTRY}${value}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setStateData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setStateData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function fetchDistrict(value) {\r\n    try {\r\n      const data = await getRequest(`${DISTRICT_BY_STATE}${value}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setDistrictData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDistrictData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function fetchNokStates(value) {\r\n  try{\r\n\r\n    const data = await getRequest(`${STATE_BY_COUNTRY}${value}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setNokStateData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setNokStateData([]);\r\n      }\r\n    } catch (error) {\r\n        console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function fetchNokDistrict(value) {\r\n    try {\r\n      const data = await getRequest(`${DISTRICT_BY_STATE}${value}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setNokDistrictData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setNokDistrictData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\nasync function fetchDepartment() {\r\n    try {\r\n      const data = await getRequest(`${ALL_DEPARTMENT}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        const filteredDepartments = data.response.filter(\r\n            (dept) => dept.departmentCode === \"OPD\"\r\n        );\r\n        setDepartmentData(filteredDepartments);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDepartmentData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function sendRegistrationRequest() {\r\nconsole.log(formData);\r\n  }\r\n\r\n  async function fetchDoctor(value) {\r\n    try {\r\n      const data = await getRequest(`${DOCTOR_BY_SPECIALITY}${value}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setDoctorData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDoctorData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"body d-flex py-3\">\r\n      <div className=\"container-xxl\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"border-0 mb-4\">\r\n            <div className=\"card-header py-3 no-bg bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n              <h3 className=\"fw-bold mb-0\">Registration of Other Patient</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Patient Personal Details */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                <h6 className=\"mb-0 fw-bold\">Personal Details</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-9\">\r\n                      <div className=\"row g-3\">\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\">First Name *</label>\r\n                          <input type=\"text\" className=\"form-control\" name=\"firstName\" value={formData.firstName} onChange={handleChange} placeholder=\"Enter First Name\" required />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\">Middle Name</label>\r\n                          <input type=\"text\" value={formData.middleName} name=\"middleName\" onChange={handleChange} className=\"form-control\" placeholder=\"Enter Middle Name\" />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\">Last Name</label>\r\n                          <input type=\"text\" value={formData.lastName} name=\"lastName\" onChange={handleChange} className=\"form-control\" placeholder=\"Enter Last Name\" />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\">Mobile No.</label>\r\n                          <input type=\"text\" className=\"form-control\" name=\"mobileNo\" value={formData.mobileNo} onChange={handleChange} placeholder=\"Enter Mobile Number\" />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\">Gender *</label>\r\n                          <select className=\"form-select\" name=\"gender\" value={formData.gender} onChange={handleChange} required>\r\n                            <option value=\"\">Select</option>\r\n                            {genderData.map((gender) => (\r\n                                <option key={gender.id} value={gender.id}>\r\n                                  {gender.genderName}\r\n                                </option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\">Relation *</label>\r\n                          <select className=\"form-select\" name=\"relation\"  value={formData.relation} onChange={handleChange} required>\r\n                            <option value=\"\">Select</option>\r\n                            {relationData.map((relation) => (\r\n                                <option key={relation.id} value={relation.id}>\r\n                                  {relation.relationName}\r\n                                </option>))}\r\n                              </select>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\">DOB *</label>\r\n                          <input type=\"date\" name=\"dob\" className=\"form-control\" value={formData.dob}\r\n                                 max={new Date().toISOString().split(\"T\")[0]}\r\n                                 onChange={handleChange} placeholder=\"Select Date of Birth\" required />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\">Age</label>\r\n                          <input type=\"number\" name=\"age\" className=\"form-control\"  value={formData.age} onChange={(e) => {\r\n                            const ageValue = e.target.value;\r\n                            if (ageValue === \"\" || (Number(ageValue) >= 0 && Number(ageValue) <= 130)) {\r\n                              setFormData({ ...formData, age: ageValue });\r\n                            }\r\n                          }}\r\n                                 max=\"130\" placeholder=\"Enter Age\" />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"form-label\">Email *</label>\r\n                          <input type=\"email\" name=\"email\" className=\"form-control\" value={formData.email} onChange={handleChange} placeholder=\"Enter Email Address\" required />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"card p-3 shadow\">\r\n                        {isCameraOn ? (\r\n                          <video ref={videoRef} autoPlay className=\"d-block mx-auto\" style={{ width: \"100%\", height: \"150px\" }}></video>\r\n                        ) : (\r\n                          <img src={image} alt=\"Profile\" className=\"img-fluid border\" style={{ width: \"100%\", height: \"150px\" }} />\r\n                        )}\r\n                        <canvas ref={canvasRef} style={{ display: \"none\" }}></canvas>\r\n                        <div className=\"mt-2\">\r\n                          <button type=\"button\" className=\"btn btn-primary me-2 mb-2\" onClick={startCamera} disabled={isCameraOn}>\r\n                            Start Camera\r\n                          </button>\r\n                          {isCameraOn && (\r\n                            <button type=\"button\" className=\"btn btn-success me-2 mb-2\" onClick={capturePhoto}>\r\n                              Take Photo\r\n                            </button>\r\n                          )}\r\n                          <button type=\"button\" className=\"btn btn-danger mb-2\" onClick={clearPhoto}>\r\n                            Clear Photo\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    </div>  \r\n\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Patient address */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                <h6 className=\"mb-0 fw-bold\">Patient Address</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                <div className=\"row g-3\">\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Address 1</label>\r\n                      <input type=\"text\" className=\"form-control\" name=\"address1\" value={formData.address1} onChange={handleChange} placeholder=\"Enter Address 1\" />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Address 2</label>\r\n                      <input type=\"text\" className=\"form-control\" name=\"address2\" value={formData.address2} onChange={handleChange} placeholder=\"Enter Address 2\" />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Country</label>\r\n                      <select className=\"form-select\" name=\"country\" value={formData.country} onChange={(e) => {\r\n                        handleAddChange(e);\r\n                        fetchStates(e.target.value);\r\n                      }}>\r\n                        <option value=\"\">Select Country</option>\r\n                        {countryData.map((country) => (\r\n                            <option key={country.id} value={country.id}>\r\n                              {country.countryName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">State</label>\r\n                      <select className=\"form-select\" name=\"state\"  value={formData.state} onChange={(e) => {\r\n                        handleAddChange(e);\r\n                        fetchDistrict(e.target.value);\r\n                      }}>\r\n                        <option value=\"\">Select State</option>\r\n                        {stateData.map((state) => (\r\n                            <option key={state.id} value={state.id}>\r\n                              {state.stateName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">District</label>\r\n                      <select className=\"form-select\" name=\"district\"  value={formData.district} onChange={(e) => {\r\n                        handleAddChange(e);\r\n                      }}>\r\n                        <option value=\"\">Select District</option>\r\n                        {districtData.map((district) => (\r\n                            <option key={district.id} value={district.id}>\r\n                              {district.districtName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">City</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"city\" value={formData.city} onChange={handleChange} placeholder=\"Enter City\"/>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Pin Code</label>\r\n                      <input type=\"text\" className=\"form-control\" name=\"pinCode\" value={formData.pinCode} onChange={handleChange} placeholder=\"Enter Pin Code\" />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* NOK Details */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                <h6 className=\"mb-0 fw-bold\">NOK Details</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">First Name</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter First Name\"  name=\"nokFirstName\"\r\n                             value={formData.nokFirstName}\r\n                             onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Middle Name</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Middle Name\"  name=\"nokMiddleName\"\r\n                             value={formData.nokMiddleName}\r\n                             onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Last Name</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Last Name\" name=\"nokLastName\"\r\n                             value={formData.nokLastName}\r\n                             onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Email</label>\r\n                      <input type=\"email\" className=\"form-control\" placeholder=\"Enter Email\"  name=\"nokEmail\"\r\n                             value={formData.nokEmail}\r\n                             onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Mobile No.</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Mobile Number\" name=\"nokMobile\"\r\n                             value={formData.nokMobile}\r\n                             onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Address 1</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Address 1\" name=\"nokAddress1\" value={formData.nokAddress1}\r\n                             onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Address 2</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Address 2\" name=\"nokAddress2\" value={formData.nokAddress2}\r\n                             onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Country</label>\r\n                      <select className=\"form-select\" name=\"nokCountry\" value={formData.nokCountry}\r\n                              onChange={(e) => {\r\n                                handleAddChange(e);\r\n                                fetchNokStates(e.target.value);\r\n                              }}>\r\n                        <option value=\"\">Select Country</option>\r\n                        {countryData.map((country) => (\r\n                            <option key={country.id} value={country.id}>\r\n                              {country.countryName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">State</label>\r\n                      <select className=\"form-select\" name=\"nokState\" value={formData.nokState}\r\n                              onChange={(e) => {\r\n                                handleAddChange(e);\r\n                                fetchNokDistrict(e.target.value);\r\n                              }}>>\r\n                        <option value=\"\">Select State</option>\r\n                        {nokStateData.map((state) => (\r\n                            <option key={state.id} value={state.id}>\r\n                              {state.stateName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">District</label>\r\n                      <select className=\"form-select\" name=\"nokDistrict\" value={formData.nokDistrict} onChange={(e) => {\r\n                        handleAddChange(e)}}>\r\n                        <option value=\"\">Select District</option>\r\n                        {nokDistrictData.map((district) => (\r\n                            <option key={district.id} value={district.id}>\r\n                              {district.districtName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">City</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter City\" name=\"nokCity\" value={formData.nokCity}\r\n                             onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Pin Code</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Pin Code\" name=\"nokPinCode\" value={formData.nokPinCode}\r\n                             onChange={handleChange}/>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Emergency Contact Details Section */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                <h6 className=\"mb-0 fw-bold\">Emergency Contact Details</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">First Name</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter First Name\" name=\"emergencyFirstName\"  value={formData.emergencyFirstName} onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Last Name</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Last Name\" name=\"emergencyLastName\"  value={formData.emergencyLastName} onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Mobile No.</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Mobile Number\" name=\"emergencyMobile\"  value={formData.emergencyMobile} onChange={handleChange}/>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n       \r\n        {/* Vital Details Section */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                <h6 className=\"mb-0 fw-bold\">Vital Details</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"vital\">\r\n                  <div className=\"row g-3 align-items-center\">\r\n                    {/* Patient Height */}\r\n                    <div className=\"col-md-4 d-flex\">\r\n                      <label className=\"form-label me-2\">Patient Height<span className=\"text-danger\">*</span></label>\r\n                      <input type=\"number\" className=\"form-control\" placeholder=\"Height\" name=\"height\" value={formData.height} onChange={handleChange} />\r\n                      <span className=\"input-group-text\">cm</span>\r\n                    </div>\r\n\r\n                    {/* Weight */}\r\n                    <div className=\"col-md-4 d-flex\">\r\n                      <label className=\"form-label me-2\">Weight<span className=\"text-danger\">*</span></label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Weight\" name=\"weight\" value={formData.weight} onChange={handleChange}/>\r\n                      <span className=\"input-group-text\">kg</span>\r\n                    </div>\r\n\r\n                    {/* Temperature */}\r\n                    <div className=\"col-md-4 d-flex\">\r\n                      <label className=\"form-label me-2\">Temperature<span className=\"text-danger\">*</span></label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Temperature\"  name=\"temperature\" value={formData.temperature} onChange={handleChange}/>\r\n                      <span className=\"input-group-text\">°F</span>\r\n                    </div>\r\n\r\n                    {/* BP (Systolic / Diastolic) */}\r\n                    <div className=\"col-md-4 d-flex\">\r\n                      <label className=\"form-label me-2\">BP<span className=\"text-danger\">*</span></label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Systolic\" name=\"systolicBP\" value={formData.systolicBP} onChange={handleChange}/>\r\n                      <span className=\"input-group-text\">/</span>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Diastolic\" name=\"diastolicBP\" value={formData.diastolicBP} onChange={handleChange}/>\r\n                      <span className=\"input-group-text\">mmHg</span>\r\n                    </div>\r\n\r\n                    {/* Pulse */}\r\n                    <div className=\"col-md-4 d-flex\">\r\n                      <label className=\"form-label me-2\">Pulse<span className=\"text-danger\">*</span></label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Pulse\" name=\"pulse\" value={formData.pulse} onChange={handleChange}/>/>\r\n                      <span className=\"input-group-text\">/min</span>\r\n                    </div>\r\n\r\n                    {/* BMI */}\r\n                    <div className=\"col-md-4 d-flex\">\r\n                      <label className=\"form-label me-2\">BMI</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"BMI\" name=\"bmi\" value={formData.bmi} onChange={handleChange}/> disabled />\r\n                      <span className=\"input-group-text\">kg/m²</span>\r\n                    </div>\r\n\r\n                    {/* RR */}\r\n                    <div className=\"col-md-4 d-flex\">\r\n                      <label className=\"form-label me-2\">RR</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"RR\" name=\"rr\" value={formData.rr} onChange={handleChange}/>/>\r\n                      <span className=\"input-group-text\">/min</span>\r\n                    </div>\r\n\r\n                    {/* SpO2 */}\r\n                    <div className=\"col-md-4 d-flex\">\r\n                      <label className=\"form-label me-2\">SpO2</label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"SpO2\" name=\"spo2\" value={formData.spo2} onChange={handleChange}/>/>\r\n                      <span className=\"input-group-text\">%</span>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {/* Appointment Details Section */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                <h6 className=\"mb-0 fw-bold\">Appointment Details</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"row g-3\">\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Speciality</label>\r\n                      <select className=\"form-select\" name=\"speciality\" value={formData.speciality}\r\n                              onChange={(e) => {\r\n                                handleAddChange(e);\r\n                                fetchDoctor(e.target.value);\r\n                              }}>\r\n                        <option value=\"\">Select Speciality</option>\r\n                        {departmentData.map((department) => (\r\n                            <option key={department.id} value={department.id}>\r\n                              {department.departmentName}\r\n                            </option>))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Doctor Name</label>\r\n                      <select className=\"form-select\">\r\n                        <option value=\"\">Select Doctor</option>\r\n                        {doctorData.map((doctor) => (\r\n                            <option key={doctor.id} value={doctor.id}>\r\n                              {`${doctor.firstName} ${doctor.middleName?doctor.middleName:\"\"} ${doctor.lastName?doctor.lastName:\"\"}`}\r\n                            </option>))}\r\n                        {/* Add dynamic options here */}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Date *</label>\r\n                      <input type=\"date\" name=\"appointmentDate\" className=\"form-control\" name=\"appointmentDate\" value={formData.appointmentDate}\r\n                             onChange={handleChange}\r\n                             min={new Date().toISOString().split(\"T\")[0]}\r\n                             placeholder=\"Select Date of Appointment\"/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <label className=\"form-label\">Session</label>\r\n                      <select className=\"form-select\">\r\n                        <option value=\"\">Select Session</option>\r\n                        {/* Add dynamic options here */}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit and Reset Buttons */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"card shadow mb-3\">\r\n              <div className=\"card-body\">\r\n                <div className=\"row g-3\">\r\n                  <div className=\"mt-4\">\r\n                    <button type=\"submit\" className=\"btn btn-primary me-2\" onClick={sendRegistrationRequest()}>Registration</button>\r\n                    <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Changed By, Date, and Time */}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientRegistration;\r\n","import { API_HOST } from \"../config/apiConfig\";\r\nconst BASE_URL = API_HOST;\r\n\r\n/**\r\n * Function to call GET API\r\n * @param {string} endpoint - The API endpoint\r\n * @param {object} headers - Optional headers\r\n * @returns {Promise<object>} - API response\r\n */\r\nexport const getRequest = async (endpoint, headers = {}) => {\r\n  try {\r\n    let token;\r\n    if (localStorage.token) {\r\n      token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n    } else {\r\n      token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n    }\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...token,\r\n        ...headers,\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`GET request failed: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"GET Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Function to call POST API\r\n * @param {string} endpoint - The API endpoint\r\n * @param {object} data - Request body\r\n * @param {object} headers - Optional headers\r\n * @returns {Promise<object>} - API response\r\n */\r\nexport const postRequest = async (endpoint, data, headers = {}) => {\r\n  try {\r\n    let token;\r\n    if (localStorage.token) {\r\n      token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n    } else {\r\n      token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n    }\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...token,\r\n        ...headers,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`POST request failed: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"POST Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Function to call PUT API\r\n * @param {string} endpoint - The API endpoint\r\n * @param {object} data - Request body\r\n * @param {object} headers - Optional headers\r\n * @returns {Promise<object>} - API response\r\n */\r\nexport const putRequest = async (endpoint, data, headers = {}) => {\r\n  try {\r\n    let token;\r\n    if (localStorage.token) {\r\n      token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n    } else {\r\n      token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n    }\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...token,\r\n        ...headers,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`PUT request failed: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"PUT Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\nconst uploadFileWithJson = async (endpoint, jsonData, files) => {\r\n  if (!files || !(files instanceof FileList || files instanceof File)) {\r\n    throw new Error(\"No valid file provided!\");\r\n  }\r\n\r\n  let token = localStorage.token\r\n    ? { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n    : { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n\r\n  // Add the file (only the first file if it's a FileList)\r\n  if (files instanceof FileList) {\r\n    formData.append(\"files\", files[0]); // Backend expects a single file\r\n  } else {\r\n    formData.append(\"files\", files); // Single file\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"POST\",\r\n      headers: { ...token },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file upload:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\nexport { uploadFileWithJson };\r\n\r\n\r\nconst updateFileWithJson = async (endpoint, jsonData, files) => {\r\n\r\n  let token = localStorage.token\r\n    ? { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n    : { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n\r\n  if (files instanceof FileList) {\r\n    formData.append(\"files\", files[0]); \r\n  } else {\r\n    formData.append(\"files\", files); \r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"PUT\", \r\n      headers: { ...token },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file upload:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\nexport { updateFileWithJson };\r\n\r\n\r\n\r\nasync function uploadMultiFileWithJson(endpoint, jsonData, files1, files2) {\r\n  let token;\r\n  if (localStorage.token) {\r\n    token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n  } else {\r\n    token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n  formData.append(`bannerImage`, files1);\r\n  formData.append(`thumbImage`, files2);\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        ...token,\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(errorText || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file upload:\", error.message);\r\n    throw error;\r\n  }\r\n}\r\nexport { uploadMultiFileWithJson };\r\n\r\n\r\n\r\nasync function updateMultiFileWithJson(endpoint, jsonData, files1, files2) {\r\n  let token;\r\n  if (localStorage.token) {\r\n    token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n  } else {\r\n    token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n  if (files1) {\r\n    formData.append(\"bannerImage\", files1);\r\n  }\r\n  if (files2) {\r\n    formData.append(\"thumbImage\", files2);\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"PUT\", // Use PUT or PATCH based on your API\r\n      headers: {\r\n        ...token,\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(errorText || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file update:\", error.message);\r\n    throw error;\r\n  }\r\n}\r\nexport { updateMultiFileWithJson };\r\n"],"names":["PatientRegistration","useEffect","async","setLoading","data","getRequest","ALL_GENDER","status","Array","isArray","response","setGenderData","console","error","fetchGenderData","ALL_RELATION","setRelationData","fetchRelationData","ALL_COUNTRY","setCountryData","fetchCountryData","ALL_DEPARTMENT","filteredDepartments","filter","dept","departmentCode","setDepartmentData","fetchDepartment","loading","useState","genderData","relationData","countryData","stateData","setStateData","nokStateData","setNokStateData","districtData","setDistrictData","nokDistrictData","setNokDistrictData","departmentData","doctorData","setDoctorData","formData","setFormData","firstName","middleName","lastName","mobileNo","gender","relation","dob","age","email","address1","address2","country","state","district","city","pinCode","nokFirstName","nokMiddleName","nokLastName","nokEmail","nokMobile","nokAddress1","nokAddress2","nokCountry","nokState","nokDistrict","nokCity","nokPinCode","emergencyFirstName","emergencyLastName","emergencyMobile","height","weight","temperature","systolicBP","diastolicBP","pulse","bmi","rr","spo2","speciality","doctor","session","appointmentDate","image","setImage","placeholderImage","isCameraOn","setIsCameraOn","videoRef","useRef","canvasRef","stream","stopCamera","current","srcObject","getTracks","forEach","track","stop","handleChange","e","target","name","value","handleAddChange","prev","_jsx","className","children","_jsxs","type","onChange","placeholder","required","map","id","genderName","relationName","max","Date","toISOString","split","ageValue","Number","ref","autoPlay","style","width","src","alt","display","onClick","setTimeout","navigator","mediaDevices","getUserMedia","video","disabled","capturePhoto","canvas","videoWidth","videoHeight","getContext","drawImage","toDataURL","clearPhoto","STATE_BY_COUNTRY","fetchStates","countryName","DISTRICT_BY_STATE","fetchDistrict","stateName","districtName","fetchNokStates","fetchNokDistrict","DOCTOR_BY_SPECIALITY","fetchDoctor","department","departmentName","min","log","BASE_URL","API_HOST","endpoint","headers","arguments","length","undefined","token","localStorage","Authorization","getItem","sessionStorage","fetch","method","ok","Error","json","postRequest","body","JSON","stringify"],"sourceRoot":""}