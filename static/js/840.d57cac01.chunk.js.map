{"version":3,"file":"static/js/840.d57cac01.chunk.js","mappings":"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","sources":["Views/Admin/Employee/EmployeeRegistrartion/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport placeholderImage from \"../../../../assets/images/placeholder.jpg\";\r\nimport { MAS_COUNTRY, MAS_DISTRICT, MAS_STATE, MAS_DEPARTMENT, MAS_GENDER, MAS_ROLES, MAS_IDENTIFICATION_TYPE, API_HOST, MAS_EMPLOYMENT_TYPE, MAS_USER_TYPE, EMPLOYEE_REGISTRATION } from \"../../../../config/apiConfig\";\r\nimport { getRequest, putRequest, postRequestWithFormData } from \"../../../../service/apiService\";\r\nimport Popup from \"../../../../Components/popup\";\r\n\r\nconst EmployeeRegistration = () => {\r\n    const initialFormData = {\r\n        profilePicName: null,\r\n        idDocumentName: null,\r\n\r\n        firstName: \"\",\r\n        middleName: \"\",\r\n        lastName: \"\",\r\n        dob: \"\",\r\n        genderId: \"\",\r\n        address1: \"\",\r\n        countryId: \"\",\r\n        stateId: \"\",\r\n        districtId: \"\",\r\n        city: \"\",\r\n        pincode: \"\",\r\n        mobileNo: \"\",\r\n        identificationType: \"\",\r\n        registrationNo: \"\",\r\n        employmentTypeId: \"\",\r\n        employeeTypeId: \"\",\r\n        roleId: \"\",\r\n        fromDate: \"\",\r\n\r\n        deprtId: \"\",\r\n\r\n        qualification: [{ employeeQualificationId: 1, institutionName: \"\", completionYear: \"\", qualificationName: \"\", filePath: null }],\r\n        document: [{ employeeDocumentId: 1, documentName: \"\", filePath: null }],\r\n    };\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [popup, setPopup] = useState(\"\");\r\n    const [popupMessage, setPopupMessage] = useState(\"\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [departmentData, setDepartmentData] = useState([]);\r\n    const [viewDept, setviewDept] = useState(false);\r\n    const [countryData, setCountryData] = useState([]);\r\n    const [stateData, setStateData] = useState([]);\r\n    const [districtData, setDistrictData] = useState([]);\r\n    const [genderData, setGenderData] = useState([]);\r\n    const [idTypeData, setIdTypeData] = useState([]);\r\n    const [roleData, setRoleData] = useState([]);\r\n    const [employeeTypeData, setEmployeeTypeData] = useState([]);\r\n    const [employmentTypeData, setEmploymentTypeData] = useState([]);\r\n\r\n    const [countryIds, setCountryIds] = useState(\"\");\r\n    const [stateIds, setStateIds] = useState(\"\");\r\n    // const token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MjA5MTUwOTUzIiwiaG9zcGl0YWxJZCI6MTIsImVtcGxveWVlSWQiOjI0LCJleHAiOjE3NDU5MjM0MDEsInVzZXJJZCI6MjYsImlhdCI6MTc0NTMxODYwMX0.LkEVliY-PDFfP8wEN500oWOt-fv2prXTR2EkuGhOtFbWfHhPN1jUruuQAphE2-YMXI6a9RkGTfw_APgWgq9WQg\";\r\n\r\n    const token = sessionStorage.getItem(\"token\") || localStorage.getItem(\"token\");\r\n\r\n\r\n    console.log(\"form\", formData);\r\n\r\n\r\n    const mlenght = 15;\r\n\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n\r\n    useEffect(() => {\r\n        fetchCountryData();\r\n        fetchDepartmentData();\r\n        fetchGenderData();\r\n        fetchIdTypeData();\r\n        fetchRoleData();\r\n        fetchEmployeeTypeData();\r\n        fetchEmploymentTypeData();\r\n    }, []);\r\n\r\n    const showPopup = (message, type = \"info\") => {\r\n        setPopupMessage({\r\n            message,\r\n            type,\r\n            onClose: () => {\r\n                setPopupMessage(null);\r\n            },\r\n        });\r\n    };\r\n\r\n    const fetchCountryData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${MAS_COUNTRY}/getAll/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setCountryData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setCountryData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching country data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDepartmentData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${MAS_DEPARTMENT}/getAll/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setDepartmentData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setDepartmentData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching Department data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchStateData = async (countryIds) => {\r\n        setLoading(true);\r\n        try {\r\n            const GET_STATES = `${MAS_STATE}/getByCountryId/${countryIds}`;\r\n            const data = await getRequest(GET_STATES);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setStateData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setStateData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching state data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDistrictData = async (stateIds) => {\r\n        setLoading(true);\r\n        try {\r\n            const GET_CITIES = `${MAS_DISTRICT}/getByState/${stateIds}`;\r\n            const data = await getRequest(GET_CITIES);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setDistrictData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setDistrictData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching city data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchGenderData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${MAS_GENDER}/getAll/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setGenderData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setGenderData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching Gender data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchIdTypeData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${MAS_IDENTIFICATION_TYPE}/getAll/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setIdTypeData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setIdTypeData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching IdType data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchEmployeeTypeData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${MAS_USER_TYPE}/getAll/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setEmployeeTypeData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setEmployeeTypeData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching EmployeeType data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchEmploymentTypeData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${MAS_EMPLOYMENT_TYPE}/getAll/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setEmploymentTypeData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setEmploymentTypeData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching EmploymentType data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchRoleData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${MAS_ROLES}/getAll/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setRoleData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setRoleData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching Role data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCountryChange = (countryCode, id) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            countryId: id,\r\n            stateId: \"\",\r\n            districtId: \"\",\r\n        }));\r\n        fetchStateData(countryCode);\r\n    };\r\n\r\n    const handleStateChange = (stateCode, id) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            stateId: id,\r\n            districtId: \"\",\r\n        }));\r\n        fetchDistrictData(stateCode);\r\n    };\r\n\r\n    const handleDistrictChange = (districtId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            districtId: districtId,\r\n        }));\r\n    };\r\n\r\n    const handleGenderChange = (gendersId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            genderId: gendersId,\r\n        }));\r\n    };\r\n\r\n    const handleDepartmentChange = (deprtId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            deprtId: deprtId,\r\n        }));\r\n    };\r\n\r\n    const handleEmploymentTypeChange = (emptTypeId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            employmentTypeId: emptTypeId,\r\n        }));\r\n    };\r\n\r\n    const handleEmployeeTypeChange = (empTypeId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            employeeTypeId: empTypeId,\r\n        }));\r\n    };\r\n\r\n    const handleRoleChange = (role) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            roleId: role,\r\n        }));\r\n    };\r\n\r\n    const handleIdTypeChange = (idTypeId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            identificationType: idTypeId,\r\n        }));\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setFormData((prevFormData) => ({\r\n                    ...prevFormData,\r\n                    profilePicName: file,\r\n                    profilePicPreview: reader.result,\r\n                }));\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const handleInputMobileChange = (e) => {\r\n        const { id, value } = e.target;\r\n        const numericValue = value.replace(/\\D/g, '');\r\n        setFormData((prevData) => ({ ...prevData, [id]: numericValue }));\r\n    };\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const { id, value } = e.target;\r\n        setFormData((prevData) => ({ ...prevData, [id]: value }));\r\n    };\r\n\r\n    const addEducationRow = (e) => {\r\n        e.preventDefault();\r\n\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            qualification: [\r\n                ...prev.qualification,\r\n                { id: prev.qualification.length + 1, institutionName: \"\", completionYear: \"\", qualificationName: \"\", filePath: null },\r\n            ],\r\n        }));\r\n    };\r\n\r\n    const removeEducationRow = (index) => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            qualification: prev.qualification.filter((_, i) => i !== index),\r\n        }));\r\n    };\r\n\r\n    const addDocumentRow = () => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            document: [\r\n                ...prev.document,\r\n                { id: prev.document.length + 1, documentName: \"\", filePath: null },\r\n            ],\r\n        }));\r\n    };\r\n\r\n    const removeDocumentRow = (index) => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            document: prev.document.filter((_, i) => i !== index),\r\n        }));\r\n    };\r\n\r\n    const handleQualificationChange = (index, field, value) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            qualification: prev.qualification.map((item, i) =>\r\n                i === index ? { ...item, [field]: value } : item\r\n            )\r\n        }));\r\n    };\r\n\r\n    const handleQualificationYearChange = (index, field, value) => {\r\n        const numericValue = value.replace(/\\D/g, '').slice(0, 4);\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            qualification: prev.qualification.map((item, i) =>\r\n                i === index ? { ...item, [field]: numericValue } : item\r\n            )\r\n        }));\r\n    };\r\n\r\n\r\n    const handleDocumentChange = (index, field, value) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            document: prev.document.map((item, i) =>\r\n                i === index ? { ...item, [field]: value } : item\r\n            )\r\n        }));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const requiredFields = [\r\n            'firstName', 'lastName', 'dob', 'genderId', 'address1',\r\n            'countryId', 'stateId', 'districtId', 'city', 'pincode',\r\n            'mobileNo', 'identificationType', 'registrationNo'\r\n        ];\r\n\r\n        for (const field of requiredFields) {\r\n            if (!formData[field]) {\r\n                showPopup(`Please fill in the required field: ${field.replace(/([A-Z])/g, ' $1').replace(/^./, (str) => str.toUpperCase())}`, \"error\");\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (!formData.profilePicName) {\r\n            showPopup(\"Profile picture is required\", \"error\");\r\n            return false;\r\n        }\r\n\r\n        if (!formData.idDocumentName) {\r\n            showPopup(\"ID document is required\", \"error\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const prepareFormData = () => {\r\n        if (!validateForm()) {\r\n            return null;\r\n        }\r\n\r\n        const formDataToSend = new FormData();\r\n\r\n        formDataToSend.append('firstName', formData.firstName);\r\n        formDataToSend.append('lastName', formData.lastName);\r\n        if (formData.middleName) formDataToSend.append('middleName', formData.middleName);\r\n        formDataToSend.append('dob', new Date(formData.dob).toISOString().split('T')[0]);\r\n        formDataToSend.append('genderId', formData.genderId);\r\n        formDataToSend.append('address1', formData.address1);\r\n        formDataToSend.append('countryId', formData.countryId);\r\n        formDataToSend.append('stateId', formData.stateId);\r\n        formDataToSend.append('districtId', formData.districtId);\r\n        formDataToSend.append('city', formData.city);\r\n        formDataToSend.append('pincode', formData.pincode);\r\n        formDataToSend.append('mobileNo', formData.mobileNo);\r\n        formDataToSend.append('registrationNo', formData.registrationNo);\r\n        formDataToSend.append('identificationType', formData.identificationType);\r\n        formDataToSend.append('employeeTypeId', formData.employeeTypeId);\r\n        formDataToSend.append('employmentTypeId', formData.employmentTypeId);\r\n        formDataToSend.append('roleId', formData.roleId);\r\n        formDataToSend.append('fromDate', new Date(formData.fromDate).toISOString());\r\n\r\n        if (formData.deprtId) {\r\n            formDataToSend.append('departmentId', formData.deprtId);\r\n        }\r\n\r\n        // Files Handling\r\n        if (formData.profilePicName) {\r\n            formDataToSend.append('profilePicName', formData.profilePicName);\r\n        }\r\n        if (formData.idDocumentName) {\r\n            formDataToSend.append('idDocumentName', formData.idDocumentName);\r\n        }\r\n\r\n        // Qualification\r\n        formData.qualification.forEach((qual, index) => {\r\n            formDataToSend.append(`qualification[${index}].employeeQualificationId`, qual.employeeQualificationId || '');\r\n            formDataToSend.append(`qualification[${index}].institutionName`, qual.institutionName);\r\n            formDataToSend.append(`qualification[${index}].completionYear`, qual.completionYear);\r\n            formDataToSend.append(`qualification[${index}].qualificationName`, qual.qualificationName);\r\n            if (qual.filePath) {\r\n                formDataToSend.append(`qualification[${index}].filePath`, qual.filePath);\r\n            }\r\n        });\r\n\r\n        // Documents\r\n        formData.document.forEach((doc, index) => {\r\n            formDataToSend.append(`document[${index}].employeeDocumentId`, doc.employeeDocumentId || '');\r\n            formDataToSend.append(`document[${index}].documentName`, doc.documentName);\r\n            if (doc.filePath) {\r\n                formDataToSend.append(`document[${index}].filePath`, doc.filePath);\r\n            }\r\n        });\r\n\r\n        return formDataToSend;\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setFormData(initialFormData);\r\n        \r\n        // Reset profile image preview\r\n        const profileImageInput = document.getElementById('profilePicName');\r\n        if (profileImageInput) profileImageInput.value = '';\r\n        \r\n        // Reset ID document\r\n        const idDocumentInput = document.getElementById('idDocumentName');\r\n        if (idDocumentInput) idDocumentInput.value = '';\r\n        \r\n        // Reset all file inputs by their class name\r\n        const fileInputs = document.querySelectorAll('input[type=\"file\"]');\r\n        fileInputs.forEach(input => {\r\n            input.value = '';\r\n        });\r\n\r\n        // Reset form data with initial values\r\n        setFormData({\r\n            ...initialFormData,\r\n            profilePicPreview: null,\r\n            profilePicName: null,\r\n            idDocumentName: null,\r\n            qualification: [{ \r\n                employeeQualificationId: 1, \r\n                institutionName: \"\", \r\n                completionYear: \"\", \r\n                qualificationName: \"\", \r\n                filePath: null \r\n            }],\r\n            document: [{ \r\n                employeeDocumentId: 1, \r\n                documentName: \"\", \r\n                filePath: null \r\n            }]\r\n        });\r\n\r\n        // Reset file related states\r\n        setProfileImage(null);\r\n    };\r\n\r\n    const handleCreate = async () => {\r\n        const formDataToSend = prepareFormData();\r\n        if (!formDataToSend) return;\r\n    \r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_HOST}/${EMPLOYEE_REGISTRATION}/create`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: formDataToSend\r\n            });\r\n    \r\n            const data = await response.json();\r\n    \r\n            if (!response.ok || data.status === 500) {\r\n                throw new Error(data.message || \"Failed to create employee\");\r\n            }\r\n    \r\n            showPopup(\"Employee created successfully\", \"success\");\r\n            handleReset();\r\n    \r\n        } catch (error) {\r\n            console.error(\"Error creating employee:\", error);\r\n            showPopup(error.message || \"Error submitting form. Please try again.\", \"error\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    \r\n\r\n    const handleCreateWithApprove = async () => {\r\n        const formDataToSend = prepareFormData();\r\n        if (!formDataToSend) return;\r\n    \r\n        if (!formData.deprtId) {\r\n            setviewDept(true);\r\n            showPopup(\"Department is required for approval. Please select a department.\", \"error\");\r\n            return;\r\n        }\r\n    \r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_HOST}/${EMPLOYEE_REGISTRATION}/create-and-approve`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: formDataToSend\r\n            });\r\n    \r\n            const data = await response.json(); \r\n    \r\n            if (!response.ok || data.status === 500) {\r\n                throw new Error(data.message || `Failed with status: ${response.status}`);\r\n            }\r\n    \r\n            showPopup(\"Employee created and approved successfully\", \"success\");\r\n            handleReset();\r\n    \r\n        } catch (error) {\r\n            console.error(\"Error creating and approving employee:\", error);\r\n            showPopup(error.message || \"Error creating and approving employee\", \"error\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex body py-3\">\r\n                <div className=\"container-xxl\">\r\n                    {popupMessage && (\r\n                        <Popup\r\n                            message={popupMessage.message}\r\n                            type={popupMessage.type}\r\n                            onClose={popupMessage.onClose}\r\n                        />\r\n                    )}\r\n\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"border-0 mb-4\">\r\n                            <div className=\"d-flex flex-wrap card-header align-items-center bg-transparent border-bottom justify-content-between px-0 py-3\">\r\n                                <h3 className=\"fw-bold mb-0\">Register of Employee</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* employee Section */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                                    <h6 className=\"fw-bold mb-0\">Employee Registration</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div className=\"g-3 row\">\r\n                                            <div className=\"col-md-9\">\r\n                                                <div className=\"g-3 row\">\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">First Name *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"firstName\"\r\n                                                            placeholder=\"First Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.firstName}\r\n                                                            maxLength={mlenght}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Middle Name</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"middleName\"\r\n                                                            placeholder=\"Middle Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.middleName}\r\n                                                            maxLength={mlenght}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Last Name *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"lastName\"\r\n                                                            placeholder=\"Last Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.lastName}\r\n                                                            maxLength={mlenght}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Date of Birth *</label>\r\n                                                        <input\r\n                                                            type=\"date\"\r\n                                                            required\r\n                                                            id=\"dob\"\r\n                                                            value={formData.dob}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Gender *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.genderId}\r\n                                                            onChange={(e) =>\r\n                                                                handleGenderChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Gender</option>\r\n                                                            {genderData.map((gender) => (\r\n                                                                <option key={gender.id} value={gender.id}>\r\n                                                                    {gender.genderName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Address *</label>\r\n                                                        <textarea\r\n                                                            required\r\n                                                            id=\"address1\"\r\n                                                            value={formData.address1}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                            placeholder=\"Address\"\r\n                                                        ></textarea>\r\n\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Country *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.countryId}\r\n                                                            onChange={(e) => {\r\n                                                                const selectedCountry = countryData.find(\r\n                                                                    (country) => country.id.toString() === e.target.value\r\n                                                                );\r\n                                                                handleCountryChange(selectedCountry.countryCode, selectedCountry.id);\r\n                                                                setCountryIds(selectedCountry.id);\r\n                                                                fetchStateData(selectedCountry.id);\r\n                                                            }}\r\n\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Country</option>\r\n                                                            {countryData.map((country) => (\r\n                                                                <option key={country.id} value={country.id}>\r\n                                                                    {country.countryName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">State *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.stateId}\r\n                                                            onChange={(e) => {\r\n                                                                const selectedState = stateData.find(\r\n                                                                    (state) => state.id.toString() === e.target.value\r\n                                                                );\r\n                                                                handleStateChange(selectedState.stateCode, selectedState.id);\r\n                                                                setStateIds(selectedState.id);\r\n                                                                fetchDistrictData(selectedState.id);\r\n                                                            }}\r\n\r\n                                                            disabled={loading || !formData.countryId}\r\n                                                        >\r\n                                                            <option value=\"\">Select State</option>\r\n                                                            {stateData.map((state) => (\r\n                                                                <option key={state.id} value={state.id}>\r\n                                                                    {state.stateName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">District *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.districtId}\r\n                                                            onChange={(e) => handleDistrictChange(e.target.value)}\r\n                                                            disabled={loading || !formData.stateId}\r\n                                                        >\r\n                                                            <option value=\"\">Select District</option>\r\n                                                            {districtData.map((dist) => (\r\n                                                                <option key={dist.id} value={dist.id}>\r\n                                                                    {dist.districtName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">City *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"city\"\r\n                                                            placeholder=\"City\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.city}\r\n                                                            maxLength={mlenght}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Pincode *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"pincode\"\r\n                                                            placeholder=\"Pincode\"\r\n                                                            onChange={handleInputMobileChange}\r\n                                                            value={formData.pincode}\r\n                                                            maxLength={6}\r\n                                                            minLength={6}\r\n                                                            inputMode=\"numeric\"\r\n                                                            pattern=\"\\d*\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Mobile No. *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"mobileNo\"\r\n                                                            placeholder=\"Mobile No.\"\r\n                                                            onChange={handleInputMobileChange}\r\n                                                            value={formData.mobileNo}\r\n                                                            maxLength={10}\r\n                                                            minLength={10}\r\n                                                            inputMode=\"numeric\"\r\n                                                            pattern=\"\\d*\"\r\n                                                        />\r\n\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Type *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.identificationType}\r\n                                                            onChange={(e) =>\r\n                                                                handleIdTypeChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select ID Type</option>\r\n                                                            {idTypeData.map((idType) => (\r\n                                                                <option key={idType.identificationTypeId} value={idType.identificationTypeId}>\r\n                                                                    {idType.identificationName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Number *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"registrationNo\"\r\n                                                            placeholder=\"ID Number\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.registrationNo}\r\n                                                            maxLength={mlenght}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Upload (JPEG/PDF) *</label>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            id=\"idDocumentName\"\r\n                                                            className=\"form-control mt-2\"\r\n                                                            accept=\".jpg,.jpeg,.png,.pdf\"\r\n                                                            onChange={(e) => setFormData({ ...formData, idDocumentName: e.target.files[0] })}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                    {viewDept && (\r\n                                                        <div className=\"col-md-4\">\r\n                                                            <label className=\"form-label\">Depatment Name *</label>\r\n                                                            <select\r\n                                                                className=\"form-select\"\r\n                                                                style={{ paddingRight: \"40px\" }}\r\n                                                                value={formData.deprtId}\r\n                                                                onChange={(e) =>\r\n                                                                    handleDepartmentChange(parseInt(e.target.value, 10))\r\n                                                                }\r\n                                                                disabled={loading}\r\n                                                            >\r\n                                                                <option value=\"\">Select Depatment</option>\r\n                                                                {departmentData.map((depa) => (\r\n                                                                    <option key={depa.id} value={depa.id}>\r\n                                                                        {depa.departmentName}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    )}\r\n\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Employee Type *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.employeeTypeId}\r\n                                                            onChange={(e) =>\r\n                                                                handleEmployeeTypeChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Employee Type</option>\r\n                                                            {employeeTypeData.map((empType) => (\r\n                                                                <option key={empType.userTypeId} value={empType.userTypeId}>\r\n                                                                    {empType.userTypeName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Employment Type *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.employmentTypeId}\r\n                                                            onChange={(e) =>\r\n                                                                handleEmploymentTypeChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Employment Type</option>\r\n                                                            {employmentTypeData.map((emptType) => (\r\n                                                                <option key={emptType.id} value={emptType.id}>\r\n                                                                    {emptType.employmentType}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Role *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.roleId}\r\n                                                            onChange={(e) =>\r\n                                                                handleRoleChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Role</option>\r\n                                                            {roleData.map((role) => (\r\n                                                                <option key={role.id} value={role.id}>\r\n                                                                    {role.roleDesc}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Period of Employment From Date</label>\r\n                                                        <input\r\n                                                            type=\"date\"\r\n                                                            id=\"fromDate\"\r\n                                                            value={formData.fromDate}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                            min={today}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-3 d-flex flex-column\">\r\n                                                <label className=\"form-label\">Profile Image *</label>\r\n                                                <div className=\"d-flex flex-column align-items-center border p-2\">\r\n                                                    <img\r\n                                                        src={formData.profilePicPreview || placeholderImage}\r\n                                                        alt=\"Profile\"\r\n                                                        className=\"img-fluid\"\r\n                                                        style={{ objectFit: \"cover\", maxWidth: \"100%\", height: \"150px\" }}\r\n                                                    />\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        id=\"profilePicName\"\r\n                                                        className=\"form-control mt-2\"\r\n                                                        accept=\"image/*\"\r\n                                                        onChange={handleImageChange}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Educational Qualification */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                                    <h6 className=\"fw-bold mb-0\">Educational Qualification</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>S.No</th>\r\n                                                <th>Degree</th>\r\n                                                <th>Name of Institution</th>\r\n                                                <th>Year of Completion</th>\r\n                                                <th>File Upload</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {formData.qualification.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.qualificationName}\r\n                                                            placeholder=\"Degree\"\r\n                                                            onChange={(e) => handleQualificationChange(index, \"qualificationName\", e.target.value)}\r\n                                                            maxLength={mlenght}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.institutionName}\r\n                                                            placeholder=\"Institution Name\"\r\n                                                            onChange={(e) => handleQualificationChange(index, \"institutionName\", e.target.value)}\r\n                                                            maxLength={mlenght}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"YYYY\"\r\n                                                            value={row.completionYear}\r\n                                                            onChange={(e) => handleQualificationYearChange(index, \"completionYear\", e.target.value)}\r\n                                                            maxLength={4}\r\n                                                            minLength={4}\r\n                                                            inputMode=\"numeric\"\r\n                                                            pattern=\"\\d{4}\"\r\n                                                        />\r\n\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            className=\"form-control\"\r\n                                                            data-index={index}\r\n                                                            onChange={(e) => handleQualificationChange(index, \"filePath\", e.target.files[0])}\r\n                                                            accept=\".pdf,.jpg,.jpeg,.png\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => removeEducationRow(index)}>\r\n                                                            <i className=\"icofont-close\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={addEducationRow}>\r\n                                        Add Row +\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Required Documents */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                                    <h6 className=\"fw-bold mb-0\">Required Documents</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>S.No</th>\r\n                                                <th>Document Name</th>\r\n                                                <th>File Upload</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {formData.document.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.documentName}\r\n                                                            onChange={(e) => handleDocumentChange(index, \"documentName\", e.target.value)}\r\n                                                            placeholder=\"Document Name\"\r\n                                                            maxLength={mlenght}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            className=\"form-control\"\r\n                                                            data-index={index}\r\n                                                            onChange={(e) => handleDocumentChange(index, \"filePath\", e.target.files[0])}\r\n                                                            accept=\".pdf,.jpg,.jpeg,.png\"\r\n                                                        />\r\n                                                        \r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => removeDocumentRow(index)}>\r\n                                                            <i className=\"icofont-close\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={addDocumentRow}>\r\n                                        Add Row +\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end mt-4\">\r\n                        <button\r\n                            onClick={handleCreate}\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary me-2\"\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? \"Submiting...\" : \"Submit\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={handleCreateWithApprove}\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? \"Processing...\" : \"Submit & Approve\"}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n  export default EmployeeRegistration;"],"names":["EmployeeRegistration","initialFormData","profilePicName","idDocumentName","firstName","middleName","lastName","dob","genderId","address1","countryId","stateId","districtId","city","pincode","mobileNo","identificationType","registrationNo","employmentTypeId","employeeTypeId","roleId","fromDate","deprtId","qualification","employeeQualificationId","institutionName","completionYear","qualificationName","filePath","document","employeeDocumentId","documentName","formData","setFormData","useState","popup","setPopup","popupMessage","setPopupMessage","profileImage","setProfileImage","loading","setLoading","departmentData","setDepartmentData","viewDept","setviewDept","countryData","setCountryData","stateData","setStateData","districtData","setDistrictData","genderData","setGenderData","idTypeData","setIdTypeData","roleData","setRoleData","employeeTypeData","setEmployeeTypeData","employmentTypeData","setEmploymentTypeData","countryIds","setCountryIds","stateIds","setStateIds","token","sessionStorage","getItem","localStorage","console","log","mlenght","today","Date","toISOString","split","useEffect","fetchCountryData","fetchDepartmentData","fetchGenderData","fetchIdTypeData","fetchRoleData","fetchEmployeeTypeData","fetchEmploymentTypeData","showPopup","message","type","arguments","length","undefined","onClose","async","data","getRequest","MAS_COUNTRY","status","Array","isArray","response","error","MAS_DEPARTMENT","fetchStateData","GET_STATES","MAS_STATE","fetchDistrictData","GET_CITIES","MAS_DISTRICT","MAS_GENDER","MAS_IDENTIFICATION_TYPE","MAS_USER_TYPE","MAS_EMPLOYMENT_TYPE","MAS_ROLES","handleInputMobileChange","e","id","value","target","numericValue","replace","prevData","handleInputChange","handleQualificationChange","index","field","prev","map","item","i","handleDocumentChange","prepareFormData","validateForm","requiredFields","str","toUpperCase","formDataToSend","FormData","append","forEach","qual","doc","handleReset","profileImageInput","getElementById","idDocumentInput","querySelectorAll","input","profilePicPreview","_jsx","_Fragment","children","className","_jsxs","Popup","required","placeholder","onChange","maxLength","style","paddingRight","handleGenderChange","gendersId","parseInt","prevState","disabled","gender","genderName","selectedCountry","find","country","toString","handleCountryChange","countryCode","countryName","selectedState","state","handleStateChange","stateCode","stateName","handleDistrictChange","dist","districtName","minLength","inputMode","pattern","handleIdTypeChange","idTypeId","idType","identificationTypeId","identificationName","accept","files","handleDepartmentChange","depa","departmentName","handleEmployeeTypeChange","empTypeId","empType","userTypeId","userTypeName","handleEmploymentTypeChange","emptTypeId","emptType","employmentType","handleRoleChange","role","roleDesc","min","src","placeholderImage","alt","objectFit","maxWidth","height","file","reader","FileReader","onloadend","prevFormData","result","readAsDataURL","row","handleQualificationYearChange","slice","onClick","filter","_","removeEducationRow","preventDefault","removeDocumentRow","addDocumentRow","fetch","API_HOST","EMPLOYEE_REGISTRATION","method","headers","body","json","ok","Error"],"sourceRoot":""}