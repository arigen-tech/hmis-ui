{"version":3,"file":"static/js/322.4da0f4e3.chunk.js","mappings":"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","sources":["Views/Admin/Apointment/ApointmentSetup/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { DEPARTMENT, DOCTOR, SESSION, APPOINTMENT } from \"../../../../config/apiConfig\";\r\nimport { getRequest, putRequest, postRequest } from \"../../../../service/apiService\";\r\nimport Popup from \"../../../../Components/popup\";\r\nimport LoadingScreen from \"../../../../Components/Loading\";\r\n\r\nconst AppointmentSetup = () => {\r\n  const [popup, setPopup] = useState(\"\");\r\n  const [popupMessage, setPopupMessage] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [doctor, setDoctor] = useState(\"\");\r\n  const [session, setSession] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [timeTaken, setTimeTaken] = useState(\"\");\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [filterDepartment, setFilterDepartment] = useState([]);\r\n  const [doctorData, setDoctorData] = useState([]);\r\n  const [sessionData, setSessionData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [appointmentData, setAppointmentData] = useState(null);\r\n  const [modifiedFields, setModifiedFields] = useState({});\r\n\r\n  const showPopup = (message, type = \"info\") => {\r\n    setPopupMessage({\r\n      message,\r\n      type,\r\n      onClose: () => {\r\n        setPopupMessage(null);\r\n      },\r\n    });\r\n  };\r\n\r\n  const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  const initialDaysState = daysOfWeek.reduce((acc, day) => {\r\n    acc[day] = {\r\n      startToken: \"\",\r\n      totalInterval: \"\",\r\n      totalToken: \"\",\r\n      totalOnlineToken: \"\",\r\n      maxNoOfDays: \"\",\r\n      minNoOfDays: \"\"\r\n    };\r\n    return acc;\r\n  }, {});\r\n\r\n  const [daysConfig, setDaysConfig] = useState(initialDaysState);\r\n  const [originalDaysConfig, setOriginalDaysConfig] = useState(initialDaysState);\r\n\r\n  useEffect(() => {\r\n    fetchDepartmentData();\r\n    fetchSessionData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (department) {\r\n      fetchDoctorData();\r\n    }\r\n  }, [department]);\r\n\r\n  const fetchDepartmentData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${DEPARTMENT}/getAllDepartments/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        const filteredDepartments = data.response.filter(\r\n          (dept) => dept.departmentTypeName === \"OPD\"\r\n        );\r\n        setDepartmentData(data.response);\r\n        setFilterDepartment(filteredDepartments); // Set filtered OPD departments\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDepartmentData([]);\r\n        setFilterDepartment([]); // Reset filtered data in case of unexpected response\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDoctorData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${DOCTOR}/doctorBySpeciality/${department}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setDoctorData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDoctorData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Doctor data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchSessionData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${SESSION}/getAllOpdSessions/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setSessionData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setSessionData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Session data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (department && doctor && session) {\r\n      handleFetchAppointment();\r\n    }\r\n  }, [department, doctor, session]);\r\n\r\n  const handleFetchAppointment = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setModifiedFields({});\r\n      const url = `${APPOINTMENT}/find?deptId=${department}&doctorId=${doctor}&sessionId=${session}`;\r\n      const data = await getRequest(url);\r\n      if (data?.status === 200 && data?.response) {\r\n        const { startTime, endTime, timeTaken, days } = data.response;\r\n        setAppointmentData(data.response);\r\n        setStartTime(startTime);\r\n        setEndTime(endTime);\r\n        setTimeTaken(timeTaken);\r\n        if (Array.isArray(days)) {\r\n          const updatedDaysConfig = { ...initialDaysState };\r\n          days.forEach((dayConfig) => {\r\n            const dayName = dayConfig.days || dayConfig.day;\r\n            if (dayName && updatedDaysConfig[dayName]) {\r\n              updatedDaysConfig[dayName] = {\r\n                startToken: dayConfig.startToken !== null ? dayConfig.startToken : \"\",\r\n                totalInterval: dayConfig.totalInterval !== null ? dayConfig.totalInterval : \"\",\r\n                totalToken: dayConfig.totalToken !== null ? dayConfig.totalToken : \"\",\r\n                totalOnlineToken: dayConfig.totalOnlineToken !== null ? dayConfig.totalOnlineToken : \"\",\r\n                maxNoOfDays: dayConfig.maxNoOfDays !== null ? dayConfig.maxNoOfDays : \"\",\r\n                minNoOfDays: dayConfig.minNoOfDays !== null ? dayConfig.minNoOfDays : \"\"\r\n              };\r\n            }\r\n          });\r\n          setDaysConfig(updatedDaysConfig);\r\n\r\n\r\n          setOriginalDaysConfig(JSON.parse(JSON.stringify(updatedDaysConfig)));\r\n        }\r\n      } else {\r\n        setAppointmentData(null);\r\n        setDaysConfig(initialDaysState);\r\n        setStartTime(\"\");\r\n        setEndTime(\"\");\r\n        setTimeTaken(\"\");\r\n        setOriginalDaysConfig(initialDaysState);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching appointment data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDayConfigChange = (day, field, value) => {\r\n    setDaysConfig({\r\n      ...daysConfig,\r\n      [day]: {\r\n        ...daysConfig[day],\r\n        [field]: value\r\n      }\r\n    });\r\n\r\n    const originalValue = originalDaysConfig[day][field];\r\n    const isModified = value !== originalValue;\r\n\r\n    if (isModified) {\r\n      setModifiedFields({\r\n        ...modifiedFields,\r\n        [`${day}-${field}`]: true\r\n      });\r\n    } else {\r\n      const newModifiedFields = { ...modifiedFields };\r\n      delete newModifiedFields[`${day}-${field}`];\r\n      setModifiedFields(newModifiedFields);\r\n    }\r\n  };\r\n\r\n  const isFieldModified = (day, field) => {\r\n    return modifiedFields[`${day}-${field}`] === true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const requestData = {\r\n      departmentId: department,\r\n      doctorId: doctor,\r\n      sessionId: session,\r\n      startTime,\r\n      endTime,\r\n      timeTaken,\r\n      days: daysOfWeek.map(day => {\r\n        const existingDay = appointmentData?.days?.find(d => (d.days || d.day) === day);\r\n        return {\r\n          id: appointmentData ? (existingDay?.id || null) : null,\r\n          day: day,\r\n          tokenStartNo: daysConfig[day].startToken !== \"\" ? parseInt(daysConfig[day].startToken) : null,\r\n          tokenInterval: daysConfig[day].totalInterval !== \"\" ? parseInt(daysConfig[day].totalInterval) : null,\r\n          totalToken: daysConfig[day].totalToken !== \"\" ? parseInt(daysConfig[day].totalToken) : null,\r\n          totalOnlineToken: daysConfig[day].totalOnlineToken !== \"\" ? parseInt(daysConfig[day].totalOnlineToken) : null,\r\n          maxNoOfDay: daysConfig[day].maxNoOfDays !== \"\" ? parseInt(daysConfig[day].maxNoOfDays) : null,\r\n          minNoOfday: daysConfig[day].minNoOfDays !== \"\" ? parseInt(daysConfig[day].minNoOfDays) : null\r\n        };\r\n      })\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await postRequest(`${APPOINTMENT}/setup`, requestData);\r\n\r\n      if (response.status === 200) {\r\n        showPopup(response.message || `Appointment ${appointmentData ? \"updated\" : \"created\"} successfully!`, \"success\");\r\n        setOriginalDaysConfig(JSON.parse(JSON.stringify(daysConfig)));\r\n        setModifiedFields({});\r\n        handleReset();\r\n      } else {\r\n        showPopup(`Failed to ${appointmentData ? \"update\" : \"create\"} Appointment. Please try again.`, \"error\");\r\n      }\r\n    } catch (error) {\r\n      showPopup(\r\n        \"An error occurred: \" + (error.message || \"Unknown error\"),\r\n        \"error\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setDepartment(\"\");\r\n    setDoctor(\"\");\r\n    setSession(\"\");\r\n    setStartTime(\"\");\r\n    setEndTime(\"\");\r\n    setTimeTaken(\"\");\r\n    setDaysConfig(initialDaysState);\r\n    setAppointmentData(null);\r\n    setModifiedFields({});\r\n    setOriginalDaysConfig(initialDaysState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"body d-flex py-3\">\r\n        <div className=\"container-xxl\">\r\n          {popupMessage && (\r\n            <Popup\r\n              message={popupMessage.message}\r\n              type={popupMessage.type}\r\n              onClose={popupMessage.onClose}\r\n            />\r\n\r\n          )}\r\n          {loading && (\r\n            <LoadingScreen />\r\n\r\n          )}\r\n\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"border-0 mb-4\">\r\n              <div className=\"card-header py-3 bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n                <h3 className=\"fw-bold mb-0\">Appointment Setup</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"card shadow mb-3\">\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"row g-3\">\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Department *</label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          value={department}\r\n                          onChange={(e) => setDepartment(parseInt(e.target.value))}\r\n                          required\r\n                        >\r\n                          <option value=\"\" disabled>Select</option>\r\n                          {filterDepartment.map((dept) => (\r\n                            <option key={dept.id} value={dept.id}>\r\n                              {dept.departmentName}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Doctor List *</label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          value={doctor}\r\n                          onChange={(e) => setDoctor(parseInt(e.target.value))}\r\n                          required\r\n                          disabled={!department}\r\n                        >\r\n                          <option value=\"\">Select Doctor</option>\r\n                          {doctorData.map((doc) => (\r\n                            <option key={doc.userId} value={doc.userId}>\r\n                              {doc.firstName} {doc.lastName}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Session *</label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          value={session}\r\n                          onChange={(e) => setSession(parseInt(e.target.value))}\r\n                          required\r\n                        >\r\n                          <option value=\"\" disabled>Select</option>\r\n                          {sessionData.map((sess) => (\r\n                            <option key={sess.id} value={sess.id}>\r\n                              {sess.sessionName}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Start Time *</label>\r\n                        <input\r\n                          type=\"time\"\r\n                          className=\"form-control\"\r\n                          value={startTime}\r\n                          onChange={(e) => setStartTime(e.target.value)}\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">End Time *</label>\r\n                        <input\r\n                          type=\"time\"\r\n                          className=\"form-control\"\r\n                          value={endTime}\r\n                          onChange={(e) => setEndTime(e.target.value)}\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Time Taken (minutes) *</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          value={timeTaken}\r\n                          onChange={(e) => setTimeTaken(parseInt(e.target.value))}\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-12\">\r\n                        <table className=\"table table-bordered\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Days</th>\r\n                              <th>Token Start No.</th>\r\n                              <th>Token Interval</th>\r\n                              <th>Total Token</th>\r\n                              <th>Total Online Token</th>\r\n                              <th>Max No. of Days</th>\r\n                              <th>Min No. of Days</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {daysOfWeek.map((day) => (\r\n                              <tr key={day}>\r\n                                <td>{day}</td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"startToken\") ? \"#d4edda\" : \"\" }}\r\n                                    value={daysConfig[day].startToken}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"startToken\", e.target.value === \"\" ? \"\" : parseInt(e.target.value))}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"totalInterval\") ? \"#d4edda\" : \"\" }}\r\n                                    value={daysConfig[day].totalInterval}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"totalInterval\", e.target.value === \"\" ? \"\" : parseInt(e.target.value))}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"totalToken\") ? \"#d4edda\" : \"\" }}\r\n                                    value={daysConfig[day].totalToken}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"totalToken\", e.target.value === \"\" ? \"\" : parseInt(e.target.value) || 0)}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"totalOnlineToken\") ? \"#d4edda\" : \"\" }}\r\n                                    value={daysConfig[day].totalOnlineToken}\r\n                                    onChange={(e) =>\r\n                                      handleDayConfigChange(day, \"totalOnlineToken\", e.target.value === \"\" ? \"\" : parseInt(e.target.value) || 0)\r\n                                    }\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"maxNoOfDays\") ? \"#d4edda\" : \"\" }}\r\n                                    value={daysConfig[day].maxNoOfDays}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"maxNoOfDays\", e.target.value === \"\" ? \"\" : parseInt(e.target.value) || 0)}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"minNoOfDays\") ? \"#d4edda\" : \"\" }}\r\n                                    value={daysConfig[day].minNoOfDays}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"minNoOfDays\", e.target.value === \"\" ? \"\" : parseInt(e.target.value) || 0)}\r\n                                  />\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                      <button type=\"submit\" className=\"btn btn-primary me-2\" disabled={loading}>\r\n                        {loading ? \"Processing...\" : appointmentData ? \"Update Appointment\" : \"Create Appointment\"}\r\n                      </button>\r\n\r\n                      <button type=\"button\" className=\"btn btn-secondary\" onClick={handleReset}>Reset</button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentSetup;"],"names":["AppointmentSetup","popup","setPopup","useState","popupMessage","setPopupMessage","department","setDepartment","doctor","setDoctor","session","setSession","startTime","setStartTime","endTime","setEndTime","timeTaken","setTimeTaken","departmentData","setDepartmentData","filterDepartment","setFilterDepartment","doctorData","setDoctorData","sessionData","setSessionData","loading","setLoading","appointmentData","setAppointmentData","modifiedFields","setModifiedFields","showPopup","message","type","arguments","length","undefined","onClose","daysOfWeek","initialDaysState","reduce","acc","day","startToken","totalInterval","totalToken","totalOnlineToken","maxNoOfDays","minNoOfDays","daysConfig","setDaysConfig","originalDaysConfig","setOriginalDaysConfig","useEffect","fetchDepartmentData","fetchSessionData","fetchDoctorData","async","data","getRequest","DEPARTMENT","status","Array","isArray","response","filteredDepartments","filter","dept","departmentTypeName","console","error","DOCTOR","SESSION","handleFetchAppointment","url","APPOINTMENT","days","updatedDaysConfig","forEach","dayConfig","dayName","JSON","parse","stringify","handleDayConfigChange","field","value","newModifiedFields","isFieldModified","handleReset","_jsx","_Fragment","children","className","_jsxs","Popup","LoadingScreen","onSubmit","e","preventDefault","requestData","departmentId","doctorId","sessionId","map","_appointmentData$days","existingDay","find","d","id","tokenStartNo","parseInt","tokenInterval","maxNoOfDay","minNoOfday","postRequest","onChange","target","required","disabled","departmentName","doc","userId","firstName","lastName","sess","sessionName","style","backgroundColor","onClick"],"sourceRoot":""}