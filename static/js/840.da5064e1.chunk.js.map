{"version":3,"file":"static/js/840.da5064e1.chunk.js","mappings":"qHACA,MAAMA,E,OAAWC,GAQJC,EAAaC,eAAOC,GAA4B,IAAlBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpD,IACE,IAAIG,EAEFA,EADEC,aAAaD,MACP,CAAEE,cAAe,UAAUD,aAAaE,QAAQ,YAEhD,CAAED,cAAe,UAAUE,eAAeD,QAAQ,YAE5D,MAAME,QAAiBC,MAAM,GAAGf,IAAWI,IAAY,CACrDY,OAAQ,MACRX,QAAS,CACP,eAAgB,sBACbI,KACAJ,KAGP,IAAKS,EAASG,GACZ,MAAM,IAAIC,MAAM,uBAAuBJ,EAASK,UAElD,aAAaL,EAASM,MACxB,CAAE,MAAOC,GAEP,MADAC,QAAQD,MAAM,aAAcA,GACtBA,CACR,CACF,EASaE,EAAcpB,eAAOC,EAAUoB,GAAwB,IAAlBnB,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3D,IACE,IAAIG,EAEFA,EADEC,aAAaD,MACP,CAAEE,cAAe,UAAUD,aAAaE,QAAQ,YAEhD,CAAED,cAAe,UAAUE,eAAeD,QAAQ,YAE5D,MAAME,QAAiBC,MAAM,GAAGf,IAAWI,IAAY,CACrDY,OAAQ,OACRX,QAAS,CACP,eAAgB,sBACbI,KACAJ,GAELoB,KAAMC,KAAKC,UAAUH,KAEvB,IAAKV,EAASG,GACZ,MAAM,IAAIC,MAAM,wBAAwBJ,EAASK,UAEnD,aAAaL,EAASM,MACxB,CAAE,MAAOC,GAEP,MADAC,QAAQD,MAAM,cAAeA,GACvBA,CACR,CACF,C,okGC9DA,IAAIO,EAAwB,GAAGC,EAAAA,YAC/B,MAq0BA,EAr0B6BC,KACzB,MAuBOC,EAAUC,IAAeC,EAAAA,EAAAA,UAvBR,CACpBC,eAAgB,KAChBC,eAAgB,KAEhBC,UAAW,GACXC,WAAY,GACZC,SAAU,GACVC,IAAK,GACLC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,WAAY,GACZC,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,eAAgB,GAChBC,mBAAoB,EACpBC,SAAU,GAEVC,cAAe,CAAC,CAAEC,wBAAyB,EAAGC,gBAAiB,GAAIC,eAAgB,EAAGC,kBAAmB,GAAIC,SAAU,OACvHC,SAAU,CAAC,CAAEC,mBAAoB,EAAGC,aAAc,GAAIH,SAAU,UAG7DI,EAAOC,IAAY5B,EAAAA,EAAAA,UAAS,KAC5B6B,EAAcC,IAAmB9B,EAAAA,EAAAA,UAAS,KAC1C+B,EAAcC,IAAmBhC,EAAAA,EAAAA,UAAS,OAC1CiC,EAASC,IAAclC,EAAAA,EAAAA,WAAS,IAChCmC,EAAaC,IAAkBpC,EAAAA,EAAAA,UAAS,KACxCqC,EAAWC,IAAgBtC,EAAAA,EAAAA,UAAS,KACpCuC,EAAcC,IAAmBxC,EAAAA,EAAAA,UAAS,KAC1CyC,EAAYC,IAAiB1C,EAAAA,EAAAA,UAAS,KACtC2C,EAAYC,IAAiB5C,EAAAA,EAAAA,UAAS,KACtC6C,EAAYC,IAAiB9C,EAAAA,EAAAA,UAAS,KACtC+C,EAAUC,IAAehD,EAAAA,EAAAA,UAAS,KAMzCiD,EAAAA,EAAAA,YAAU,KACNC,IACAC,IACAC,GAAiB,GAClB,IAEH,MAAMC,EAAY,SAACC,GACfxB,EAAgB,CACZwB,UACAC,KAHwBlF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAI3BmF,QAASA,KACL1B,EAAgB,KAAK,GAIjC,EAEMoB,EAAmBhF,UACrBgE,GAAW,GACX,IACI,MAAM3C,QAAatB,EAAAA,EAAAA,IAAW,GAAGwF,EAAAA,UACb,MAAhBlE,EAAKL,QAAkBwE,MAAMC,QAAQpE,EAAKV,UAC1CuD,EAAe7C,EAAKV,WAEpBQ,QAAQD,MAAM,kCAAmCG,GACjD6C,EAAe,IAEvB,CAAE,MAAOhD,GACLC,QAAQD,MAAM,+BAAgCA,EAClD,CAAC,QACG8C,GAAW,EACf,GAGE0B,EAAiB1F,UACnBgE,GAAW,GACX,IACI,MAAM2B,EAAa,GAAGC,EAAAA,cAAoBjB,IACpCtD,QAAatB,EAAAA,EAAAA,IAAW4F,GACV,MAAhBtE,EAAKL,QAAkBwE,MAAMC,QAAQpE,EAAKV,UAC1CyD,EAAa/C,EAAKV,WAElBQ,QAAQD,MAAM,kCAAmCG,GACjD+C,EAAa,IAErB,CAAE,MAAOlD,GACLC,QAAQD,MAAM,6BAA8BA,EAChD,CAAC,QACG8C,GAAW,EACf,GAGE6B,EAAoB7F,UACtBgE,GAAW,GACX,IACI,MAAM8B,EAAa,GAAGC,EAAAA,YAAqBlB,IACrCxD,QAAatB,EAAAA,EAAAA,IAAW+F,GACV,MAAhBzE,EAAKL,QAAkBwE,MAAMC,QAAQpE,EAAKV,UAC1C2D,EAAgBjD,EAAKV,WAErBQ,QAAQD,MAAM,kCAAmCG,GACjDiD,EAAgB,IAExB,CAAE,MAAOpD,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CAAC,QACG8C,GAAW,EACf,GAGEiB,EAAkBjF,UACpBgE,GAAW,GACX,IACI,MAAM3C,QAAatB,EAAAA,EAAAA,IAAW,GAAGiG,EAAAA,UACb,MAAhB3E,EAAKL,QAAkBwE,MAAMC,QAAQpE,EAAKV,UAC1C6D,EAAcnD,EAAKV,WAEnBQ,QAAQD,MAAM,kCAAmCG,GACjDmD,EAAc,IAEtB,CAAE,MAAOtD,GACLC,QAAQD,MAAM,iCAAkCA,EACpD,CAAC,QACG8C,GAAW,EACf,GAGEkB,EAAkBlF,UACpBgE,GAAW,GACX,IACI,MAAMiC,EAAS,oCACT5E,QAAatB,EAAAA,EAAAA,IAAWkG,GACV,MAAhB5E,EAAKL,QAAkBwE,MAAMC,QAAQpE,EAAKV,UAC1C+D,EAAcrD,EAAKV,WAEnBQ,QAAQD,MAAM,kCAAmCG,GACjDqD,EAAc,IAEtB,CAAE,MAAOxD,GACLC,QAAQD,MAAM,iCAAkCA,EACpD,CAAC,QACG8C,GAAW,EACf,GA2CEkC,EAAqBC,IACvB,MAAM,GAAEC,EAAE,MAAEC,GAAUF,EAAEG,OACxBzE,GAAa0E,IAAQ,IAAWA,EAAU,CAACH,GAAKC,KAAS,EA4CvDG,EAA4BA,CAACC,EAAOC,EAAOL,KAC7CxE,GAAa8E,IACT,MAAMC,EAAuB,IAAID,EAAK3D,eAEtC,OADA4D,EAAqBH,GAAOC,GAASL,EAC9B,IAAKM,EAAM3D,cAAe4D,EAAsB,GACzD,EAoBAC,EAAuBA,CAACJ,EAAOC,EAAOL,KACxCxE,GAAa8E,IACT,MAAMG,EAAmB,IAAIH,EAAKrD,UAElC,OADAwD,EAAiBL,GAAOC,GAASL,EAC1B,IAAKM,EAAMrD,SAAUwD,EAAkB,GAChD,EAiJN,OAFA3F,QAAQ4F,IAAI,UAAWnF,IAGnBoF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBD,UAC7BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gBAAeD,SAAA,CACzBvD,IACGqD,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CACFjC,QAASzB,EAAayB,QACtBC,KAAM1B,EAAa0B,KACnBC,QAAS3B,EAAa2B,WAI9B0B,EAAAA,EAAAA,KAAA,OAAKG,UAAU,yBAAwBD,UACnCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC1BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iHAAgHD,UAC3HF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,eAAcD,SAAC,gCAMzCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mBAAkBD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4CAA2CD,UACtDF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,eAAcD,SAAC,6BAEjCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBF,EAAAA,EAAAA,KAAA,QAAAE,UACIE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,UAASD,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,UAASD,SAAA,EACpBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,kBAC9BF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLiC,UAAQ,EACRH,UAAU,eACVf,GAAG,YACHmB,YAAY,aACZC,SAAUtB,EACVG,MAAOzE,EAASK,gBAGxBmF,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,iBAC9BF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLiC,UAAQ,EACRH,UAAU,eACVf,GAAG,aACHmB,YAAY,cACZC,SAAUtB,EACVG,MAAOzE,EAASM,iBAGxBkF,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,iBAC9BF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLiC,UAAQ,EACRH,UAAU,eACVf,GAAG,WACHmB,YAAY,YACZC,SAAUtB,EACVG,MAAOzE,EAASO,eAGxBiF,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,qBAC9BF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLiC,UAAQ,EACRlB,GAAG,MACHC,MAAOzE,EAASQ,IAChB+E,UAAU,eACVK,SAAUtB,QAGlBkB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,cAC9BE,EAAAA,EAAAA,MAAA,UACID,UAAU,cACVM,MAAO,CAAEC,aAAc,QACvBrB,MAAOzE,EAASS,SAChBmF,SAAWrB,IACPwB,OAjUhCC,EAiUmDC,SAAS1B,EAAEG,OAAOD,MAAO,SAhUpGxE,GAAaiG,IAAS,IACfA,EACHzF,SAAUuF,MAHUA,KAkU6B,EACDG,SAAUhE,EAAQmD,SAAA,EAElBF,EAAAA,EAAAA,KAAA,UAAQX,MAAM,GAAEa,SAAC,kBAChB3C,EAAWyD,KAAKC,IACbjB,EAAAA,EAAAA,KAAA,UAAwBX,MAAO4B,EAAO7B,GAAGc,SACpCe,EAAOC,YADCD,EAAO7B,aAMhCgB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,eAC9BF,EAAAA,EAAAA,KAAA,YACIM,UAAQ,EACRlB,GAAG,WACHC,MAAOzE,EAASU,SAChB6E,UAAU,eACVK,SAAUtB,QAIlBkB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,eAC9BE,EAAAA,EAAAA,MAAA,UACID,UAAU,cACVd,MAAOzE,EAASW,UAChBiF,SAAWrB,IACP,MAAMgC,EAAkBlE,EAAYmE,MAC/BC,GAAYA,EAAQjC,GAAGkC,aAAenC,EAAEG,OAAOD,QAzXpFkC,IAACC,EAAapC,EAAboC,EA2XmDL,EAAgBK,YA3XtDpC,EA2XmE+B,EAAgB/B,GA1XzHvE,GAAaiG,IAAS,IACfA,EACHvF,UAAW6D,EACX5D,QAAS,GACTC,WAAY,OAEhBiD,EAAe8C,GAqXyC5D,EAAcuD,EAAgB/B,IAC9BV,EAAeyC,EAAgB/B,GAAG,EAGtC2B,SAAUhE,EAAQmD,SAAA,EAElBF,EAAAA,EAAAA,KAAA,UAAQX,MAAM,GAAEa,SAAC,mBAChBjD,EAAY+D,KAAKK,IACdrB,EAAAA,EAAAA,KAAA,UAAyBX,MAAOgC,EAAQjC,GAAGc,SACtCmB,EAAQI,aADAJ,EAAQjC,aAMjCgB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,aAC9BE,EAAAA,EAAAA,MAAA,UACID,UAAU,cACVd,MAAOzE,EAASY,QAChBgF,SAAWrB,IACP,MAAMuC,EAAgBvE,EAAUiE,MAC3BO,GAAUA,EAAMvC,GAAGkC,aAAenC,EAAEG,OAAOD,QAvYlFuC,IAACC,EAAWzC,EAAXyC,EAyYmDH,EAAcG,UAzYtDzC,EAyYiEsC,EAActC,GAxYjHvE,GAAaiG,IAAS,IACfA,EACHtF,QAAS4D,EACT3D,WAAY,OAEhBoD,EAAkBgD,GAoYsC/D,EAAY4D,EAActC,IAC1BP,EAAkB6C,EAActC,GAAG,EAGvC2B,SAAUhE,IAAYnC,EAASW,UAAU2E,SAAA,EAEzCF,EAAAA,EAAAA,KAAA,UAAQX,MAAM,GAAEa,SAAC,iBAChB/C,EAAU6D,KAAKW,IACZ3B,EAAAA,EAAAA,KAAA,UAAuBX,MAAOsC,EAAMvC,GAAGc,SAClCyB,EAAMG,WADEH,EAAMvC,aAM/BgB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,gBAC9BE,EAAAA,EAAAA,MAAA,UACID,UAAU,cACVd,MAAOzE,EAASa,WAChB+E,SAAWrB,IAAM4C,OApZ3CtG,EAoZgE0D,EAAEG,OAAOD,WAnZnGxE,GAAaiG,IAAS,IACfA,EACHrF,WAAYA,MAHUA,KAoZgF,EACtDsF,SAAUhE,IAAYnC,EAASY,QAAQ0E,SAAA,EAEvCF,EAAAA,EAAAA,KAAA,UAAQX,MAAM,GAAEa,SAAC,oBAChB7C,EAAa2D,KAAKgB,IACfhC,EAAAA,EAAAA,KAAA,UAAsBX,MAAO2C,EAAK5C,GAAGc,SAChC8B,EAAKC,cADGD,EAAK5C,aAM9BgB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,YAC9BF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLiC,UAAQ,EACRH,UAAU,eACVf,GAAG,OACHmB,YAAY,OACZC,SAAUtB,EACVG,MAAOzE,EAASc,WAGxB0E,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,eAC9BF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLiC,UAAQ,EACRH,UAAU,eACVf,GAAG,UACHmB,YAAY,UACZC,SAAUtB,EACVG,MAAOzE,EAASe,cAGxByE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,kBAC9BF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLiC,UAAQ,EACRH,UAAU,eACVf,GAAG,WACHmB,YAAY,aACZC,SAAUtB,EACVG,MAAOzE,EAASgB,eAGxBwE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,eAC9BE,EAAAA,EAAAA,MAAA,UACID,UAAU,cACVM,MAAO,CAAEC,aAAc,QACvBrB,MAAOzE,EAASkB,mBAChB0E,SAAWrB,IACP+C,OA5bhCC,EA4bmDtB,SAAS1B,EAAEG,OAAOD,MAAO,SA3bpGxE,GAAaiG,IAAS,IACfA,EACHhF,mBAAoBqG,MAHAA,KA6b6B,EACDpB,SAAUhE,EAAQmD,SAAA,EAElBF,EAAAA,EAAAA,KAAA,UAAQX,MAAM,GAAEa,SAAC,mBAChBzC,EAAWuD,KAAKoB,IACbpC,EAAAA,EAAAA,KAAA,UAAwBX,MAAO+C,EAAOhD,GAAGc,SACpCkC,EAAOC,oBADCD,EAAOhD,aAMhCgB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,iBAC9BF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLiC,UAAQ,EACRH,UAAU,eACVf,GAAG,iBACHmB,YAAY,YACZC,SAAUtB,EACVG,MAAOzE,EAASiB,qBAGxBuE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,4BAC9BF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLiC,UAAQ,EACRlB,GAAG,iBACHe,UAAU,eACVmC,OAAO,uBACP9B,SAlc9BrB,IACtB,MAAM,GAAEC,EAAE,MAAEmD,GAAUpD,EAAEG,OACxBzE,GAAa0E,IAAQ,IACdA,EACH,CAACH,GAAKmD,EAAM,MACb,QAkcyCnC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,oCAC9BF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLiC,UAAQ,EACRlB,GAAG,WACHC,MAAOzE,EAASmB,SAChBoE,UAAU,eACVK,SAAUtB,aAM1BkB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,8BAA6BD,SAAA,EACxCF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,SAAC,qBAC9BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mDAAkDD,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,OACIwC,IAAK3F,GAAgB4F,EACrBC,IAAI,UACJvC,UAAU,YACVM,MAAO,CAAEkC,UAAW,YAExB3C,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACL8B,UAAU,oBACVmC,OAAO,UACP9B,SAhfzBrB,IACvB,MAAMyD,EAAOzD,EAAEG,OAAOiD,MAAM,GAE5B,GAAIK,EAAM,CACN,MAAMC,EAAWC,IAAIC,gBAAgBH,GAErC9F,EAAgB+F,GAChBhI,GAAa0E,IAAQ,IACdA,EACHxE,eAAgB6H,KAExB,GAsegDtC,UAAQ,EACRlB,GAAG,wCAavCY,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mBAAkBD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4CAA2CD,UACtDF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,eAAcD,SAAC,iCAEjCE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACtBE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,uBAAsBD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,SAAAE,UACIE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGZF,EAAAA,EAAAA,KAAA,SAAAE,SACKtF,EAASoB,cAAcgF,KAAI,CAACgC,EAAKvD,KAC9BW,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAKT,EAAQ,KACbO,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACL8B,UAAU,eACVd,MAAO2D,EAAI5G,kBACXoE,SAAWrB,GAAMK,EAA0BC,EAAO,oBAAqBN,EAAEG,OAAOD,YAGxFW,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACL8B,UAAU,eACVd,MAAO2D,EAAI9G,gBACXsE,SAAWrB,GAAMK,EAA0BC,EAAO,kBAAmBN,EAAEG,OAAOD,YAGtFW,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACL8B,UAAU,eACVI,YAAY,OACZlB,MAAO2D,EAAI7G,eACXqE,SAAWrB,GAAMK,EAA0BC,EAAO,iBAAkBN,EAAEG,OAAOD,YAIrFW,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACL8B,UAAU,eACVK,SAAWrB,GAAMK,EAA0BC,EAAO,WAAYN,EAAEG,OAAOiD,MAAM,SAGrFvC,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,UAAQ3B,KAAK,SAAS8B,UAAU,iBAAiB8C,QAASA,IArhBlFxD,KACxB5E,GAAa8E,IAAI,IACVA,EACH3D,cAAe2D,EAAK3D,cAAckH,QAAO,CAACC,EAAGC,IAAMA,IAAM3D,OAC1D,EAihB6G4D,CAAmB5D,GAAOS,UACtFF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,wBArChBV,WA4CrBO,EAAAA,EAAAA,KAAA,UAAQ3B,KAAK,SAAS8B,UAAU,kBAAkB8C,QAziBzD9D,IACrBA,EAAEmE,iBAEFzI,GAAa8E,IAAI,IACVA,EACH3D,cAAe,IACR2D,EAAK3D,cACR,CAAEoD,GAAIO,EAAK3D,cAAc5C,OAAS,EAAG8C,gBAAiB,GAAIC,eAAgB,GAAIC,kBAAmB,GAAIC,SAAU,UAEpH,EAgiBoG6D,SAAC,yBAS5FF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mBAAkBD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4CAA2CD,UACtDF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,eAAcD,SAAC,0BAEjCE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACtBE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,uBAAsBD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,SAAAE,UACIE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGZF,EAAAA,EAAAA,KAAA,SAAAE,SACKtF,EAAS0B,SAAS0E,KAAI,CAACgC,EAAKvD,KACzBW,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAKT,EAAQ,KACbO,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACL8B,UAAU,eACVd,MAAO2D,EAAIxG,aACXgE,SAAWrB,GAAMU,EAAqBJ,EAAO,eAAgBN,EAAEG,OAAOD,YAG9EW,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACL8B,UAAU,eACVK,SAAWrB,GAAMU,EAAqBJ,EAAO,WAAYN,EAAEG,OAAOiD,MAAM,SAGhFvC,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,UAAQ3B,KAAK,SAAS8B,UAAU,iBAAiB8C,QAASA,IAjjBnFxD,KACvB5E,GAAa8E,IAAI,IACVA,EACHrD,SAAUqD,EAAKrD,SAAS4G,QAAO,CAACC,EAAGC,IAAMA,IAAM3D,OAChD,EA6iB6G8D,CAAkB9D,GAAOS,UACrFF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,wBAnBhBV,WA0BrBO,EAAAA,EAAAA,KAAA,UAAQ3B,KAAK,SAAS8B,UAAU,kBAAkB8C,QAnkB3DO,KACnB3I,GAAa8E,IAAI,IACVA,EACHrD,SAAU,IACHqD,EAAKrD,SACR,CAAE8C,GAAIO,EAAKrD,SAASlD,OAAS,EAAGoD,aAAc,GAAIH,SAAU,UAEjE,EA4jBmG6D,SAAC,yBAQ3FE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kCAAiCD,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,UAAQ3B,KAAK,QAAQ8B,UAAU,yBAAwBD,SAAC,UACxDF,EAAAA,EAAAA,KAAA,UAAQiD,QAlfPjK,UACjBmG,EAAEmE,iBAEF,MAAMG,EAAmB,IAAIC,SAE7BD,EAAiBE,OAAO,iBAAkB/I,EAASG,gBACnD0I,EAAiBE,OAAO,iBAAkB/I,EAASI,gBACnDyI,EAAiBE,OAAO,YAAa/I,EAASK,WAC9CwI,EAAiBE,OAAO,aAAc/I,EAASM,YAC/CuI,EAAiBE,OAAO,WAAY/I,EAASO,UAC7CsI,EAAiBE,OAAO,MAAO/I,EAASQ,KACxCqI,EAAiBE,OAAO,WAAY/I,EAASS,UAC7CoI,EAAiBE,OAAO,WAAY/I,EAASU,UAC7CmI,EAAiBE,OAAO,YAAa/I,EAASW,WAC9CkI,EAAiBE,OAAO,UAAW/I,EAASY,SAC5CiI,EAAiBE,OAAO,aAAc/I,EAASa,YAC/CgI,EAAiBE,OAAO,OAAQ/I,EAASc,MACzC+H,EAAiBE,OAAO,UAAW/I,EAASe,SAC5C8H,EAAiBE,OAAO,WAAY/I,EAASgB,UAC7C6H,EAAiBE,OAAO,iBAAkB/I,EAASiB,gBACnD4H,EAAiBE,OAAO,qBAAsB/I,EAASkB,oBACvD2H,EAAiBE,OAAO,WAAY/I,EAASmB,UAG7CnB,EAASoB,cAAc4H,SAAQ,CAACC,EAAMpE,KAClCgE,EAAiBE,OAAO,iBAAiBlE,8BAAmCoE,EAAK5H,yBACjFwH,EAAiBE,OAAO,iBAAiBlE,sBAA2BoE,EAAK3H,iBACzEuH,EAAiBE,OAAO,iBAAiBlE,qBAA0BoE,EAAK1H,gBACxEsH,EAAiBE,OAAO,iBAAiBlE,wBAA6BoE,EAAKzH,mBACvEyH,EAAKxH,UACLoH,EAAiBE,OAAO,iBAAiBlE,eAAoBoE,EAAKxH,SACtE,IAIJzB,EAAS0B,SAASsH,SAAQ,CAACE,EAAKrE,KAC5BgE,EAAiBE,OAAO,YAAYlE,yBAA8BqE,EAAIvH,oBACtEkH,EAAiBE,OAAO,YAAYlE,mBAAwBqE,EAAItH,cAC5DsH,EAAIzH,UACJoH,EAAiBE,OAAO,YAAYlE,eAAoBqE,EAAIzH,SAChE,IAGJ,IACIW,GAAW,GAEX,MAAMrD,QAAiBC,MAAM,GAAGd,EAAAA,KAAW2B,IAAyB,CAChEZ,OAAQ,OACRS,KAAMmJ,EACNvK,QAAS,CACLM,cAAe,4PAIvB,IAAKG,EAASG,GACV,MAAM,IAAIC,MAAM,0BAA0BJ,EAASoK,oBAGpCpK,EAASM,OAC5BkE,GAAkB,OAARxE,QAAQ,IAARA,OAAQ,EAARA,EAAUyE,UAAW,+BAAgC,UAEnE,CAAE,MAAOlE,GAAQ,IAAD8J,EACZ7F,GACS,OAALjE,QAAK,IAALA,GAAe,QAAV8J,EAAL9J,EAAOP,gBAAQ,IAAAqK,OAAV,EAALA,EAAiB5F,UAAW,2CAC5B,SAEJjE,QAAQD,MAAM,yBAA0BA,EAC5C,CAAC,QACG8C,GAAW,EACf,GA6a+CqB,KAAK,SAAS8B,UAAU,kBAAiBD,SAAC,oBAItF,C","sources":["service/apiService.js","Views/Admin/Employee/EmployeeRegistrartion/index.js"],"sourcesContent":["import { API_HOST } from \"../config/apiConfig\";\r\nconst BASE_URL = API_HOST;\r\n\r\n/**\r\n * Function to call GET API\r\n * @param {string} endpoint - The API endpoint\r\n * @param {object} headers - Optional headers\r\n * @returns {Promise<object>} - API response\r\n */\r\nexport const getRequest = async (endpoint, headers = {}) => {\r\n  try {\r\n    let token;\r\n    if (localStorage.token) {\r\n      token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n    } else {\r\n      token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n    }\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...token,\r\n        ...headers,\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`GET request failed: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"GET Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Function to call POST API\r\n * @param {string} endpoint - The API endpoint\r\n * @param {object} data - Request body\r\n * @param {object} headers - Optional headers\r\n * @returns {Promise<object>} - API response\r\n */\r\nexport const postRequest = async (endpoint, data, headers = {}) => {\r\n  try {\r\n    let token;\r\n    if (localStorage.token) {\r\n      token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n    } else {\r\n      token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n    }\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...token,\r\n        ...headers,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`POST request failed: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"POST Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Function to call PUT API\r\n * @param {string} endpoint - The API endpoint\r\n * @param {object} data - Request body\r\n * @param {object} headers - Optional headers\r\n * @returns {Promise<object>} - API response\r\n */\r\nexport const putRequest = async (endpoint, data, headers = {}) => {\r\n  try {\r\n    let token;\r\n    if (localStorage.token) {\r\n      token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n    } else {\r\n      token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n    }\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...token,\r\n        ...headers,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`PUT request failed: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"PUT Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\nconst uploadFileWithJson = async (endpoint, jsonData, files) => {\r\n  if (!files || !(files instanceof FileList || files instanceof File)) {\r\n    throw new Error(\"No valid file provided!\");\r\n  }\r\n\r\n  let token = localStorage.token\r\n    ? { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n    : { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n\r\n  // Add the file (only the first file if it's a FileList)\r\n  if (files instanceof FileList) {\r\n    formData.append(\"files\", files[0]); // Backend expects a single file\r\n  } else {\r\n    formData.append(\"files\", files); // Single file\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"POST\",\r\n      headers: { ...token },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file upload:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\nexport { uploadFileWithJson };\r\n\r\n\r\nconst updateFileWithJson = async (endpoint, jsonData, files) => {\r\n\r\n  let token = localStorage.token\r\n    ? { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n    : { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n\r\n  if (files instanceof FileList) {\r\n    formData.append(\"files\", files[0]); \r\n  } else {\r\n    formData.append(\"files\", files); \r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"PUT\", \r\n      headers: { ...token },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file upload:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\nexport { updateFileWithJson };\r\n\r\n\r\n\r\nasync function uploadMultiFileWithJson(endpoint, jsonData, files1, files2) {\r\n  let token;\r\n  if (localStorage.token) {\r\n    token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n  } else {\r\n    token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n  formData.append(`bannerImage`, files1);\r\n  formData.append(`thumbImage`, files2);\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        ...token,\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(errorText || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file upload:\", error.message);\r\n    throw error;\r\n  }\r\n}\r\nexport { uploadMultiFileWithJson };\r\n\r\n\r\n\r\nasync function updateMultiFileWithJson(endpoint, jsonData, files1, files2) {\r\n  let token;\r\n  if (localStorage.token) {\r\n    token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n  } else {\r\n    token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n  if (files1) {\r\n    formData.append(\"bannerImage\", files1);\r\n  }\r\n  if (files2) {\r\n    formData.append(\"thumbImage\", files2);\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"PUT\", // Use PUT or PATCH based on your API\r\n      headers: {\r\n        ...token,\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(errorText || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file update:\", error.message);\r\n    throw error;\r\n  }\r\n}\r\nexport { updateMultiFileWithJson };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport placeholderImage from \"../../../../assets/images/placeholder.jpg\";\r\nimport { COUNTRYAPI, DISTRICTAPI, STATEAPI, GENDERAPI, API_HOST, EMPLOYEE } from \"../../../../config/apiConfig\";\r\nimport { getRequest, putRequest, postRequest } from \"../../../../service/apiService\";\r\nimport Popup from \"../../../../Components/popup\";\r\nlet EMPLOYEE_REGISTRATION = `${EMPLOYEE}/create`\r\nconst EmployeeRegistration = () => {\r\n    const initialFormData = {\r\n        profilePicName: null,\r\n        idDocumentName: null,\r\n\r\n        firstName: \"\",\r\n        middleName: \"\",\r\n        lastName: \"\",\r\n        dob: \"\",\r\n        genderId: \"\",\r\n        address1: \"\",\r\n        countryId: \"\",\r\n        stateId: \"\",\r\n        districtId: \"\",\r\n        city: \"\",\r\n        pincode: \"\",\r\n        mobileNo: \"\",\r\n        registrationNo: \"\",\r\n        identificationType: 2,\r\n        fromDate: \"\",\r\n\r\n        qualification: [{ employeeQualificationId: 1, institutionName: \"\", completionYear: 0, qualificationName: \"\", filePath: null }],\r\n        document: [{ employeeDocumentId: 1, documentName: \"\", filePath: null }],\r\n    };\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [popup, setPopup] = useState(\"\");\r\n    const [popupMessage, setPopupMessage] = useState(\"\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [countryData, setCountryData] = useState([]);\r\n    const [stateData, setStateData] = useState([]);\r\n    const [districtData, setDistrictData] = useState([]);\r\n    const [genderData, setGenderData] = useState([]);\r\n    const [idTypeData, setIdTypeData] = useState([]);\r\n    const [countryIds, setCountryIds] = useState(\"\");\r\n    const [stateIds, setStateIds] = useState(\"\");\r\n    // const token = sessionStorage.getItem(\"token\");\r\n    const token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhYmNAZ21haWwuY29tIiwiaG9zcGl0YWxJZCI6MSwiZW1wbG95ZWVJZCI6MSwiZXhwIjoxNzQyMjc1NDg0LCJ1c2VySWQiOjQsImlhdCI6MTc0MTY3MDY4NH0.8EEshDklEiZBRhDBKDzWvPsqHxUQ63mKpTxa1hBShpzghNga5Ie4YDpvdue1T9nlozXsvxySR3YNKnetvW9oEA\";\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchCountryData();\r\n        fetchGenderData();\r\n        fetchIdTypeData();\r\n    }, []);\r\n\r\n    const showPopup = (message, type = \"info\") => {\r\n        setPopupMessage({\r\n            message,\r\n            type,\r\n            onClose: () => {\r\n                setPopupMessage(null);\r\n\r\n            },\r\n        });\r\n    };\r\n\r\n    const fetchCountryData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${COUNTRYAPI}/all`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setCountryData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setCountryData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching country data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchStateData = async (countryIds) => {\r\n        setLoading(true);\r\n        try {\r\n            const GET_STATES = `${STATEAPI}/country/${countryIds}`;\r\n            const data = await getRequest(GET_STATES);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setStateData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setStateData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching state data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDistrictData = async (stateIds) => {\r\n        setLoading(true);\r\n        try {\r\n            const GET_CITIES = `${DISTRICTAPI}/state/${stateIds}`;\r\n            const data = await getRequest(GET_CITIES);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setDistrictData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setDistrictData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching city data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchGenderData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${GENDERAPI}/all`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setGenderData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setGenderData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching HotelType data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchIdTypeData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const GETALL = \"/masterController/getAllHotelType\";\r\n            const data = await getRequest(GETALL);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setIdTypeData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setIdTypeData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching HotelType data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCountryChange = (countryCode, id) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            countryId: id,\r\n            stateId: \"\",\r\n            districtId: \"\",\r\n        }));\r\n        fetchStateData(countryCode);\r\n    };\r\n\r\n    const handleStateChange = (stateCode, id) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            stateId: id,\r\n            districtId: \"\",\r\n        }));\r\n        fetchDistrictData(stateCode);\r\n    };\r\n\r\n    const handleDistrictChange = (districtId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            districtId: districtId,\r\n        }));\r\n    };\r\n\r\n    const handleGenderChange = (gendersId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            genderId: gendersId,\r\n        }));\r\n    };\r\n\r\n    const handleIdTypeChange = (idTypeId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            identificationType: idTypeId,\r\n        }));\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { id, value } = e.target;\r\n        setFormData((prevData) => ({ ...prevData, [id]: value }));\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (file) {\r\n            const imageUrl = URL.createObjectURL(file);\r\n\r\n            setProfileImage(imageUrl);\r\n            setFormData((prevData) => ({\r\n                ...prevData,\r\n                profilePicName: file,\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const { id, files } = e.target;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [id]: files[0],\r\n        }));\r\n    };\r\n\r\n    const addEducationRow = (e) => {\r\n        e.preventDefault();\r\n\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            qualification: [\r\n                ...prev.qualification,\r\n                { id: prev.qualification.length + 1, institutionName: \"\", completionYear: \"\", qualificationName: \"\", filePath: null },\r\n            ],\r\n        }));\r\n    };\r\n\r\n    const removeEducationRow = (index) => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            qualification: prev.qualification.filter((_, i) => i !== index),\r\n        }));\r\n    };\r\n\r\n    const handleQualificationChange = (index, field, value) => {\r\n        setFormData((prev) => {\r\n            const updatedQualification = [...prev.qualification];\r\n            updatedQualification[index][field] = value;\r\n            return { ...prev, qualification: updatedQualification };\r\n        });\r\n    };\r\n\r\n    const addDocumentRow = () => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            document: [\r\n                ...prev.document,\r\n                { id: prev.document.length + 1, documentName: \"\", filePath: null },\r\n            ],\r\n        }));\r\n    };\r\n\r\n    const removeDocumentRow = (index) => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            document: prev.document.filter((_, i) => i !== index),\r\n        }));\r\n    };\r\n\r\n    const handleDocumentChange = (index, field, value) => {\r\n        setFormData((prev) => {\r\n            const updatedDocuments = [...prev.document];\r\n            updatedDocuments[index][field] = value;\r\n            return { ...prev, document: updatedDocuments };\r\n        });\r\n    };\r\n\r\n    // const handleSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     if (!formData.firstName || !formData.lastName || !formData.dob || !formData.mobileNo) {\r\n    //         alert(\"Please fill in all required fields.\");\r\n    //         return;\r\n    //     }\r\n\r\n    //     const submissionData = new FormData();\r\n    //     submissionData.append(\"firstName\", formData.firstName);\r\n    //     submissionData.append(\"middleName\", formData.middleName);\r\n    //     submissionData.append(\"lastName\", formData.lastName);\r\n    //     submissionData.append(\"dob\", formData.dob);\r\n    //     submissionData.append(\"genderId\", formData.genderId);\r\n    //     submissionData.append(\"address1\", formData.address1);\r\n    //     submissionData.append(\"countryId\", formData.countryId);\r\n    //     submissionData.append(\"stateId\", formData.stateId);\r\n    //     submissionData.append(\"districtId\", formData.districtId);\r\n    //     submissionData.append(\"city\", formData.city);\r\n    //     submissionData.append(\"pincode\", formData.pincode);\r\n    //     submissionData.append(\"mobileNo\", formData.mobileNo);\r\n    //     submissionData.append(\"registrationNo\", formData.registrationNo);\r\n    //     submissionData.append(\"identificationType\", formData.identificationType);\r\n    //     submissionData.append(\"fromDate\", formData.fromDate);\r\n\r\n    //     if (formData.profilePicName)\r\n    //         submissionData.append(\"profilePicName\", formData.profilePicName);\r\n    //     if (formData.idDocumentName)\r\n    //         submissionData.append(\"idDocumentName\", formData.idDocumentName);\r\n\r\n    //     formData.qualification.forEach((qual, index) => {\r\n    //         submissionData.append(`qualification[${index}][employeeQualificationId]`, qual.employeeQualificationId);\r\n    //         submissionData.append(`qualification[${index}][institutionName]`, qual.institutionName);\r\n    //         submissionData.append(`qualification[${index}][completionYear]`, qual.completionYear);\r\n    //         submissionData.append(`qualification[${index}][qualificationName]`, qual.qualificationName);\r\n    //         submissionData.append(`qualification[${index}][filePath]`, qual.filePath);\r\n    //     });\r\n\r\n    //     formData.document.forEach((doc, index) => {\r\n    //         submissionData.append(`document[${index}][employeeDocumentId]`, doc.employeeDocumentId);\r\n    //         submissionData.append(`document[${index}][documentName]`, doc.documentName);\r\n    //         submissionData.append(`document[${index}][filePath]`, doc.filePath);\r\n    //     });\r\n\r\n    //     try {\r\n    //         const response = await fetch(`http://localhost:8080${EMPLOYEE}/employee`, {\r\n    //             method: \"POST\",\r\n    //             body: submissionData,\r\n    //         });\r\n\r\n    //         if (!response.ok) {\r\n    //             throw new Error(\"Failed to submit form\");\r\n    //         }\r\n\r\n    //         const responseData = await response.json();\r\n    //         console.log(\"Form submitted successfully:\", responseData);\r\n    //         alert(\"Form submitted successfully!\");\r\n\r\n    //         setFormData(initialFormData);\r\n    //     } catch (error) {\r\n    //         console.error(\"Error submitting form:\", error);\r\n    //         alert(\"Error submitting form. Please try again.\");\r\n    //     }\r\n    // };\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formDataToSubmit = new FormData();\r\n\r\n        formDataToSubmit.append(\"profilePicName\", formData.profilePicName);\r\n        formDataToSubmit.append(\"idDocumentName\", formData.idDocumentName);\r\n        formDataToSubmit.append(\"firstName\", formData.firstName);\r\n        formDataToSubmit.append(\"middleName\", formData.middleName);\r\n        formDataToSubmit.append(\"lastName\", formData.lastName);\r\n        formDataToSubmit.append(\"dob\", formData.dob);\r\n        formDataToSubmit.append(\"genderId\", formData.genderId);\r\n        formDataToSubmit.append(\"address1\", formData.address1);\r\n        formDataToSubmit.append(\"countryId\", formData.countryId);\r\n        formDataToSubmit.append(\"stateId\", formData.stateId);\r\n        formDataToSubmit.append(\"districtId\", formData.districtId);\r\n        formDataToSubmit.append(\"city\", formData.city);\r\n        formDataToSubmit.append(\"pincode\", formData.pincode);\r\n        formDataToSubmit.append(\"mobileNo\", formData.mobileNo);\r\n        formDataToSubmit.append(\"registrationNo\", formData.registrationNo);\r\n        formDataToSubmit.append(\"identificationType\", formData.identificationType);\r\n        formDataToSubmit.append(\"fromDate\", formData.fromDate);\r\n\r\n        // Append qualification details\r\n        formData.qualification.forEach((qual, index) => {\r\n            formDataToSubmit.append(`qualification[${index}][employeeQualificationId]`, qual.employeeQualificationId);\r\n            formDataToSubmit.append(`qualification[${index}][institutionName]`, qual.institutionName);\r\n            formDataToSubmit.append(`qualification[${index}][completionYear]`, qual.completionYear);\r\n            formDataToSubmit.append(`qualification[${index}][qualificationName]`, qual.qualificationName);\r\n            if (qual.filePath) {\r\n                formDataToSubmit.append(`qualification[${index}][filePath]`, qual.filePath);\r\n            }\r\n        });\r\n\r\n        // Append document details\r\n        formData.document.forEach((doc, index) => {\r\n            formDataToSubmit.append(`document[${index}][employeeDocumentId]`, doc.employeeDocumentId);\r\n            formDataToSubmit.append(`document[${index}][documentName]`, doc.documentName);\r\n            if (doc.filePath) {\r\n                formDataToSubmit.append(`document[${index}][filePath]`, doc.filePath);\r\n            }\r\n        });\r\n\r\n        try {\r\n            setLoading(true);\r\n\r\n            const response = await fetch(`${API_HOST}${EMPLOYEE_REGISTRATION}`, {\r\n                method: \"POST\",\r\n                body: formDataToSubmit,\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to submit form: ${response.statusText}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            showPopup(response?.message || \"Form submitted successfully!\", \"success\");\r\n            // resetForm();\r\n        } catch (error) {\r\n            showPopup(\r\n                error?.response?.message || \"Failed to submit form. Please try again.\",\r\n                \"error\"\r\n            );\r\n            console.error(\"Form submission failed\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    console.log(\"my data\", formData);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"body d-flex py-3\">\r\n                <div className=\"container-xxl\">\r\n                    {popupMessage && (\r\n                        <Popup\r\n                            message={popupMessage.message}\r\n                            type={popupMessage.type}\r\n                            onClose={popupMessage.onClose}\r\n                        />\r\n                    )}\r\n\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"border-0 mb-4\">\r\n                            <div className=\"card-header py-3 bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n                                <h3 className=\"fw-bold mb-0\">Register of Employee</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* employee Section */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                                    <h6 className=\"mb-0 fw-bold\">Employee Registration</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div className=\"row g-3\">\r\n                                            <div className=\"col-md-9\">\r\n                                                <div className=\"row g-3\">\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">First Name *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"firstName\"\r\n                                                            placeholder=\"First Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.firstName}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Middle Name</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"middleName\"\r\n                                                            placeholder=\"Middle Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.middleName}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Last Name *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"lastName\"\r\n                                                            placeholder=\"Last Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.lastName}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Date of Birth *</label>\r\n                                                        <input\r\n                                                            type=\"date\"\r\n                                                            required\r\n                                                            id=\"dob\"\r\n                                                            value={formData.dob}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Gender *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.genderId}\r\n                                                            onChange={(e) =>\r\n                                                                handleGenderChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Gender</option>\r\n                                                            {genderData.map((gender) => (\r\n                                                                <option key={gender.id} value={gender.id}>\r\n                                                                    {gender.genderName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Address *</label>\r\n                                                        <textarea\r\n                                                            required\r\n                                                            id=\"address1\"\r\n                                                            value={formData.address1}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                        ></textarea>\r\n\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Country *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.countryId}\r\n                                                            onChange={(e) => {\r\n                                                                const selectedCountry = countryData.find(\r\n                                                                    (country) => country.id.toString() === e.target.value\r\n                                                                );\r\n                                                                handleCountryChange(selectedCountry.countryCode, selectedCountry.id);\r\n                                                                setCountryIds(selectedCountry.id);\r\n                                                                fetchStateData(selectedCountry.id);\r\n                                                            }}\r\n\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Country</option>\r\n                                                            {countryData.map((country) => (\r\n                                                                <option key={country.id} value={country.id}>\r\n                                                                    {country.countryName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">State *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.stateId}\r\n                                                            onChange={(e) => {\r\n                                                                const selectedState = stateData.find(\r\n                                                                    (state) => state.id.toString() === e.target.value\r\n                                                                );\r\n                                                                handleStateChange(selectedState.stateCode, selectedState.id);\r\n                                                                setStateIds(selectedState.id);\r\n                                                                fetchDistrictData(selectedState.id);\r\n                                                            }}\r\n\r\n                                                            disabled={loading || !formData.countryId}\r\n                                                        >\r\n                                                            <option value=\"\">Select State</option>\r\n                                                            {stateData.map((state) => (\r\n                                                                <option key={state.id} value={state.id}>\r\n                                                                    {state.stateName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">District *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.districtId}\r\n                                                            onChange={(e) => handleDistrictChange(e.target.value)}\r\n                                                            disabled={loading || !formData.stateId}\r\n                                                        >\r\n                                                            <option value=\"\">Select District</option>\r\n                                                            {districtData.map((dist) => (\r\n                                                                <option key={dist.id} value={dist.id}>\r\n                                                                    {dist.districtName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">City *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"city\"\r\n                                                            placeholder=\"City\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.city}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Pincode *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"pincode\"\r\n                                                            placeholder=\"Pincode\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.pincode}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Mobile No. *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"mobileNo\"\r\n                                                            placeholder=\"Mobile No.\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.mobileNo}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Type *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.identificationType}\r\n                                                            onChange={(e) =>\r\n                                                                handleIdTypeChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select ID Type</option>\r\n                                                            {idTypeData.map((idType) => (\r\n                                                                <option key={idType.id} value={idType.id}>\r\n                                                                    {idType.identificationName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Number *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"registrationNo\"\r\n                                                            placeholder=\"ID Number\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.registrationNo}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Upload (JPEG/PDF) *</label>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            required\r\n                                                            id=\"idDocumentName\"\r\n                                                            className=\"form-control\"\r\n                                                            accept=\".jpg,.jpeg,.png,.pdf\"\r\n                                                            onChange={handleFileChange}\r\n                                                        />\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Period of Employment From Date</label>\r\n                                                        <input\r\n                                                            type=\"date\"\r\n                                                            required\r\n                                                            id=\"fromDate\"\r\n                                                            value={formData.fromDate}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-3 d-flex flex-column\">\r\n                                                <label className=\"form-label\">Profile Image *</label>\r\n                                                <div className=\"border p-2 d-flex flex-column align-items-center\">\r\n                                                    <img\r\n                                                        src={profileImage || placeholderImage}\r\n                                                        alt=\"Profile\"\r\n                                                        className=\"img-fluid\"\r\n                                                        style={{ objectFit: \"cover\" }}\r\n                                                    />\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        className=\"form-control mt-2\"\r\n                                                        accept=\"image/*\"\r\n                                                        onChange={handleImageChange}\r\n                                                        required\r\n                                                        id=\"profilePicName\"\r\n                                                    />\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Educational Qualification */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                                    <h6 className=\"mb-0 fw-bold\">Educational Qualification</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>S.No</th>\r\n                                                <th>Degree</th>\r\n                                                <th>Name of Institution</th>\r\n                                                <th>Year of Completion</th>\r\n                                                <th>File Upload</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {formData.qualification.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.qualificationName}\r\n                                                            onChange={(e) => handleQualificationChange(index, \"qualificationName\", e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.institutionName}\r\n                                                            onChange={(e) => handleQualificationChange(index, \"institutionName\", e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"YYYY\"\r\n                                                            value={row.completionYear}\r\n                                                            onChange={(e) => handleQualificationChange(index, \"completionYear\", e.target.value)}\r\n                                                        />\r\n\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={(e) => handleQualificationChange(index, \"filePath\", e.target.files[0])}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => removeEducationRow(index)}>\r\n                                                            <i className=\"icofont-close\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={addEducationRow}>\r\n                                        Add Row +\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Required Documents */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header py-3 bg-light border-bottom-1\">\r\n                                    <h6 className=\"mb-0 fw-bold\">Required Documents</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>S.No</th>\r\n                                                <th>Document Name</th>\r\n                                                <th>File Upload</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {formData.document.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.documentName}\r\n                                                            onChange={(e) => handleDocumentChange(index, \"documentName\", e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={(e) => handleDocumentChange(index, \"filePath\", e.target.files[0])}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => removeDocumentRow(index)}>\r\n                                                            <i className=\"icofont-close\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={addDocumentRow}>\r\n                                        Add Row +\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-4 d-flex justify-content-end\">\r\n                        <button type=\"reset\" className=\"btn btn-secondary me-2\">Save</button>\r\n                        <button onClick={handleSubmit} type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmployeeRegistration;\r\n"],"names":["BASE_URL","API_HOST","getRequest","async","endpoint","headers","arguments","length","undefined","token","localStorage","Authorization","getItem","sessionStorage","response","fetch","method","ok","Error","status","json","error","console","postRequest","data","body","JSON","stringify","EMPLOYEE_REGISTRATION","EMPLOYEE","EmployeeRegistration","formData","setFormData","useState","profilePicName","idDocumentName","firstName","middleName","lastName","dob","genderId","address1","countryId","stateId","districtId","city","pincode","mobileNo","registrationNo","identificationType","fromDate","qualification","employeeQualificationId","institutionName","completionYear","qualificationName","filePath","document","employeeDocumentId","documentName","popup","setPopup","popupMessage","setPopupMessage","profileImage","setProfileImage","loading","setLoading","countryData","setCountryData","stateData","setStateData","districtData","setDistrictData","genderData","setGenderData","idTypeData","setIdTypeData","countryIds","setCountryIds","stateIds","setStateIds","useEffect","fetchCountryData","fetchGenderData","fetchIdTypeData","showPopup","message","type","onClose","COUNTRYAPI","Array","isArray","fetchStateData","GET_STATES","STATEAPI","fetchDistrictData","GET_CITIES","DISTRICTAPI","GENDERAPI","GETALL","handleInputChange","e","id","value","target","prevData","handleQualificationChange","index","field","prev","updatedQualification","handleDocumentChange","updatedDocuments","log","_jsx","_Fragment","children","className","_jsxs","Popup","required","placeholder","onChange","style","paddingRight","handleGenderChange","gendersId","parseInt","prevState","disabled","map","gender","genderName","selectedCountry","find","country","toString","handleCountryChange","countryCode","countryName","selectedState","state","handleStateChange","stateCode","stateName","handleDistrictChange","dist","districtName","handleIdTypeChange","idTypeId","idType","identificationName","accept","files","src","placeholderImage","alt","objectFit","file","imageUrl","URL","createObjectURL","row","onClick","filter","_","i","removeEducationRow","preventDefault","removeDocumentRow","addDocumentRow","formDataToSubmit","FormData","append","forEach","qual","doc","statusText","_error$response"],"sourceRoot":""}