{"version":3,"file":"static/js/194.f2b196db.chunk.js","mappings":"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","sources":["Views/Admin/Employee/ViewSearchEmployee/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport placeholderImage from \"../../../../assets/images/placeholder.jpg\";\r\nimport { MAS_COUNTRY, MAS_DISTRICT, MAS_STATE, MAS_GENDER, MAS_ROLES, MAS_IDENTIFICATION_TYPE, API_HOST, MAS_EMPLOYMENT_TYPE, MAS_USER_TYPE, EMPLOYEE_REGISTRATION } from \"../../../../config/apiConfig\";\r\nimport { getRequest, putRequest, postRequestWithFormData, getImageRequest } from \"../../../../service/apiService\";\r\nimport Popup from \"../../../../Components/popup\";\r\nimport LoadingScreen from \"../../../../Components/Loading\";\r\n\r\nconst ViewSearchEmployee = () => {\r\n  const initialFormData = {\r\n    profilePicName: null,\r\n    idDocumentName: null,\r\n    firstName: \"\",\r\n    middleName: \"\",\r\n    lastName: \"\",\r\n    dob: \"\",\r\n    genderId: \"\",\r\n    address1: \"\",\r\n    countryId: \"\",\r\n    stateId: \"\",\r\n    districtId: \"\",\r\n    city: \"\",\r\n    pincode: \"\",\r\n    mobileNo: \"\",\r\n    identificationType: \"\",\r\n    registrationNo: \"\",\r\n    employmentTypeId: \"\",\r\n    employeeTypeId: \"\",\r\n    roleId: \"\",\r\n    fromDate: \"\",\r\n    qualification: [{ employeeQualificationId: 1, institutionName: \"\", completionYear: \"\", qualificationName: \"\", filePath: null }],\r\n    document: [{ employeeDocumentId: 1, documentName: \"\", filePath: null }],\r\n  };\r\n\r\n  const [formData, setFormData] = useState(initialFormData);\r\n  const mlenght = 15;\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingEmployee, setEditingEmployee] = useState(null);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [popup, setPopup] = useState(\"\");\r\n  const [popupMessage, setPopupMessage] = useState(\"\");\r\n  const [empUpdateId, setEmpUpdateId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [countryData, setCountryData] = useState([]);\r\n  const [stateData, setStateData] = useState([]);\r\n  const [districtData, setDistrictData] = useState([]);\r\n  const [genderData, setGenderData] = useState([]);\r\n  const [countryIds, setCountryIds] = useState(\"\");\r\n  const [stateIds, setStateIds] = useState(\"\");\r\n  const [idTypeData, setIdTypeData] = useState([]);\r\n  const [roleData, setRoleData] = useState([]);\r\n  const [employeeTypeData, setEmployeeTypeData] = useState([]);\r\n  const [employmentTypeData, setEmploymentTypeData] = useState([]);\r\n  const [filteredEmployees, setFilteredEmployees] = useState([]);\r\n  const [searchMobile, setSearchMobile] = useState(\"\");\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [pageInput, setPageInput] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const [showDocModal, setShowDocModal] = useState(false);\r\n  const [docUrl, setDocUrl] = useState(null);\r\n  const [docType, setDocType] = useState(\"\");\r\n  const itemsPerPage = 5;\r\n\r\n  const token = localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    fetchEmployeesData();\r\n    fetchCountryData();\r\n    fetchGenderData();\r\n    fetchIdTypeData();\r\n    fetchRoleData();\r\n    fetchEmployeeTypeData();\r\n    fetchEmploymentTypeData();\r\n\r\n\r\n  }, []);\r\n\r\n  const showPopup = (message, type = \"info\") => {\r\n    setPopupMessage({\r\n      message,\r\n      type,\r\n      onClose: () => {\r\n        setPopupMessage(null);\r\n      },\r\n    });\r\n  };\r\n\r\n  const fetchEmployeesData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`/${EMPLOYEE_REGISTRATION}/getAllEmployee`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setEmployees(data.response);\r\n        setFilteredEmployees(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setEmployees([]);\r\n        setFilteredEmployees([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Employees data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const fetchCountryData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${MAS_COUNTRY}/getAll/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setCountryData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setCountryData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching country data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStateData = async (countryIds) => {\r\n    setLoading(true);\r\n    try {\r\n      const GET_STATES = `${MAS_STATE}/getByCountryId/${countryIds}`;\r\n      const data = await getRequest(GET_STATES);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setStateData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setStateData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching state data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDistrictData = async (stateIds) => {\r\n    setLoading(true);\r\n    try {\r\n      const GET_CITIES = `${MAS_DISTRICT}/getByState/${stateIds}`;\r\n      const data = await getRequest(GET_CITIES);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setDistrictData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDistrictData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching city data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchGenderData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${MAS_GENDER}/getAll/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setGenderData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setGenderData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Gender data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchIdTypeData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${MAS_IDENTIFICATION_TYPE}/getAll/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setIdTypeData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setIdTypeData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching IdType data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchEmployeeTypeData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${MAS_USER_TYPE}/getAll/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setEmployeeTypeData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setEmployeeTypeData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching EmployeeType data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchEmploymentTypeData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${MAS_EMPLOYMENT_TYPE}/getAll/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setEmploymentTypeData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setEmploymentTypeData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching EmploymentType data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchRoleData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${MAS_ROLES}/getAll/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setRoleData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setRoleData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Role data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchImageSrc = async (empId) => {\r\n    try {\r\n      const imageBlob = await getImageRequest(`/api/employee/getProfileImageSrcInEmployee/${empId}`, {}, \"blob\");\r\n      const imageUrl = URL.createObjectURL(imageBlob);\r\n      setImageSrc(imageUrl);\r\n    } catch (error) {\r\n      console.error(\"Error fetching image source\", error);\r\n    }\r\n  };\r\n\r\n  const handleViewDocument = async (filePath) => {\r\n    try {\r\n      const blob = await getImageRequest(`/api/employee/viewDocument?filePath=${encodeURIComponent(filePath)}`, {}, \"blob\");\r\n\r\n      const fileURL = URL.createObjectURL(blob);\r\n      const fileType = blob.type;\r\n\r\n      setDocUrl(fileURL);\r\n      setDocType(fileType);\r\n      setShowDocModal(true);\r\n\r\n    } catch (error) {\r\n      console.error(\"Failed to load document:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleCountryChange = (id) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      countryId: id,\r\n      stateId: \"\",\r\n      districtId: \"\",\r\n    }));\r\n    fetchStateData(id);\r\n  };\r\n\r\n  const handleStateChange = (id) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      stateId: id,\r\n      districtId: \"\",\r\n    }));\r\n    fetchDistrictData(id);\r\n  };\r\n\r\n  const handleDistrictChange = (districtId) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      districtId: districtId,\r\n    }));\r\n  };\r\n\r\n  const handleGenderChange = (gendersId) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      genderId: gendersId,\r\n    }));\r\n  };\r\n\r\n  const handleEmploymentTypeChange = (emptTypeId) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      employmentTypeId: emptTypeId,\r\n    }));\r\n  };\r\n\r\n  const handleEmployeeTypeChange = (empTypeId) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      employeeTypeId: empTypeId,\r\n    }));\r\n  };\r\n\r\n  const handleRoleChange = (role) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      roleId: role,\r\n    }));\r\n  };\r\n\r\n  const handleIdTypeChange = (idTypeId) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      identificationType: idTypeId,\r\n    }));\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setFormData((prevFormData) => ({\r\n          ...prevFormData,\r\n          profilePicName: file,\r\n          profilePicPreview: reader.result,\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleQualificationChange = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      qualification: prev.qualification.map((item, i) =>\r\n        i === index ? { ...item, [field]: value } : item\r\n      )\r\n    }));\r\n  };\r\n\r\n  const removeEducationRow = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      qualification: prev.qualification.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addEducationRow = (e) => {\r\n    e.preventDefault();\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      qualification: [\r\n        ...prev.qualification,\r\n        {\r\n          employeeQualificationId: null,\r\n          institutionName: \"\",\r\n          completionYear: \"\",\r\n          qualificationName: \"\",\r\n          filePath: null,\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n\r\n  const handleDocumentChange = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      document: prev.document.map((item, i) =>\r\n        i === index ? { ...item, [field]: value } : item\r\n      )\r\n    }));\r\n  };\r\n\r\n  const addDocumentRow = (e) => {\r\n    e.preventDefault();\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      document: [\r\n        ...prev.document,\r\n        { employeeDocumentId: null, documentName: \"\", filePath: null },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const removeDocumentRow = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      document: prev.document.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const handleAnotherAction = async (employee) => {\r\n    setEditingEmployee(employee);\r\n    setShowForm(true);\r\n    setEmpUpdateId(employee.employeeId);\r\n\r\n    await fetchImageSrc(employee.employeeId);\r\n    // Set basic form data\r\n    const newFormData = {\r\n      ...initialFormData,\r\n      profilePicName: employee.profilePicName || null,\r\n      idDocumentName: employee.idDocumentName || null,\r\n      firstName: employee.firstName || \"\",\r\n      middleName: employee.middleName || \"\",\r\n      lastName: employee.lastName || \"\",\r\n      dob: employee.dob || \"\",\r\n      genderId: employee.genderId || \"\",\r\n      address1: employee.address1 || \"\",\r\n      countryId: employee.countryId || \"\",\r\n      stateId: employee.stateId || \"\",\r\n      districtId: employee.districtId || \"\",\r\n      city: employee.city || \"\",\r\n      pincode: employee.pincode || \"\",\r\n      mobileNo: employee.mobileNo || \"\",\r\n      identificationType: employee.identificationTypeId || \"\",\r\n      registrationNo: employee.registrationNo || \"\",\r\n      employmentTypeId: employee.employmentTypeId || \"\",\r\n      employeeTypeId: employee.employeeTypeId || \"\",\r\n      roleId: employee.roleId || \"\",\r\n      fromDate: employee.fromDate ? employee.fromDate.slice(0, 10) : \"\",\r\n    };\r\n\r\n    // Set qualifications and documents\r\n    if (employee.qualifications?.length) {\r\n      newFormData.qualification = employee.qualifications.map((q) => ({\r\n        employeeQualificationId: q.employeeQualificationId,\r\n        institutionName: q.institutionName || \"\",\r\n        completionYear: q.completionYear || \"\",\r\n        qualificationName: q.qualificationName || \"\",\r\n        filePath: q.filePath || null,\r\n      }));\r\n    }\r\n\r\n    if (employee.documents?.length) {\r\n      newFormData.document = employee.documents.map((d) => ({\r\n        employeeDocumentId: d.employeeDocumentId,\r\n        documentName: d.documentName || \"\",\r\n        filePath: d.filePath || null,\r\n      }));\r\n    }\r\n\r\n    setFormData(newFormData);\r\n\r\n    if (employee.countryId) {\r\n\r\n      await fetchStateData(employee.countryId);\r\n\r\n      if (employee.stateId) {\r\n        await fetchDistrictData(employee.stateId);\r\n\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [id]: value }));\r\n  };\r\n\r\n\r\n\r\n  const handleInputMobileChange = (e) => {\r\n    const { id, value } = e.target;\r\n    const numericValue = value.replace(/\\D/g, '');\r\n    setFormData((prevData) => ({ ...prevData, [id]: numericValue }));\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const lowerName = searchName.toLowerCase();\r\n    const filtered = employees.filter(emp => {\r\n      const fullName = `${emp.firstName} ${emp.middleName} ${emp.lastName}`.toLowerCase();\r\n      return (\r\n        (searchMobile === \"\" || emp.mobileNo.includes(searchMobile)) &&\r\n        (searchName === \"\" || fullName.includes(lowerName))\r\n      );\r\n    });\r\n    setFilteredEmployees(filtered);\r\n  };\r\n\r\n  const handleShowAll = () => {\r\n    setFilteredEmployees(employees);\r\n    setSearchMobile(\"\");\r\n    setSearchName(\"\");\r\n  };\r\n\r\n  const filteredTotalPages = Math.ceil(filteredEmployees.length / itemsPerPage);\r\n\r\n  const renderPagination = () => {\r\n    const pageNumbers = [];\r\n    const maxVisiblePages = 5;\r\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\r\n    const endPage = Math.min(filteredTotalPages, startPage + maxVisiblePages - 1);\r\n\r\n    if (endPage - startPage < maxVisiblePages - 1) {\r\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n    }\r\n\r\n    if (startPage > 1) {\r\n      pageNumbers.push(1);\r\n      if (startPage > 2) pageNumbers.push(\"...\");\r\n    }\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    if (endPage < filteredTotalPages) {\r\n      if (endPage < filteredTotalPages - 1) pageNumbers.push(\"...\");\r\n      pageNumbers.push(filteredTotalPages);\r\n    }\r\n\r\n    return pageNumbers.map((number, index) => (\r\n      <li key={index} className={`page-item ${number === currentPage ? \"active\" : \"\"}`}>\r\n        {typeof number === \"number\" ? (\r\n          <button className=\"page-link\" onClick={() => setCurrentPage(number)}>\r\n            {number}\r\n          </button>\r\n        ) : (\r\n          <span className=\"page-link disabled\">{number}</span>\r\n        )}\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  const handlePageNavigation = () => {\r\n    const pageNumber = parseInt(pageInput, 10);\r\n    if (pageNumber > 0 && pageNumber <= filteredTotalPages) {\r\n      setCurrentPage(pageNumber);\r\n    } else {\r\n      alert(\"Please enter a valid page number.\");\r\n    }\r\n  };\r\n\r\n  const currentItems = filteredEmployees.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n\r\n  const resetForm = () => {\r\n    setFormData(initialFormData);\r\n    setShowForm(false);\r\n    setEditingEmployee(null);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const requiredFields = [\r\n      'firstName', 'lastName', 'dob', 'genderId', 'address1',\r\n      'countryId', 'stateId', 'districtId', 'city', 'pincode',\r\n      'mobileNo', 'identificationType', 'registrationNo'\r\n    ];\r\n\r\n    for (const field of requiredFields) {\r\n      if (!formData[field]) {\r\n        showPopup(`Please fill in the required field: ${field.replace(/([A-Z])/g, ' $1').replace(/^./, (str) => str.toUpperCase())}`, \"error\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (!formData.profilePicName && !editingEmployee?.profilePicName) {\r\n      showPopup(\"Profile picture is required\", \"error\");\r\n      return false;\r\n    }\r\n\r\n    if (!formData.idDocumentName && !editingEmployee?.idDocumentName) {\r\n      showPopup(\"ID document is required\", \"error\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const prepareFormData = () => {\r\n    if (!validateForm()) {\r\n      return null;\r\n    }\r\n\r\n    const formDataToSend = new FormData();\r\n\r\n    // Basic info fields\r\n    formDataToSend.append('firstName', formData.firstName);\r\n    formDataToSend.append('lastName', formData.lastName);\r\n    if (formData.middleName) formDataToSend.append('middleName', formData.middleName);\r\n    formDataToSend.append('dob', new Date(formData.dob).toISOString().split('T')[0]);\r\n    formDataToSend.append('genderId', formData.genderId);\r\n    formDataToSend.append('address1', formData.address1);\r\n    formDataToSend.append('countryId', formData.countryId);\r\n    formDataToSend.append('stateId', formData.stateId);\r\n    formDataToSend.append('districtId', formData.districtId);\r\n    formDataToSend.append('city', formData.city);\r\n    formDataToSend.append('pincode', formData.pincode);\r\n    formDataToSend.append('mobileNo', formData.mobileNo);\r\n    formDataToSend.append('registrationNo', formData.registrationNo);\r\n    formDataToSend.append('identificationType', formData.identificationType);\r\n    formDataToSend.append('employeeTypeId', formData.employeeTypeId);\r\n    formDataToSend.append('employmentTypeId', formData.employmentTypeId);\r\n    formDataToSend.append('roleId', formData.roleId);\r\n    formDataToSend.append('fromDate', new Date(formData.fromDate).toISOString());\r\n\r\n    if (formData.deprtId) {\r\n      formDataToSend.append('departmentId', formData.deprtId);\r\n    }\r\n\r\n    if (formData.profilePicName instanceof File) {\r\n      formDataToSend.append('profilePicName', formData.profilePicName);\r\n    }\r\n\r\n    if (formData.idDocumentName instanceof File) {\r\n      formDataToSend.append('idDocumentName', formData.idDocumentName);\r\n    }\r\n\r\n    formData.qualification.forEach((qual, index) => {\r\n      formDataToSend.append(`qualification[${index}].institutionName`, qual.institutionName);\r\n      formDataToSend.append(`qualification[${index}].completionYear`, qual.completionYear);\r\n      formDataToSend.append(`qualification[${index}].qualificationName`, qual.qualificationName);\r\n\r\n      if (qual.employeeQualificationId && qual.employeeQualificationId !== 1) {\r\n        formDataToSend.append(`qualification[${index}].employeeQualificationId`, qual.employeeQualificationId);\r\n      }\r\n\r\n      if (qual.filePath instanceof File) {\r\n        formDataToSend.append(`qualification[${index}].filePath`, qual.filePath);\r\n      }\r\n    });\r\n\r\n    formData.document.forEach((doc, index) => {\r\n      formDataToSend.append(`document[${index}].documentName`, doc.documentName);\r\n\r\n      if (doc.employeeDocumentId && doc.employeeDocumentId !== 1) {\r\n        formDataToSend.append(`document[${index}].employeeDocumentId`, doc.employeeDocumentId);\r\n      }\r\n\r\n      if (doc.filePath instanceof File) {\r\n        formDataToSend.append(`document[${index}].filePath`, doc.filePath);\r\n      }\r\n    });\r\n\r\n    return formDataToSend;\r\n  };\r\n\r\n\r\n  const handleSave = async () => {\r\n    const formDataToSend = prepareFormData();\r\n    if (!formDataToSend) return;\r\n    console.log(\"Form data to send:\", formDataToSend);\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_HOST}/${EMPLOYEE_REGISTRATION}/employee/${empUpdateId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Accept': 'application/json'\r\n        },\r\n        body: formDataToSend\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        showPopup(\"Employee updated successfully\", \"success\");\r\n        resetForm();\r\n      } else {\r\n        showPopup(`Error: ${data.message || 'Failed to update employee'}`, \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating employee:\", error);\r\n      showPopup(\"Error submitting form. Please try again.\", \"error\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"body d-flex py-3\">\r\n      <div className=\"container-xxl\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"border-0 mb-4\">\r\n            {popupMessage && (\r\n              <Popup\r\n                message={popupMessage.message}\r\n                type={popupMessage.type}\r\n                onClose={popupMessage.onClose}\r\n              />\r\n            )}\r\n            {loading && <LoadingScreen />}\r\n\r\n            <div className=\"card-header py-3 bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n              <h3 className=\"fw-bold mb-0\">Employee List</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {!showForm ? (\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"card shadow\">\r\n                <div className=\"card-body\">\r\n                  {/* Search Section */}\r\n                  <div className=\"row mb-4\">\r\n                    <div className=\"col-md-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Mobile Number\"\r\n                        value={searchMobile}\r\n                        onChange={(e) => setSearchMobile(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Employee Name\"\r\n                        value={searchName}\r\n                        onChange={(e) => setSearchName(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <button className=\"btn btn-primary w-100\" onClick={handleSearch}>Search</button>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <button className=\"btn btn-warning w-100\" onClick={handleShowAll}>Show All</button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <table className=\"table table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>S.N.</th>\r\n                        <th>Employee Name</th>\r\n                        <th>Gender</th>\r\n                        <th>Date Of Birth</th>\r\n                        <th>Mobile No</th>\r\n                        <th>Type Of Employee</th>\r\n                        <th>Role</th>\r\n                        <th>Status</th>\r\n                        <th>Edit</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredEmployees.length > 0 ? (\r\n                        currentItems.map((employee, index) => (\r\n                          <tr key={index}>\r\n                            <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\r\n                            <td>{employee.firstName} {employee.middleName} {employee.lastName}</td>\r\n                            <td>{employee.gender}</td>\r\n                            <td>{employee.dob}</td>\r\n                            <td>{employee.mobileNo}</td>\r\n                            <td>{employee.employeeType}</td>\r\n                            <td>{employee.role}</td>\r\n                            <td>\r\n                              {employee.status === \"A\" ? (\r\n                                <i className=\"fa fa-check-circle text-success fa-2x\"></i>\r\n                              ) : (\r\n                                <i className=\"fa fa-times-circle fa-2x text-danger\"></i>\r\n                              )}\r\n                            </td>\r\n                            <td>\r\n                              <button\r\n                                className=\"btn btn-sm btn-success\"\r\n                                onClick={() => handleAnotherAction(employee)}\r\n                                disabled={employee.status !== \"S\"}\r\n                              >\r\n                                <i className=\"fa fa-pencil\"></i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))\r\n                      ) : (<tr>\r\n                        <td colSpan=\"7\" className=\"text-center text-danger\">\r\n                          No Record Found\r\n                        </td>\r\n                      </tr>)}\r\n\r\n                    </tbody>\r\n                  </table>\r\n\r\n                  <nav className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                    <div>\r\n                      <span>\r\n                        Page {currentPage} of {filteredTotalPages} | Total Records: {filteredEmployees.length}\r\n                      </span>\r\n                    </div>\r\n                    <ul className=\"pagination mb-0\">\r\n                      <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n                        <button\r\n                          className=\"page-link\"\r\n                          onClick={() => setCurrentPage(currentPage - 1)}\r\n                          disabled={currentPage === 1}\r\n                        >\r\n                          &laquo; Previous\r\n                        </button>\r\n                      </li>\r\n                      {renderPagination()}\r\n                      <li className={`page-item ${currentPage === filteredTotalPages ? \"disabled\" : \"\"}`}>\r\n                        <button\r\n                          className=\"page-link\"\r\n                          onClick={() => setCurrentPage(currentPage + 1)}\r\n                          disabled={currentPage === filteredTotalPages}\r\n                        >\r\n                          Next &raquo;\r\n                        </button>\r\n                      </li>\r\n                    </ul>\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        max={filteredTotalPages}\r\n                        value={pageInput}\r\n                        onChange={(e) => setPageInput(e.target.value)}\r\n                        placeholder=\"Go to page\"\r\n                        className=\"form-control me-2\"\r\n                      />\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={handlePageNavigation}\r\n                      >\r\n                        Go\r\n                      </button>\r\n                    </div>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={(e) => {\r\n            e.preventDefault();\r\n            handleSave();\r\n          }} className=\"forms row\">\r\n\r\n            <div className=\"g-3 row\">\r\n              <div className=\"col-md-9\">\r\n                <div className=\"g-3 row\">\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">First Name *</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      className=\"form-control\"\r\n                      id=\"firstName\"\r\n                      placeholder=\"First Name\"\r\n                      onChange={handleInputChange}\r\n                      value={formData.firstName}\r\n                      maxLength={mlenght}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Middle Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"middleName\"\r\n                      placeholder=\"Middle Name\"\r\n                      onChange={handleInputChange}\r\n                      value={formData.middleName}\r\n                      maxLength={mlenght}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Last Name *</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      className=\"form-control\"\r\n                      id=\"lastName\"\r\n                      placeholder=\"Last Name\"\r\n                      onChange={handleInputChange}\r\n                      value={formData.lastName}\r\n                      maxLength={mlenght}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Date of Birth *</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      required\r\n                      id=\"dob\"\r\n                      value={formData.dob}\r\n                      className=\"form-control\"\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Gender *</label>\r\n                    <select\r\n                      className=\"form-select\"\r\n                      style={{ paddingRight: \"40px\" }}\r\n                      value={formData.genderId}\r\n                      onChange={(e) =>\r\n                        handleGenderChange(parseInt(e.target.value, 10))\r\n                      }\r\n                      disabled={loading}\r\n                    >\r\n                      <option value=\"\">Select Gender</option>\r\n                      {genderData.map((gender) => (\r\n                        <option key={gender.id} value={gender.id}>\r\n                          {gender.genderName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Address *</label>\r\n                    <textarea\r\n                      required\r\n                      id=\"address1\"\r\n                      value={formData.address1}\r\n                      className=\"form-control\"\r\n                      onChange={handleInputChange}\r\n                      placeholder=\"Address\"\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Country *</label>\r\n                    <select\r\n                      className=\"form-select\"\r\n                      value={formData.countryId}\r\n                      onChange={(e) => {\r\n                        const selectedCountry = countryData.find(\r\n                          (country) => country.id.toString() === e.target.value\r\n                        );\r\n                        if (selectedCountry) {\r\n                          handleCountryChange(selectedCountry.id);\r\n                          setCountryIds(selectedCountry.id);\r\n                          fetchStateData(selectedCountry.id);\r\n                        }\r\n                      }}\r\n                      disabled={loading}\r\n                    >\r\n                      <option value=\"\">Select Country</option>\r\n                      {countryData.map((country) => (\r\n                        <option key={country.id} value={country.id}>\r\n                          {country.countryName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">State *</label>\r\n                    <select\r\n                      className=\"form-select\"\r\n                      value={formData.stateId}\r\n                      onChange={(e) => {\r\n                        const selectedState = stateData.find(\r\n                          (state) => state.id.toString() === e.target.value\r\n                        );\r\n                        if (selectedState) {\r\n                          handleStateChange(selectedState.id);\r\n                          setStateIds(selectedState.id);\r\n                          fetchDistrictData(selectedState.id);\r\n                        }\r\n                      }}\r\n                      disabled={loading || !formData.countryId}\r\n                    >\r\n                      <option value=\"\">Select State</option>\r\n                      {stateData.map((state) => (\r\n                        <option key={state.id} value={state.id}>\r\n                          {state.stateName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">District *</label>\r\n                    <select\r\n                      className=\"form-select\"\r\n                      value={formData.districtId}\r\n                      onChange={(e) => handleDistrictChange(e.target.value)}\r\n                      disabled={loading || !formData.stateId}\r\n                    >\r\n                      <option value=\"\">Select District</option>\r\n                      {districtData.map((dist) => (\r\n                        <option key={dist.id} value={dist.id}>\r\n                          {dist.districtName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">City *</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      className=\"form-control\"\r\n                      id=\"city\"\r\n                      placeholder=\"City\"\r\n                      onChange={handleInputChange}\r\n                      value={formData.city}\r\n                      maxLength={mlenght}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Pincode *</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      className=\"form-control\"\r\n                      id=\"pincode\"\r\n                      placeholder=\"Pincode\"\r\n                      onChange={handleInputMobileChange}\r\n                      value={formData.pincode}\r\n                      maxLength={6}\r\n                      minLength={6}\r\n                      inputMode=\"numeric\"\r\n                      pattern=\"\\d*\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Mobile No. *</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      className=\"form-control\"\r\n                      id=\"mobileNo\"\r\n                      placeholder=\"Mobile No.\"\r\n                      onChange={handleInputMobileChange}\r\n                      value={formData.mobileNo}\r\n                      maxLength={10}\r\n                      minLength={10}\r\n                      inputMode=\"numeric\"\r\n                      pattern=\"\\d*\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">ID Type *</label>\r\n                    <select\r\n                      className=\"form-select\"\r\n                      style={{ paddingRight: \"40px\" }}\r\n                      value={formData.identificationType}\r\n                      onChange={(e) =>\r\n                        handleIdTypeChange(parseInt(e.target.value, 10))\r\n                      }\r\n                      disabled={loading}\r\n                    >\r\n                      <option value=\"\">Select ID Type</option>\r\n                      {idTypeData.map((idType) => (\r\n                        <option key={idType.identificationTypeId} value={idType.identificationTypeId}>\r\n                          {idType.identificationName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">ID Number *</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      className=\"form-control\"\r\n                      id=\"registrationNo\"\r\n                      placeholder=\"ID Number\"\r\n                      onChange={handleInputChange}\r\n                      value={formData.registrationNo}\r\n                      maxLength={mlenght}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">ID Upload (JPEG/PDF) *</label>\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"idDocumentName\"\r\n                      className=\"form-control mt-2\"\r\n                      accept=\".jpg,.jpeg,.png,.pdf\"\r\n                      onChange={(e) => setFormData({ ...formData, idDocumentName: e.target.files[0] })}\r\n                    />\r\n                    {editingEmployee?.idDocumentName && formData.idDocumentName && (\r\n                      <div className=\"d-flex align-items-center mt-1\">\r\n                        <small className=\"text-muted\">Current file: {editingEmployee.idDocumentName.split('/').pop().replace(/^\\d+_/, '')}</small>\r\n                        <div\r\n                          onClick={() => handleViewDocument(editingEmployee.idDocumentName)}\r\n                          className=\"text-success d-flex align-items-center ms-2\"\r\n                          style={{ cursor: 'pointer' }}\r\n                          onMouseEnter={(e) => {\r\n                            e.currentTarget.style.color = '#0f8c75';\r\n                            e.currentTarget.style.fontWeight = 'bold';\r\n                          }}\r\n                          onMouseLeave={(e) => {\r\n                            e.currentTarget.style.backgroundColor = 'transparent';\r\n                            e.currentTarget.style.color = '';\r\n                            e.currentTarget.style.fontWeight = 'normal';\r\n                          }}\r\n\r\n                        >\r\n                          <i className=\"icofont-eye me-1\"></i>\r\n                          <small>View</small>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Role Name *</label>\r\n                    <select\r\n                      className=\"form-select\"\r\n                      style={{ paddingRight: \"40px\" }}\r\n                      value={formData.roleId}\r\n                      onChange={(e) =>\r\n                        handleRoleChange(parseInt(e.target.value, 10))\r\n                      }\r\n                      disabled={loading}\r\n                    >\r\n                      <option value=\"\">Select Role</option>\r\n                      {roleData.map((role) => (\r\n                        <option key={role.id} value={role.id}>\r\n                          {role.roleDesc}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Period of Employment From Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"fromDate\"\r\n                      value={formData.fromDate}\r\n                      className=\"form-control\"\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Type of Employee *</label>\r\n                    <select\r\n                      className=\"form-select\"\r\n                      style={{ paddingRight: \"40px\" }}\r\n                      value={formData.employeeTypeId}\r\n                      onChange={(e) =>\r\n                        handleEmployeeTypeChange(parseInt(e.target.value, 10))\r\n                      }\r\n                      disabled={loading}\r\n                    >\r\n                      <option value=\"\">Select Employee Type</option>\r\n                      {employeeTypeData.map((empType) => (\r\n                        <option key={empType.userTypeId} value={empType.userTypeId}>\r\n                          {empType.userTypeName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"form-label\">Type of Employment *</label>\r\n                    <select\r\n                      className=\"form-select\"\r\n                      style={{ paddingRight: \"40px\" }}\r\n                      value={formData.employmentTypeId}\r\n                      onChange={(e) =>\r\n                        handleEmploymentTypeChange(parseInt(e.target.value, 10))\r\n                      }\r\n                      disabled={loading}\r\n                    >\r\n                      <option value=\"\">Select Employment Type</option>\r\n                      {employmentTypeData.map((emptType) => (\r\n                        <option key={emptType.id} value={emptType.id}>\r\n                          {emptType.employmentType}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3 d-flex flex-column\">\r\n                <label className=\"form-label\">Profile Image *</label>\r\n                <div className=\"d-flex flex-column align-items-center border p-2\">\r\n                  <img\r\n                    src={formData.profilePicPreview || imageSrc || placeholderImage}\r\n                    alt=\"Profile\"\r\n                    className=\"img-fluid\"\r\n                    style={{ objectFit: \"cover\", maxWidth: \"100%\", height: \"150px\" }}\r\n                  />\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"profilePicName\"\r\n                    className=\"form-control mt-2\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row mb-3 mt-4\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"card shadow mb-3\">\r\n                  <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                    <h6 className=\"fw-bold mb-0\">Educational Qualification</h6>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table className=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>S.No</th>\r\n                          <th>Degree</th>\r\n                          <th>Name of Institution</th>\r\n                          <th>Year of Completion</th>\r\n                          <th>File Upload</th>\r\n                          <th>Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {formData.qualification.map((row, index) => (\r\n                          <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={row.qualificationName}\r\n                                onChange={(e) => handleQualificationChange(index, \"qualificationName\", e.target.value)}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={row.institutionName}\r\n                                onChange={(e) => handleQualificationChange(index, \"institutionName\", e.target.value)}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"YYYY\"\r\n                                value={row.completionYear}\r\n                                onChange={(e) => handleQualificationChange(index, \"completionYear\", e.target.value)}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <input\r\n                                type=\"file\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => handleQualificationChange(index, \"filePath\", e.target.files[0])}\r\n                                accept=\".pdf,.jpg,.jpeg,.png\"\r\n                              />\r\n\r\n                              {/* <i  className=\"icofont-eye\"></i> */}\r\n\r\n\r\n                              <div className=\"d-flex align-items-center mt-1\">\r\n\r\n                                {row.filePath && typeof row.filePath === \"string\" && (\r\n                                  <>\r\n                                    <small className=\"text-muted\">Current file: {row.filePath.split('/').pop().replace(/^\\d+_/, '')}</small>\r\n                                    <div\r\n                                      onClick={() => handleViewDocument(row.filePath)}\r\n                                      className=\"text-success d-flex align-items-center ms-2\"\r\n                                      style={{ cursor: 'pointer' }}\r\n                                      onMouseEnter={(e) => {\r\n                                        e.currentTarget.style.color = '#0f8c75';\r\n                                        e.currentTarget.style.fontWeight = 'bold';\r\n                                      }}\r\n                                      onMouseLeave={(e) => {\r\n                                        e.currentTarget.style.backgroundColor = 'transparent';\r\n                                        e.currentTarget.style.color = '';\r\n                                        e.currentTarget.style.fontWeight = 'normal';\r\n                                      }}\r\n\r\n                                    >\r\n                                      <i className=\"icofont-eye me-1\"></i>\r\n                                      <small>View</small>\r\n                                    </div>\r\n                                  </>\r\n                                )}\r\n\r\n                              </div>\r\n\r\n\r\n                            </td>\r\n                            <td>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => removeEducationRow(index)}\r\n                              >\r\n                                <i className=\"icofont-close\"></i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                    <button type=\"button\" className=\"btn btn-success\" onClick={addEducationRow}>\r\n                      Add Row +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"card shadow mb-3\">\r\n                  <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                    <h6 className=\"fw-bold mb-0\">Required Documents</h6>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table className=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>S.No</th>\r\n                          <th>Document Name</th>\r\n                          <th>File Upload</th>\r\n                          <th>Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {formData.document.map((row, index) => (\r\n                          <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={row.documentName}\r\n                                onChange={(e) => handleDocumentChange(index, \"documentName\", e.target.value)}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <input\r\n                                type=\"file\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => handleDocumentChange(index, \"filePath\", e.target.files[0])}\r\n                                accept=\".pdf,.jpg,.jpeg,.png\"\r\n                              />\r\n\r\n\r\n                              <div className=\"d-flex align-items-center mt-1\">\r\n                                {row.filePath && typeof row.filePath === \"string\" && (\r\n                                  <>\r\n                                    <small className=\"text-muted mr-2\">Current file: {row.filePath.split('/').pop().replace(/^\\d+_/, '')}</small>\r\n\r\n                                    <div\r\n                                      onClick={() => handleViewDocument(row.filePath)}\r\n                                      className=\"text-success d-flex align-items-center ms-2\"\r\n                                      style={{ cursor: 'pointer' }}\r\n                                      onMouseEnter={(e) => {\r\n                                        e.currentTarget.style.color = '#0f8c75';\r\n                                        e.currentTarget.style.fontWeight = 'bold';\r\n                                      }}\r\n                                      onMouseLeave={(e) => {\r\n                                        e.currentTarget.style.backgroundColor = 'transparent';\r\n                                        e.currentTarget.style.color = '';\r\n                                        e.currentTarget.style.fontWeight = 'normal';\r\n                                      }}\r\n\r\n                                    >\r\n                                      <i onClick={() => handleViewDocument(row.filePath)} className=\"icofont-eye\"></i>\r\n\r\n                                      <small>View</small>\r\n                                    </div>\r\n                                  </>\r\n                                )}\r\n\r\n                              </div>\r\n\r\n\r\n\r\n                            </td>\r\n\r\n\r\n\r\n\r\n\r\n                            <td>\r\n                              <button type=\"button\" className=\"btn btn-danger\" onClick={() => removeDocumentRow(index)}>\r\n                                <i className=\"icofont-close\"></i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                    <button type=\"button\" className=\"btn btn-success\" onClick={addDocumentRow}>\r\n                      Add Row +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-12 d-flex justify-content-end mt-2\">\r\n              <button\r\n                type=\"submit\" className=\"btn btn-primary me-2\">\r\n                {editingEmployee ? \"Update\" : \"Save\"}\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-danger\" onClick={resetForm}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n      {showDocModal && (\r\n        <div\r\n          className=\"modal show d-block\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          style={{\r\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n            zIndex: 100000,\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            overflow: \"auto\"\r\n          }}\r\n        >\r\n\r\n          <div className=\"modal-dialog modal-xl\" role=\"document\" style={{ zIndex: 100000 }}>\r\n            <div className=\"modal-content\" style={{ backgroundColor: \"#20c997\", color: \"white\" }}>\r\n              <div className=\"modal-header\" >\r\n                <h5 className=\"modal-title\"  >Document Viewer</h5>\r\n                <button type=\"button\" className=\"close\" onClick={() => setShowDocModal(false)}>\r\n                  <span>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\" style={{ minHeight: '500px' }}>\r\n                {docType === \"application/pdf\" ? (\r\n                  <iframe src={docUrl} width=\"100%\" height=\"500px\" title=\"PDF Viewer\" />\r\n                ) : (\r\n                  <img src={docUrl} alt=\"Document\" className=\"img-fluid\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewSearchEmployee;"],"names":["ViewSearchEmployee","initialFormData","profilePicName","idDocumentName","firstName","middleName","lastName","dob","genderId","address1","countryId","stateId","districtId","city","pincode","mobileNo","identificationType","registrationNo","employmentTypeId","employeeTypeId","roleId","fromDate","qualification","employeeQualificationId","institutionName","completionYear","qualificationName","filePath","document","employeeDocumentId","documentName","formData","setFormData","useState","showForm","setShowForm","editingEmployee","setEditingEmployee","employees","setEmployees","popup","setPopup","popupMessage","setPopupMessage","empUpdateId","setEmpUpdateId","loading","setLoading","countryData","setCountryData","stateData","setStateData","districtData","setDistrictData","genderData","setGenderData","countryIds","setCountryIds","stateIds","setStateIds","idTypeData","setIdTypeData","roleData","setRoleData","employeeTypeData","setEmployeeTypeData","employmentTypeData","setEmploymentTypeData","filteredEmployees","setFilteredEmployees","searchMobile","setSearchMobile","searchName","setSearchName","pageInput","setPageInput","currentPage","setCurrentPage","imageSrc","setImageSrc","showDocModal","setShowDocModal","docUrl","setDocUrl","docType","setDocType","token","localStorage","getItem","sessionStorage","useEffect","fetchEmployeesData","fetchCountryData","fetchGenderData","fetchIdTypeData","fetchRoleData","fetchEmployeeTypeData","fetchEmploymentTypeData","showPopup","message","type","arguments","length","undefined","onClose","async","data","getRequest","EMPLOYEE_REGISTRATION","status","Array","isArray","response","console","error","MAS_COUNTRY","fetchStateData","GET_STATES","MAS_STATE","fetchDistrictData","GET_CITIES","MAS_DISTRICT","MAS_GENDER","MAS_IDENTIFICATION_TYPE","MAS_USER_TYPE","MAS_EMPLOYMENT_TYPE","MAS_ROLES","handleViewDocument","blob","getImageRequest","encodeURIComponent","fileURL","URL","createObjectURL","fileType","handleQualificationChange","index","field","value","prev","map","item","i","handleDocumentChange","handleAnotherAction","_employee$qualificati","_employee$documents","employee","employeeId","imageBlob","empId","imageUrl","fetchImageSrc","newFormData","identificationTypeId","slice","qualifications","q","documents","d","handleInputChange","e","id","target","prevData","handleInputMobileChange","numericValue","replace","filteredTotalPages","Math","ceil","currentItems","resetForm","prepareFormData","validateForm","requiredFields","str","toUpperCase","formDataToSend","FormData","append","Date","toISOString","split","deprtId","File","forEach","qual","doc","_jsxs","className","children","_jsx","Popup","LoadingScreen","onSubmit","preventDefault","log","fetch","API_HOST","method","headers","body","json","ok","handleSave","required","placeholder","onChange","maxLength","style","paddingRight","handleGenderChange","gendersId","parseInt","prevState","disabled","gender","genderName","selectedCountry","find","country","toString","countryName","selectedState","state","stateName","handleDistrictChange","dist","districtName","minLength","inputMode","pattern","handleIdTypeChange","idTypeId","idType","identificationName","accept","files","pop","onClick","cursor","onMouseEnter","currentTarget","color","fontWeight","onMouseLeave","backgroundColor","handleRoleChange","role","roleDesc","handleEmployeeTypeChange","empTypeId","empType","userTypeId","userTypeName","handleEmploymentTypeChange","emptTypeId","emptType","employmentType","src","profilePicPreview","placeholderImage","alt","objectFit","maxWidth","height","file","reader","FileReader","onloadend","prevFormData","result","readAsDataURL","row","_Fragment","filter","_","removeEducationRow","removeDocumentRow","handleSearch","lowerName","toLowerCase","filtered","emp","fullName","includes","handleShowAll","employeeType","colSpan","renderPagination","pageNumbers","startPage","max","floor","maxVisiblePages","endPage","min","push","number","handlePageNavigation","pageNumber","alert","tabIndex","zIndex","position","top","left","width","overflow","minHeight","title"],"sourceRoot":""}