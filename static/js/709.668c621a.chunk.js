"use strict";(self.webpackChunkhmis=self.webpackChunkhmis||[]).push([[709],{709:(e,s,t)=>{t.r(s),t.d(s,{default:()=>d});var r=t(43),a=t(533),n=t(253),c=t(351),o=t(128),l=t(579);const d=()=>{const[e,s]=(0,r.useState)(""),[t,d]=(0,r.useState)(""),[i,m]=(0,r.useState)(""),[h,u]=(0,r.useState)([]),[p,f]=(0,r.useState)([]),[x,N]=(0,r.useState)(!1),[b,j]=(0,r.useState)(null),[g,y]=(0,r.useState)(""),[v,$]=(0,r.useState)(""),[w,D]=(0,r.useState)(new Date),S=function(e){$({message:e,type:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",onClose:()=>{$(null)}})};(0,r.useEffect)((()=>{k()}),[]),(0,r.useEffect)((()=>{e&&I()}),[e]),(0,r.useEffect)((()=>{e&&i&&Y()}),[e,t,i,p]);const k=async()=>{N(!0);try{const e=await(0,n.iq)(`${a.Xw}/getAllDepartments/1`);200===e.status&&Array.isArray(e.response)?u(e.response):(console.error("Unexpected API response format:",e),u([]))}catch(e){console.error("Error fetching Department data:",e)}finally{N(!1)}},I=async()=>{N(!0);try{const s=await(0,n.iq)(`${a.WX}/doctorBySpeciality/${e}`);200===s.status&&Array.isArray(s.response)?f(s.response):(console.error("Unexpected API response format:",s),f([]))}catch(s){console.error("Error fetching Doctor data:",s)}finally{N(!1)}},Y=async()=>{if(e&&i)try{N(!0);const s=new URLSearchParams({deptId:e,rosterDate:i});t&&s.append("doctorId",t);const r=`${a._}/rosterfindWithDays?${s.toString()}`,c=await(0,n.iq)(r),o=(()=>{if(!i)return[];const e=new Date(i),s=new Date;s.setHours(0,0,0,0);const r=[];for(let t=0;t<7;t++){const a=new Date(e);if(a.setDate(e.getDate()+t),a.setHours(0,0,0,0),a>s){const e=`${a.getDate().toString().padStart(2,"0")}/${(a.getMonth()+1).toString().padStart(2,"0")}/${a.getFullYear()}`;r.push(e)}}let a=[];if(t){const e=p.find((e=>e.userId===parseInt(t)));e&&(a=[{name:`${e.firstName} ${e.lastName}`,id:e.userId}])}else a=p.map((e=>({name:`${e.firstName} ${e.lastName}`,id:e.userId})));return a.flatMap((e=>r.map((s=>({dates:s,rosterVale:"YY",doctorId:e.id,id:null})))))})();let l=[];if(c.response&&c.response.dates){const e=c.response.dates,s=new Map;e.forEach((e=>{const t=`${e.doctorId}-${e.dates}`;s.set(t,e)})),l=o.map((e=>{const t=`${e.doctorId}-${e.dates}`;return s.get(t)||e})),e.forEach((e=>{const s=`${e.doctorId}-${e.dates}`;l.some((e=>`${e.doctorId}-${e.dates}`===s))||l.push(e)}))}else l=o;const d={departmentId:parseInt(e),fromDate:i,dates:l};j(d)}catch(s){console.error("Error preparing roster data:",s),S("Error preparing roster data","error")}finally{N(!1)}},E=(e,s,t)=>{if(A(s)<w)return;const r=b.dates.map((r=>{if(r.doctorId===e&&r.dates===s){let e;switch(r.rosterVale){case"YY":e="morning"===t?"NY":"YN";break;case"YN":e="morning"===t?"NN":"YY";break;case"NY":e="morning"===t?"YY":"NN";break;case"NN":e="morning"===t?"YN":"NY";break;default:e="YY"}return{...r,rosterVale:e}}return r}));j((e=>({...e,dates:r})))},A=e=>{const[s,t,r]=e.split("/");return new Date(`${r}-${t}-${s}`)},C=e=>{if(!e)return"";const[s,t,r]=e.split("/");return new Date(`${r}-${t}-${s}`).toLocaleDateString("en-US",{day:"2-digit",month:"short",year:"numeric"})};return(0,l.jsx)("div",{className:"body d-flex py-3",children:(0,l.jsxs)("div",{className:"container-xxl",children:[(0,l.jsx)("div",{className:"row align-items-center",children:(0,l.jsx)("div",{className:"border-0 mb-4",children:(0,l.jsx)("div",{className:"card-header py-3 bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap",children:(0,l.jsx)("h3",{className:"fw-bold mb-0",children:"Doctor Roster"})})})}),v&&(0,l.jsx)(o.A,{message:v.message,type:v.type,onClose:v.onClose}),x&&(0,l.jsx)(c.A,{}),(0,l.jsx)("div",{className:"row mb-3",children:(0,l.jsx)("div",{className:"col-sm-12",children:(0,l.jsx)("div",{className:"card shadow mb-3",children:(0,l.jsx)("div",{className:"card-body",children:(0,l.jsxs)("form",{onSubmit:async s=>{if(s.preventDefault(),e&&i){N(!0);try{const e=`${a._}/roster`,s=await(0,n.MB)(e,b);200===s.status?(S("Roster saved successfully!","success"),Y()):S(`Error saving roster: ${s.message||"Unknown error"}`,"error")}catch(t){console.error("Error saving roster:",t),S("An error occurred while saving the roster","error")}finally{N(!1)}}else S("Please select Department and From Date","error")},children:[(0,l.jsxs)("div",{className:"row g-3",children:[(0,l.jsxs)("div",{className:"col-md-4",children:[(0,l.jsx)("label",{className:"form-label",children:"Department *"}),(0,l.jsxs)("select",{className:"form-select",value:e,onChange:e=>s(parseInt(e.target.value)),required:!0,children:[(0,l.jsx)("option",{value:"",disabled:!0,children:"Select"}),h.map((e=>(0,l.jsx)("option",{value:e.id,children:e.departmentName},e.id)))]})]}),(0,l.jsxs)("div",{className:"col-md-4",children:[(0,l.jsx)("label",{className:"form-label",children:"Doctor (Optional)"}),(0,l.jsxs)("select",{className:"form-select",value:t,onChange:e=>d(e.target.value),disabled:!e,children:[(0,l.jsx)("option",{value:"",children:"All Doctors"}),p.map((e=>(0,l.jsxs)("option",{value:e.userId,children:[e.firstName," ",e.lastName]},e.userId)))]})]}),(0,l.jsxs)("div",{className:"col-md-4",children:[(0,l.jsx)("label",{className:"form-label",children:"From Date *"}),(0,l.jsx)("input",{type:"date",className:"form-control",value:i,onChange:e=>m(e.target.value),required:!0})]}),b&&(()=>{if(!b||!b.dates||0===b.dates.length)return null;const e=new Map;b.dates.forEach((s=>{e.has(s.doctorId)||e.set(s.doctorId,[]),e.get(s.doctorId).push(s)}));const s=[...new Set(b.dates.map((e=>e.dates)))].sort(((e,s)=>A(e)-A(s)));return(0,l.jsx)("div",{className:"table-responsive",children:(0,l.jsxs)("table",{className:"table table-bordered",children:[(0,l.jsx)("thead",{children:(0,l.jsxs)("tr",{children:[(0,l.jsx)("th",{children:"Doctor"}),s.map((e=>(0,l.jsxs)("th",{className:"text-center",children:[C(e),(0,l.jsx)("div",{className:"small text-muted",children:A(e).toLocaleDateString("en-US",{weekday:"short"})})]},e)))]})}),(0,l.jsx)("tbody",{children:[...e.entries()].map((e=>{let[t,r]=e;const a=p.find((e=>e.userId===t)),n=a?`${a.firstName} ${a.lastName}`:"Unknown Doctor";return(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:n}),s.map((e=>{const s=r.find((s=>s.dates===e));if(!s)return(0,l.jsx)("td",{className:"text-center text-muted",children:"N/A"},e);const a=A(e)<w;const n=s.rosterVale;return(0,l.jsxs)("td",{className:"text-center",children:[(0,l.jsxs)("div",{className:"form-check form-check-inline",children:[(0,l.jsx)("input",{type:"checkbox",className:"form-check-input",checked:"YY"===n||"YN"===n,onChange:()=>E(t,e,"morning"),disabled:a}),(0,l.jsx)("label",{className:"form-check-label "+(a?"text-muted":""),children:"M"})]}),(0,l.jsxs)("div",{className:"form-check form-check-inline",children:[(0,l.jsx)("input",{type:"checkbox",className:"form-check-input",checked:"YY"===n||"NY"===n,onChange:()=>E(t,e,"evening"),disabled:a}),(0,l.jsx)("label",{className:"form-check-label "+(a?"text-muted":""),children:"E"})]})]},e)}))]},t)}))})]})})})()]}),(0,l.jsxs)("div",{className:"mt-4",children:[(0,l.jsx)("button",{type:"submit",className:"btn btn-primary me-2",disabled:x||!b,children:x?"Processing...":"Save Roster"}),(0,l.jsx)("button",{type:"button",className:"btn btn-secondary",onClick:()=>{s(""),d(""),m(""),j(null)},disabled:x,children:"Reset"})]})]})})})})})]})})}}}]);
//# sourceMappingURL=709.668c621a.chunk.js.map