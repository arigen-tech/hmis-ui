{"version":3,"file":"static/js/840.7e339034.chunk.js","mappings":"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","sources":["Views/Admin/Employee/EmployeeRegistrartion/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport placeholderImage from \"../../../../assets/images/placeholder.jpg\";\r\nimport { COUNTRYAPI, DISTRICTAPI, STATEAPI, DEPARTMENT, GENDERAPI, EMPLOYEE_REGISTRATION, IDENTITY_TYPE, API_HOST } from \"../../../../config/apiConfig\";\r\nimport { getRequest, putRequest, postRequestWithFormData } from \"../../../../service/apiService\";\r\nimport Popup from \"../../../../Components/popup\";\r\n\r\nconst EmployeeRegistration = () => {\r\n    const initialFormData = {\r\n        profilePicName: null,\r\n        idDocumentName: null,\r\n\r\n        firstName: \"\",\r\n        middleName: \"\",\r\n        lastName: \"\",\r\n        dob: \"\",\r\n        genderId: \"\",\r\n        address1: \"\",\r\n        countryId: \"\",\r\n        stateId: \"\",\r\n        districtId: \"\",\r\n        city: \"\",\r\n        pincode: \"\",\r\n        mobileNo: \"\",\r\n        registrationNo: \"\",\r\n        employmentTypeId: 1,\r\n        deprtId: \"\",\r\n        identificationType: \"\",\r\n        employeeTypeId: 1,\r\n        email:\"dkraj@gmail.com\",\r\n        fromDate: \"\",\r\n\r\n        qualification: [{ employeeQualificationId: 1, institutionName: \"\", completionYear: 0, qualificationName: \"\", filePath: null }],\r\n        document: [{ employeeDocumentId: 1, documentName: \"\", filePath: null }],\r\n    };\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [popup, setPopup] = useState(\"\");\r\n    const [popupMessage, setPopupMessage] = useState(\"\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [departmentData, setDepartmentData] = useState([]);\r\n    const [countryData, setCountryData] = useState([]);\r\n    const [stateData, setStateData] = useState([]);\r\n    const [districtData, setDistrictData] = useState([]);\r\n    const [genderData, setGenderData] = useState([]);\r\n    const [idTypeData, setIdTypeData] = useState([]);\r\n    const [countryIds, setCountryIds] = useState(\"\");\r\n    const [stateIds, setStateIds] = useState(\"\");\r\n    // const token = sessionStorage.getItem(\"token\");\r\n    const token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhYmNAZ21haWwuY29tIiwiaG9zcGl0YWxJZCI6MSwiZW1wbG95ZWVJZCI6MSwiZXhwIjoxNzQzMTMwNjU4LCJ1c2VySWQiOjQsImlhdCI6MTc0MjUyNTg1OH0.AeMNmzHXYHfNDXZvwfMFTJ8sM3qL6ghzMB81fPjiV7mTVHKn17d14YLoKMuxMrq7kqljpibrjnPayeG9bUBa6g\";\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchCountryData();\r\n        fetchDepartmentData();\r\n        fetchGenderData();\r\n        fetchIdTypeData();\r\n    }, []);\r\n\r\n    const showPopup = (message, type = \"info\") => {\r\n        setPopupMessage({\r\n            message,\r\n            type,\r\n            onClose: () => {\r\n                setPopupMessage(null);\r\n\r\n            },\r\n        });\r\n    };\r\n\r\n    const fetchCountryData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${COUNTRYAPI}/getAllCountries/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setCountryData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setCountryData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching country data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDepartmentData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${DEPARTMENT}/getAllDepartments/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setDepartmentData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setDepartmentData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching Department data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchStateData = async (countryIds) => {\r\n        setLoading(true);\r\n        try {\r\n            const GET_STATES = `${STATEAPI}/country/${countryIds}`;\r\n            const data = await getRequest(GET_STATES);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setStateData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setStateData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching state data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDistrictData = async (stateIds) => {\r\n        setLoading(true);\r\n        try {\r\n            const GET_CITIES = `${DISTRICTAPI}/state/${stateIds}`;\r\n            const data = await getRequest(GET_CITIES);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setDistrictData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setDistrictData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching city data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchGenderData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${GENDERAPI}/getAll/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setGenderData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setGenderData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching HotelType data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchIdTypeData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${IDENTITY_TYPE}/getAllIdentificationTypes/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setIdTypeData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setIdTypeData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching HotelType data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCountryChange = (countryCode, id) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            countryId: id,\r\n            stateId: \"\",\r\n            districtId: \"\",\r\n        }));\r\n        fetchStateData(countryCode);\r\n    };\r\n\r\n    const handleStateChange = (stateCode, id) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            stateId: id,\r\n            districtId: \"\",\r\n        }));\r\n        fetchDistrictData(stateCode);\r\n    };\r\n\r\n    const handleDistrictChange = (districtId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            districtId: districtId,\r\n        }));\r\n    };\r\n\r\n    const handleGenderChange = (gendersId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            genderId: gendersId,\r\n        }));\r\n    };\r\n\r\n    \r\n    const handleDepartmentChange = (deprtId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            deprtId: deprtId,\r\n        }));\r\n    };\r\n\r\n    const handleIdTypeChange = (idTypeId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            identificationType: idTypeId,\r\n        }));\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { id, value } = e.target;\r\n        setFormData((prevData) => ({ ...prevData, [id]: value }));\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (file) {\r\n            const imageUrl = URL.createObjectURL(file);\r\n\r\n            setProfileImage(imageUrl);\r\n            setFormData((prevData) => ({\r\n                ...prevData,\r\n                profilePicName: file,\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const { id, files } = e.target;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [id]: files[0],\r\n        }));\r\n    };\r\n\r\n    const addEducationRow = (e) => {\r\n        e.preventDefault();\r\n\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            qualification: [\r\n                ...prev.qualification,\r\n                { id: prev.qualification.length + 1, institutionName: \"\", completionYear: \"\", qualificationName: \"\", filePath: null },\r\n            ],\r\n        }));\r\n    };\r\n\r\n    const removeEducationRow = (index) => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            qualification: prev.qualification.filter((_, i) => i !== index),\r\n        }));\r\n    };\r\n\r\n    const handleQualificationChange = (index, field, value) => {\r\n        setFormData((prev) => {\r\n            const updatedQualification = [...prev.qualification];\r\n            updatedQualification[index][field] = value;\r\n            return { ...prev, qualification: updatedQualification };\r\n        });\r\n    };\r\n\r\n    const addDocumentRow = () => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            document: [\r\n                ...prev.document,\r\n                { id: prev.document.length + 1, documentName: \"\", filePath: null },\r\n            ],\r\n        }));\r\n    };\r\n\r\n    const removeDocumentRow = (index) => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            document: prev.document.filter((_, i) => i !== index),\r\n        }));\r\n    };\r\n\r\n    const handleDocumentChange = (index, field, value) => {\r\n        setFormData((prev) => {\r\n            const updatedDocuments = [...prev.document];\r\n            updatedDocuments[index][field] = value;\r\n            return { ...prev, document: updatedDocuments };\r\n        });\r\n    };\r\n\r\n\r\n    console.log(\"my data\", formData);\r\n\r\n\r\n    const handleCreateEmployee = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n    \r\n        try {\r\n            const formDataObj = new FormData();\r\n    \r\n            // Basic employee details\r\n            formDataObj.append(\"firstName\", formData.firstName);\r\n            formDataObj.append(\"middleName\", formData.middleName || \"\");\r\n            formDataObj.append(\"lastName\", formData.lastName || \"\");\r\n            formDataObj.append(\"dob\", formData.dob);\r\n            formDataObj.append(\"genderId\", formData.genderId);\r\n            formDataObj.append(\"address1\", formData.address1);\r\n            formDataObj.append(\"countryId\", formData.countryId);\r\n            formDataObj.append(\"stateId\", formData.stateId);\r\n            formDataObj.append(\"districtId\", formData.districtId);\r\n            formDataObj.append(\"city\", formData.city);\r\n            formDataObj.append(\"pincode\", formData.pincode);\r\n            formDataObj.append(\"mobileNo\", formData.mobileNo);\r\n            formDataObj.append(\"registrationNo\", formData.registrationNo);\r\n            formDataObj.append(\"identificationType\", formData.identificationType);\r\n            formDataObj.append(\"fromDate\", formData.fromDate);\r\n            formDataObj.append(\"departmentId\", formData.departmentId);\r\n    \r\n            // Profile and ID document\r\n            if (formData.profilePic) {\r\n                formDataObj.append(\"profilePicName\", formData.profilePic);\r\n            }\r\n            if (formData.idDocument) {\r\n                formDataObj.append(\"idDocumentName\", formData.idDocument);\r\n            }\r\n    \r\n            // Append documents correctly\r\n            formData.document.forEach((doc, index) => {\r\n                formDataObj.append(`document[${index}].documentName`, doc.documentName);\r\n                formDataObj.append(`document[${index}].filePath`, doc.filePath); // MultipartFile\r\n            });\r\n    \r\n            // Append qualifications correctly\r\n            formData.qualification.forEach((qual, index) => {\r\n                formDataObj.append(`qualification[${index}].institutionName`, qual.institutionName);\r\n                formDataObj.append(`qualification[${index}].completionYear`, qual.completionYear);\r\n                formDataObj.append(`qualification[${index}].qualificationName`, qual.qualificationName);\r\n                formDataObj.append(`qualification[${index}].filePath`, qual.filePath); // MultipartFile\r\n            });\r\n    \r\n            // Send request\r\n            const response = await postRequestWithFormData(\"/employee/create\", formDataObj);\r\n    \r\n            if (response.status === 200) {\r\n                showPopup(\"Employee created successfully\", \"success\");\r\n                setFormData(initialFormData);\r\n            } else {\r\n                showPopup(response.message || \"Failed to create employee\", \"error\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error creating employee:\", error);\r\n            showPopup(error.message || \"An error occurred while creating employee\", \"error\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n    const handleCreateEmployeeWithApprove = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        \r\n        try {\r\n            // Create FormData object to handle file uploads\r\n            const formDataObj = new FormData();\r\n            \r\n            // Add basic employee information\r\n            formDataObj.append(\"firstName\", formData.firstName);\r\n            formDataObj.append(\"middleName\", formData.middleName || \"\");\r\n            formDataObj.append(\"lastName\", formData.lastName || \"\");\r\n            formDataObj.append(\"dob\", formData.dob);\r\n            formDataObj.append(\"genderId\", formData.genderId);\r\n            formDataObj.append(\"address1\", formData.address1);\r\n            formDataObj.append(\"countryId\", formData.countryId);\r\n            formDataObj.append(\"stateId\", formData.stateId);\r\n            formDataObj.append(\"districtId\", formData.districtId);\r\n            formDataObj.append(\"city\", formData.city);\r\n            formDataObj.append(\"pincode\", formData.pincode);\r\n            formDataObj.append(\"mobileNo\", formData.mobileNo);\r\n            formDataObj.append(\"registrationNo\", formData.registrationNo);\r\n            formDataObj.append(\"identificationType\", formData.identificationType);\r\n            formDataObj.append(\"email\", formData.email);\r\n            formDataObj.append(\"fromDate\", formData.fromDate);\r\n            formDataObj.append(\"departmentId\", formData.deprtId);\r\n            \r\n            // Add profile picture and ID document\r\n            if (formData.profilePicName) {\r\n                formDataObj.append(\"profilePicName\", formData.profilePicName);\r\n            }\r\n            \r\n            if (formData.idDocumentName) {\r\n                formDataObj.append(\"idDocumentName\", formData.idDocumentName);\r\n            }\r\n            \r\n            // Add qualifications\r\n            formData.qualification.forEach((qual, index) => {\r\n                formDataObj.append(`qualification[${index}].institutionName`, qual.institutionName);\r\n                formDataObj.append(`qualification[${index}].completionYear`, qual.completionYear);\r\n                formDataObj.append(`qualification[${index}].qualificationName`, qual.qualificationName);\r\n                if (qual.filePath) {\r\n                    formDataObj.append(`qualification[${index}].filePath`, qual.filePath);\r\n                }\r\n            });\r\n            \r\n            // Add documents\r\n            formData.document.forEach((doc, index) => {\r\n                formDataObj.append(`document[${index}].documentName`, doc.documentName);\r\n                if (doc.filePath) {\r\n                    formDataObj.append(`document[${index}].filePath`, doc.filePath);\r\n                }\r\n            });\r\n            \r\n            // Send the request to create and approve\r\n            const response = await postRequestWithFormData(EMPLOYEE_REGISTRATION + \"/create-and-approve\", formDataObj);\r\n            \r\n            if (response.status === 200) {\r\n                showPopup(\"Employee created and approved successfully\", \"success\");\r\n                setFormData(initialFormData);\r\n                setProfileImage(null);\r\n            } else {\r\n                showPopup(response.message || \"Failed to create and approve employee\", \"error\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error creating and approving employee:\", error);\r\n            showPopup(error.message || \"An error occurred while creating and approving employee\", \"error\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"d-flex body py-3\">\r\n                <div className=\"container-xxl\">\r\n                    {popupMessage && (\r\n                        <Popup\r\n                            message={popupMessage.message}\r\n                            type={popupMessage.type}\r\n                            onClose={popupMessage.onClose}\r\n                        />\r\n                    )}\r\n\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"border-0 mb-4\">\r\n                            <div className=\"d-flex flex-wrap card-header align-items-center bg-transparent border-bottom justify-content-between px-0 py-3\">\r\n                                <h3 className=\"fw-bold mb-0\">Register of Employee</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* employee Section */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                                    <h6 className=\"fw-bold mb-0\">Employee Registration</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div className=\"g-3 row\">\r\n                                            <div className=\"col-md-9\">\r\n                                                <div className=\"g-3 row\">\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">First Name *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"firstName\"\r\n                                                            placeholder=\"First Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.firstName}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Middle Name</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"middleName\"\r\n                                                            placeholder=\"Middle Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.middleName}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Last Name *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"lastName\"\r\n                                                            placeholder=\"Last Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.lastName}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Date of Birth *</label>\r\n                                                        <input\r\n                                                            type=\"date\"\r\n                                                            required\r\n                                                            id=\"dob\"\r\n                                                            value={formData.dob}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Gender *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.genderId}\r\n                                                            onChange={(e) =>\r\n                                                                handleGenderChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Gender</option>\r\n                                                            {genderData.map((gender) => (\r\n                                                                <option key={gender.id} value={gender.id}>\r\n                                                                    {gender.genderName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Address *</label>\r\n                                                        <textarea\r\n                                                            required\r\n                                                            id=\"address1\"\r\n                                                            value={formData.address1}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                        ></textarea>\r\n\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Country *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.countryId}\r\n                                                            onChange={(e) => {\r\n                                                                const selectedCountry = countryData.find(\r\n                                                                    (country) => country.id.toString() === e.target.value\r\n                                                                );\r\n                                                                handleCountryChange(selectedCountry.countryCode, selectedCountry.id);\r\n                                                                setCountryIds(selectedCountry.id);\r\n                                                                fetchStateData(selectedCountry.id);\r\n                                                            }}\r\n\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Country</option>\r\n                                                            {countryData.map((country) => (\r\n                                                                <option key={country.id} value={country.id}>\r\n                                                                    {country.countryName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">State *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.stateId}\r\n                                                            onChange={(e) => {\r\n                                                                const selectedState = stateData.find(\r\n                                                                    (state) => state.id.toString() === e.target.value\r\n                                                                );\r\n                                                                handleStateChange(selectedState.stateCode, selectedState.id);\r\n                                                                setStateIds(selectedState.id);\r\n                                                                fetchDistrictData(selectedState.id);\r\n                                                            }}\r\n\r\n                                                            disabled={loading || !formData.countryId}\r\n                                                        >\r\n                                                            <option value=\"\">Select State</option>\r\n                                                            {stateData.map((state) => (\r\n                                                                <option key={state.id} value={state.id}>\r\n                                                                    {state.stateName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">District *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.districtId}\r\n                                                            onChange={(e) => handleDistrictChange(e.target.value)}\r\n                                                            disabled={loading || !formData.stateId}\r\n                                                        >\r\n                                                            <option value=\"\">Select District</option>\r\n                                                            {districtData.map((dist) => (\r\n                                                                <option key={dist.id} value={dist.id}>\r\n                                                                    {dist.districtName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">City *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"city\"\r\n                                                            placeholder=\"City\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.city}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Pincode *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"pincode\"\r\n                                                            placeholder=\"Pincode\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.pincode}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Mobile No. *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"mobileNo\"\r\n                                                            placeholder=\"Mobile No.\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.mobileNo}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Type *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.identificationType}\r\n                                                            onChange={(e) =>\r\n                                                                handleIdTypeChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select ID Type</option>\r\n                                                            {idTypeData.map((idType) => (\r\n                                                                <option key={idType.identificationTypeId} value={idType.identificationTypeId}>\r\n                                                                    {idType.identificationName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Number *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"registrationNo\"\r\n                                                            placeholder=\"ID Number\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.registrationNo}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Upload (JPEG/PDF) *</label>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            required\r\n                                                            id=\"idDocumentName\"\r\n                                                            className=\"form-control\"\r\n                                                            accept=\".jpg,.jpeg,.png,.pdf\"\r\n                                                            onChange={handleFileChange}\r\n                                                        />\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Depatment Name *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.deprtId}\r\n                                                            onChange={(e) =>\r\n                                                                handleDepartmentChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Depatment</option>\r\n                                                            {departmentData.map((depa) => (\r\n                                                                <option key={depa.id} value={depa.id}>\r\n                                                                    {depa.departmentName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Period of Employment From Date</label>\r\n                                                        <input\r\n                                                            type=\"date\"\r\n                                                            required\r\n                                                            id=\"fromDate\"\r\n                                                            value={formData.fromDate}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-3 d-flex flex-column\">\r\n                                                <label className=\"form-label\">Profile Image *</label>\r\n                                                <div className=\"d-flex flex-column align-items-center border p-2\">\r\n                                                    <img\r\n                                                        src={profileImage || placeholderImage}\r\n                                                        alt=\"Profile\"\r\n                                                        className=\"img-fluid\"\r\n                                                        style={{ objectFit: \"cover\" }}\r\n                                                    />\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        className=\"form-control mt-2\"\r\n                                                        accept=\"image/*\"\r\n                                                        onChange={handleImageChange}\r\n                                                        required\r\n                                                        id=\"profilePicName\"\r\n                                                    />\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Educational Qualification */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                                    <h6 className=\"fw-bold mb-0\">Educational Qualification</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>S.No</th>\r\n                                                <th>Degree</th>\r\n                                                <th>Name of Institution</th>\r\n                                                <th>Year of Completion</th>\r\n                                                <th>File Upload</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {formData.qualification.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.qualificationName}\r\n                                                            onChange={(e) => handleQualificationChange(index, \"qualificationName\", e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.institutionName}\r\n                                                            onChange={(e) => handleQualificationChange(index, \"institutionName\", e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"YYYY\"\r\n                                                            value={row.completionYear}\r\n                                                            onChange={(e) => handleQualificationChange(index, \"completionYear\", e.target.value)}\r\n                                                        />\r\n\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={(e) => handleQualificationChange(index, \"filePath\", e.target.files[0])}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => removeEducationRow(index)}>\r\n                                                            <i className=\"icofont-close\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={addEducationRow}>\r\n                                        Add Row +\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Required Documents */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                                    <h6 className=\"fw-bold mb-0\">Required Documents</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>S.No</th>\r\n                                                <th>Document Name</th>\r\n                                                <th>File Upload</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {formData.document.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.documentName}\r\n                                                            onChange={(e) => handleDocumentChange(index, \"documentName\", e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={(e) => handleDocumentChange(index, \"filePath\", e.target.files[0])}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => removeDocumentRow(index)}>\r\n                                                            <i className=\"icofont-close\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={addDocumentRow}>\r\n                                        Add Row +\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end mt-4\">\r\n                        <button onClick={handleCreateEmployee} type=\"reset\" className=\"btn btn-secondary me-2\">Save</button>\r\n                        <button onClick={handleCreateEmployeeWithApprove} type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmployeeRegistration;\r\n"],"names":["EmployeeRegistration","initialFormData","profilePicName","idDocumentName","firstName","middleName","lastName","dob","genderId","address1","countryId","stateId","districtId","city","pincode","mobileNo","registrationNo","employmentTypeId","deprtId","identificationType","employeeTypeId","email","fromDate","qualification","employeeQualificationId","institutionName","completionYear","qualificationName","filePath","document","employeeDocumentId","documentName","formData","setFormData","useState","popup","setPopup","popupMessage","setPopupMessage","profileImage","setProfileImage","loading","setLoading","departmentData","setDepartmentData","countryData","setCountryData","stateData","setStateData","districtData","setDistrictData","genderData","setGenderData","idTypeData","setIdTypeData","countryIds","setCountryIds","stateIds","setStateIds","useEffect","fetchCountryData","fetchDepartmentData","fetchGenderData","fetchIdTypeData","showPopup","message","type","arguments","length","undefined","onClose","async","data","getRequest","COUNTRYAPI","status","Array","isArray","response","console","error","DEPARTMENT","fetchStateData","GET_STATES","STATEAPI","fetchDistrictData","GET_CITIES","DISTRICTAPI","GENDERAPI","IDENTITY_TYPE","handleInputChange","e","id","value","target","prevData","handleQualificationChange","index","field","prev","updatedQualification","handleDocumentChange","updatedDocuments","log","_jsx","_Fragment","children","className","_jsxs","Popup","required","placeholder","onChange","style","paddingRight","handleGenderChange","gendersId","parseInt","prevState","disabled","map","gender","genderName","selectedCountry","find","country","toString","handleCountryChange","countryCode","countryName","selectedState","state","handleStateChange","stateCode","stateName","handleDistrictChange","dist","districtName","handleIdTypeChange","idTypeId","idType","identificationTypeId","identificationName","accept","files","handleDepartmentChange","depa","departmentName","src","placeholderImage","alt","objectFit","file","imageUrl","URL","createObjectURL","row","onClick","filter","_","i","removeEducationRow","preventDefault","removeDocumentRow","addDocumentRow","formDataObj","FormData","append","departmentId","profilePic","idDocument","forEach","doc","qual","postRequestWithFormData","EMPLOYEE_REGISTRATION"],"sourceRoot":""}