{"version":3,"file":"static/js/840.5652f29b.chunk.js","mappings":"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","sources":["Views/Admin/Employee/EmployeeRegistrartion/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport placeholderImage from \"../../../../assets/images/placeholder.jpg\";\r\nimport { COUNTRYAPI, DISTRICTAPI, STATEAPI, DEPARTMENT, GENDERAPI, EMPLOYEE_REGISTRATION, IDENTITY_TYPE, API_HOST } from \"../../../../config/apiConfig\";\r\nimport { getRequest, putRequest, postRequestWithFormData } from \"../../../../service/apiService\";\r\nimport Popup from \"../../../../Components/popup\";\r\n\r\nconst EmployeeRegistration = () => {\r\n    const initialFormData = {\r\n        profilePicName: null,\r\n        idDocumentName: null,\r\n\r\n        firstName: \"\",\r\n        middleName: \"\",\r\n        lastName: \"\",\r\n        dob: \"\",\r\n        genderId: \"\",\r\n        address1: \"\",\r\n        countryId: \"\",\r\n        stateId: \"\",\r\n        districtId: \"\",\r\n        city: \"\",\r\n        pincode: \"\",\r\n        mobileNo: \"\",\r\n        registrationNo: \"\",\r\n        employmentTypeId: 1,\r\n        deprtId: \"\",\r\n        identificationType: \"\",\r\n        employeeTypeId: 1,\r\n        email: \"dkraj@gmail.com\",\r\n        fromDate: \"\",\r\n\r\n        qualification: [{ employeeQualificationId: 1, institutionName: \"\", completionYear: 0, qualificationName: \"\", filePath: null }],\r\n        document: [{ employeeDocumentId: 1, documentName: \"\", filePath: null }],\r\n    };\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [popup, setPopup] = useState(\"\");\r\n    const [popupMessage, setPopupMessage] = useState(\"\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [departmentData, setDepartmentData] = useState([]);\r\n    const [viewDept, setviewDept] = useState(false);\r\n    const [countryData, setCountryData] = useState([]);\r\n    const [stateData, setStateData] = useState([]);\r\n    const [districtData, setDistrictData] = useState([]);\r\n    const [genderData, setGenderData] = useState([]);\r\n    const [idTypeData, setIdTypeData] = useState([]);\r\n    const [countryIds, setCountryIds] = useState(\"\");\r\n    const [stateIds, setStateIds] = useState(\"\");\r\n    const token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhYmNAZ21haWwuY29tIiwiaG9zcGl0YWxJZCI6MSwiZW1wbG95ZWVJZCI6MSwiZXhwIjoxNzQ0NjE3MDk3LCJ1c2VySWQiOjQsImlhdCI6MTc0NDAxMjI5N30.ozKxfQcQUz1tuUgwxCSlwchFnEjfFJg89MeMmUlil13v3bjH-k9TvFnYhsz4k4gsFOyYq9pkwp5xbA1lkQ-6NQ\";\r\n\r\n    useEffect(() => {\r\n        fetchCountryData();\r\n        fetchDepartmentData();\r\n        fetchGenderData();\r\n        fetchIdTypeData();\r\n    }, []);\r\n\r\n    const showPopup = (message, type = \"info\") => {\r\n        setPopupMessage({\r\n            message,\r\n            type,\r\n            onClose: () => {\r\n                setPopupMessage(null);\r\n            },\r\n        });\r\n    };\r\n\r\n    const fetchCountryData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${COUNTRYAPI}/getAllCountries/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setCountryData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setCountryData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching country data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDepartmentData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${DEPARTMENT}/getAllDepartments/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setDepartmentData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setDepartmentData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching Department data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchStateData = async (countryIds) => {\r\n        setLoading(true);\r\n        try {\r\n            const GET_STATES = `${STATEAPI}/country/${countryIds}`;\r\n            const data = await getRequest(GET_STATES);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setStateData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setStateData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching state data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDistrictData = async (stateIds) => {\r\n        setLoading(true);\r\n        try {\r\n            const GET_CITIES = `${DISTRICTAPI}/state/${stateIds}`;\r\n            const data = await getRequest(GET_CITIES);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setDistrictData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setDistrictData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching city data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchGenderData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${GENDERAPI}/getAll/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setGenderData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setGenderData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching HotelType data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchIdTypeData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(`${IDENTITY_TYPE}/getAllIdentificationTypes/1`);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setIdTypeData(data.response);\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setIdTypeData([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching HotelType data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCountryChange = (countryCode, id) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            countryId: id,\r\n            stateId: \"\",\r\n            districtId: \"\",\r\n        }));\r\n        fetchStateData(countryCode);\r\n    };\r\n\r\n    const handleStateChange = (stateCode, id) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            stateId: id,\r\n            districtId: \"\",\r\n        }));\r\n        fetchDistrictData(stateCode);\r\n    };\r\n\r\n    const handleDistrictChange = (districtId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            districtId: districtId,\r\n        }));\r\n    };\r\n\r\n    const handleGenderChange = (gendersId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            genderId: gendersId,\r\n        }));\r\n    };\r\n\r\n    const handleDepartmentChange = (deprtId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            deprtId: deprtId,\r\n        }));\r\n    };\r\n\r\n    const handleIdTypeChange = (idTypeId) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            identificationType: idTypeId,\r\n        }));\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n    \r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setFormData((prevFormData) => ({\r\n                    ...prevFormData,\r\n                    profilePicName: file,  \r\n                    profilePicPreview: reader.result, \r\n                }));\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n    \r\n\r\n    const handleInputChange = (e) => {\r\n        const { id, value } = e.target;\r\n        setFormData((prevData) => ({ ...prevData, [id]: value }));\r\n    };\r\n\r\n    const addEducationRow = (e) => {\r\n        e.preventDefault();\r\n\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            qualification: [\r\n                ...prev.qualification,\r\n                { id: prev.qualification.length + 1, institutionName: \"\", completionYear: \"\", qualificationName: \"\", filePath: null },\r\n            ],\r\n        }));\r\n    };\r\n\r\n    const removeEducationRow = (index) => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            qualification: prev.qualification.filter((_, i) => i !== index),\r\n        }));\r\n    };\r\n\r\n    const addDocumentRow = () => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            document: [\r\n                ...prev.document,\r\n                { id: prev.document.length + 1, documentName: \"\", filePath: null },\r\n            ],\r\n        }));\r\n    };\r\n\r\n    const removeDocumentRow = (index) => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            document: prev.document.filter((_, i) => i !== index),\r\n        }));\r\n    };\r\n\r\n    const handleQualificationChange = (index, field, value) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            qualification: prev.qualification.map((item, i) =>\r\n                i === index ? { ...item, [field]: value } : item\r\n            )\r\n        }));\r\n    };\r\n\r\n    const handleDocumentChange = (index, field, value) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            document: prev.document.map((item, i) =>\r\n                i === index ? { ...item, [field]: value } : item\r\n            )\r\n        }));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const requiredFields = [\r\n            'firstName', 'lastName', 'dob', 'genderId', 'address1',\r\n            'countryId', 'stateId', 'districtId', 'city', 'pincode',\r\n            'mobileNo', 'identificationType', 'registrationNo'\r\n        ];\r\n\r\n        for (const field of requiredFields) {\r\n            if (!formData[field]) {\r\n                showPopup(`Please fill in the required field: ${field.replace(/([A-Z])/g, ' $1').replace(/^./, (str) => str.toUpperCase())}`, \"error\");\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (!formData.profilePicName) {\r\n            showPopup(\"Profile picture is required\", \"error\");\r\n            return false;\r\n        }\r\n\r\n        if (!formData.idDocumentName) {\r\n            showPopup(\"ID document is required\", \"error\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const prepareFormData = () => {\r\n        if (!validateForm()) {\r\n            return null;\r\n        }\r\n\r\n        const formDataToSend = new FormData();\r\n\r\n        formDataToSend.append('firstName', formData.firstName);\r\n        formDataToSend.append('lastName', formData.lastName);\r\n        if (formData.middleName) formDataToSend.append('middleName', formData.middleName);\r\n        formDataToSend.append('dob', new Date(formData.dob).toISOString().split('T')[0]);\r\n        formDataToSend.append('genderId', formData.genderId);\r\n        formDataToSend.append('address1', formData.address1);\r\n        formDataToSend.append('countryId', formData.countryId);\r\n        formDataToSend.append('stateId', formData.stateId);\r\n        formDataToSend.append('districtId', formData.districtId);\r\n        formDataToSend.append('city', formData.city);\r\n        formDataToSend.append('pincode', formData.pincode);\r\n        formDataToSend.append('mobileNo', formData.mobileNo);\r\n        formDataToSend.append('registrationNo', formData.registrationNo);\r\n        formDataToSend.append('identificationType', formData.identificationType);\r\n        formDataToSend.append('fromDate', new Date(formData.fromDate).toISOString());\r\n\r\n        if (formData.deprtId) {\r\n            formDataToSend.append('departmentId', formData.deprtId);\r\n        }\r\n\r\n        // Files Handling\r\n        if (formData.profilePicName) {\r\n            formDataToSend.append('profilePicName', formData.profilePicName);\r\n        }\r\n        if (formData.idDocumentName) {\r\n            formDataToSend.append('idDocumentName', formData.idDocumentName);\r\n        }\r\n\r\n        // Qualification\r\n        formData.qualification.forEach((qual, index) => {\r\n            formDataToSend.append(`qualification[${index}].employeeQualificationId`, qual.employeeQualificationId || '');\r\n            formDataToSend.append(`qualification[${index}].institutionName`, qual.institutionName);\r\n            formDataToSend.append(`qualification[${index}].completionYear`, qual.completionYear);\r\n            formDataToSend.append(`qualification[${index}].qualificationName`, qual.qualificationName);\r\n            if (qual.filePath) {\r\n                formDataToSend.append(`qualification[${index}].filePath`, qual.filePath);\r\n            }\r\n        });\r\n\r\n        // Documents\r\n        formData.document.forEach((doc, index) => {\r\n            formDataToSend.append(`document[${index}].employeeDocumentId`, doc.employeeDocumentId || '');\r\n            formDataToSend.append(`document[${index}].documentName`, doc.documentName);\r\n            if (doc.filePath) {\r\n                formDataToSend.append(`document[${index}].filePath`, doc.filePath);\r\n            }\r\n        });\r\n\r\n        return formDataToSend;\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setFormData(initialFormData);\r\n    };\r\n\r\n\r\n    const handleCreate = async () => {\r\n        const formDataToSend = prepareFormData();\r\n        if (!formDataToSend) return;\r\n\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_HOST}/api/employee/create`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: formDataToSend\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                showPopup(\"Employee created successfully\", \"success\");\r\n                handleReset();\r\n            } else {\r\n                showPopup(`Error: ${data.message || 'Failed to create employee'}`, \"error\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error creating employee:\", error);\r\n            showPopup(\"Error submitting form. Please try again.\", \"error\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCreateWithApprove = async () => {\r\n        const formDataToSend = prepareFormData();\r\n        if (!formDataToSend) return;\r\n\r\n        // Ensure department ID is provided for approval\r\n        if (!formData.deprtId) {\r\n            setviewDept(true);\r\n            showPopup(\"Department is required for approval. Please select a department.\", \"error\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_HOST}/api/employee/create-and-approve`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: formDataToSend\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                showPopup(\"Employee created and approved successfully\", \"success\");\r\n                handleReset();\r\n            } else {\r\n                showPopup(`Error: ${data.message || 'Failed to create and approve employee'}`, \"error\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error creating and approving employee:\", error);\r\n            showPopup(\"Error submitting form. Please try again.\", \"error\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex body py-3\">\r\n                <div className=\"container-xxl\">\r\n                    {popupMessage && (\r\n                        <Popup\r\n                            message={popupMessage.message}\r\n                            type={popupMessage.type}\r\n                            onClose={popupMessage.onClose}\r\n                        />\r\n                    )}\r\n\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"border-0 mb-4\">\r\n                            <div className=\"d-flex flex-wrap card-header align-items-center bg-transparent border-bottom justify-content-between px-0 py-3\">\r\n                                <h3 className=\"fw-bold mb-0\">Register of Employee</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* employee Section */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                                    <h6 className=\"fw-bold mb-0\">Employee Registration</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div className=\"g-3 row\">\r\n                                            <div className=\"col-md-9\">\r\n                                                <div className=\"g-3 row\">\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">First Name *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"firstName\"\r\n                                                            placeholder=\"First Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.firstName}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Middle Name</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"middleName\"\r\n                                                            placeholder=\"Middle Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.middleName}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Last Name *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"lastName\"\r\n                                                            placeholder=\"Last Name\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.lastName}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Date of Birth *</label>\r\n                                                        <input\r\n                                                            type=\"date\"\r\n                                                            required\r\n                                                            id=\"dob\"\r\n                                                            value={formData.dob}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Gender *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.genderId}\r\n                                                            onChange={(e) =>\r\n                                                                handleGenderChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Gender</option>\r\n                                                            {genderData.map((gender) => (\r\n                                                                <option key={gender.id} value={gender.id}>\r\n                                                                    {gender.genderName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Address *</label>\r\n                                                        <textarea\r\n                                                            required\r\n                                                            id=\"address1\"\r\n                                                            value={formData.address1}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                        ></textarea>\r\n\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Country *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.countryId}\r\n                                                            onChange={(e) => {\r\n                                                                const selectedCountry = countryData.find(\r\n                                                                    (country) => country.id.toString() === e.target.value\r\n                                                                );\r\n                                                                handleCountryChange(selectedCountry.countryCode, selectedCountry.id);\r\n                                                                setCountryIds(selectedCountry.id);\r\n                                                                fetchStateData(selectedCountry.id);\r\n                                                            }}\r\n\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select Country</option>\r\n                                                            {countryData.map((country) => (\r\n                                                                <option key={country.id} value={country.id}>\r\n                                                                    {country.countryName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">State *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.stateId}\r\n                                                            onChange={(e) => {\r\n                                                                const selectedState = stateData.find(\r\n                                                                    (state) => state.id.toString() === e.target.value\r\n                                                                );\r\n                                                                handleStateChange(selectedState.stateCode, selectedState.id);\r\n                                                                setStateIds(selectedState.id);\r\n                                                                fetchDistrictData(selectedState.id);\r\n                                                            }}\r\n\r\n                                                            disabled={loading || !formData.countryId}\r\n                                                        >\r\n                                                            <option value=\"\">Select State</option>\r\n                                                            {stateData.map((state) => (\r\n                                                                <option key={state.id} value={state.id}>\r\n                                                                    {state.stateName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">District *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            value={formData.districtId}\r\n                                                            onChange={(e) => handleDistrictChange(e.target.value)}\r\n                                                            disabled={loading || !formData.stateId}\r\n                                                        >\r\n                                                            <option value=\"\">Select District</option>\r\n                                                            {districtData.map((dist) => (\r\n                                                                <option key={dist.id} value={dist.id}>\r\n                                                                    {dist.districtName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">City *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"city\"\r\n                                                            placeholder=\"City\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.city}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Pincode *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"pincode\"\r\n                                                            placeholder=\"Pincode\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.pincode}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Mobile No. *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"mobileNo\"\r\n                                                            placeholder=\"Mobile No.\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.mobileNo}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Type *</label>\r\n                                                        <select\r\n                                                            className=\"form-select\"\r\n                                                            style={{ paddingRight: \"40px\" }}\r\n                                                            value={formData.identificationType}\r\n                                                            onChange={(e) =>\r\n                                                                handleIdTypeChange(parseInt(e.target.value, 10))\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                        >\r\n                                                            <option value=\"\">Select ID Type</option>\r\n                                                            {idTypeData.map((idType) => (\r\n                                                                <option key={idType.identificationTypeId} value={idType.identificationTypeId}>\r\n                                                                    {idType.identificationName}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Number *</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            className=\"form-control\"\r\n                                                            id=\"registrationNo\"\r\n                                                            placeholder=\"ID Number\"\r\n                                                            onChange={handleInputChange}\r\n                                                            value={formData.registrationNo}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">ID Upload (JPEG/PDF) *</label>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            id=\"idDocumentName\"\r\n                                                            className=\"form-control mt-2\"\r\n                                                            accept=\".jpg,.jpeg,.png,.pdf\"\r\n                                                            onChange={(e) => setFormData({ ...formData, idDocumentName: e.target.files[0] })}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                    {viewDept && (\r\n                                                        <div className=\"col-md-4\">\r\n                                                            <label className=\"form-label\">Depatment Name *</label>\r\n                                                            <select\r\n                                                                className=\"form-select\"\r\n                                                                style={{ paddingRight: \"40px\" }}\r\n                                                                value={formData.deprtId}\r\n                                                                onChange={(e) =>\r\n                                                                    handleDepartmentChange(parseInt(e.target.value, 10))\r\n                                                                }\r\n                                                                disabled={loading}\r\n                                                            >\r\n                                                                <option value=\"\">Select Depatment</option>\r\n                                                                {departmentData.map((depa) => (\r\n                                                                    <option key={depa.id} value={depa.id}>\r\n                                                                        {depa.departmentName}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    )}\r\n\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label className=\"form-label\">Period of Employment From Date</label>\r\n                                                        <input\r\n                                                            type=\"date\"\r\n                                                            id=\"fromDate\"\r\n                                                            value={formData.fromDate}\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleInputChange}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-3 d-flex flex-column\">\r\n                                                <label className=\"form-label\">Profile Image *</label>\r\n                                                <div className=\"d-flex flex-column align-items-center border p-2\">\r\n                                                    <img\r\n                                                        src={formData.profilePicPreview || placeholderImage}\r\n                                                        alt=\"Profile\"\r\n                                                        className=\"img-fluid\"\r\n                                                        style={{ objectFit: \"cover\", maxWidth: \"100%\", height: \"150px\" }}\r\n                                                    />\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        id=\"profilePicName\"\r\n                                                        className=\"form-control mt-2\"\r\n                                                        accept=\"image/*\"\r\n                                                        onChange={handleImageChange}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Educational Qualification */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                                    <h6 className=\"fw-bold mb-0\">Educational Qualification</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>S.No</th>\r\n                                                <th>Degree</th>\r\n                                                <th>Name of Institution</th>\r\n                                                <th>Year of Completion</th>\r\n                                                <th>File Upload</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {formData.qualification.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.qualificationName}\r\n                                                            onChange={(e) => handleQualificationChange(index, \"qualificationName\", e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.institutionName}\r\n                                                            onChange={(e) => handleQualificationChange(index, \"institutionName\", e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"YYYY\"\r\n                                                            value={row.completionYear}\r\n                                                            onChange={(e) => handleQualificationChange(index, \"completionYear\", e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={(e) => handleQualificationChange(index, \"filePath\", e.target.files[0])}\r\n                                                            accept=\".pdf,.jpg,.jpeg,.png\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => removeEducationRow(index)}>\r\n                                                            <i className=\"icofont-close\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={addEducationRow}>\r\n                                        Add Row +\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Required Documents */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow mb-3\">\r\n                                <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                                    <h6 className=\"fw-bold mb-0\">Required Documents</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>S.No</th>\r\n                                                <th>Document Name</th>\r\n                                                <th>File Upload</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {formData.document.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            value={row.documentName}\r\n                                                            onChange={(e) => handleDocumentChange(index, \"documentName\", e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={(e) => handleDocumentChange(index, \"filePath\", e.target.files[0])}\r\n                                                            accept=\".pdf,.jpg,.jpeg,.png\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => removeDocumentRow(index)}>\r\n                                                            <i className=\"icofont-close\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={addDocumentRow}>\r\n                                        Add Row +\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end mt-4\">\r\n                        <button\r\n                            onClick={handleCreate}\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary me-2\"\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? \"Saving...\" : \"Save\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={handleCreateWithApprove}\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? \"Processing...\" : \"Save & Approve\"}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmployeeRegistration;"],"names":["EmployeeRegistration","initialFormData","profilePicName","idDocumentName","firstName","middleName","lastName","dob","genderId","address1","countryId","stateId","districtId","city","pincode","mobileNo","registrationNo","employmentTypeId","deprtId","identificationType","employeeTypeId","email","fromDate","qualification","employeeQualificationId","institutionName","completionYear","qualificationName","filePath","document","employeeDocumentId","documentName","formData","setFormData","useState","popup","setPopup","popupMessage","setPopupMessage","profileImage","setProfileImage","loading","setLoading","departmentData","setDepartmentData","viewDept","setviewDept","countryData","setCountryData","stateData","setStateData","districtData","setDistrictData","genderData","setGenderData","idTypeData","setIdTypeData","countryIds","setCountryIds","stateIds","setStateIds","token","useEffect","fetchCountryData","fetchDepartmentData","fetchGenderData","fetchIdTypeData","showPopup","message","type","arguments","length","undefined","onClose","async","data","getRequest","COUNTRYAPI","status","Array","isArray","response","console","error","DEPARTMENT","fetchStateData","GET_STATES","STATEAPI","fetchDistrictData","GET_CITIES","DISTRICTAPI","GENDERAPI","IDENTITY_TYPE","handleInputChange","e","id","value","target","prevData","handleQualificationChange","index","field","prev","map","item","i","handleDocumentChange","prepareFormData","validateForm","requiredFields","replace","str","toUpperCase","formDataToSend","FormData","append","Date","toISOString","split","forEach","qual","doc","handleReset","_jsx","_Fragment","children","className","_jsxs","Popup","required","placeholder","onChange","style","paddingRight","handleGenderChange","gendersId","parseInt","prevState","disabled","gender","genderName","selectedCountry","find","country","toString","handleCountryChange","countryCode","countryName","selectedState","state","handleStateChange","stateCode","stateName","handleDistrictChange","dist","districtName","handleIdTypeChange","idTypeId","idType","identificationTypeId","identificationName","accept","files","handleDepartmentChange","depa","departmentName","src","profilePicPreview","placeholderImage","alt","objectFit","maxWidth","height","file","reader","FileReader","onloadend","prevFormData","result","readAsDataURL","row","onClick","filter","_","removeEducationRow","preventDefault","removeDocumentRow","addDocumentRow","fetch","API_HOST","method","headers","body","json","ok"],"sourceRoot":""}