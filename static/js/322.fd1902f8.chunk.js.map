{"version":3,"file":"static/js/322.fd1902f8.chunk.js","mappings":"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","sources":["Views/Admin/Apointment/ApointmentSetup/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { MAS_DEPARTMENT, DOCTOR, MAS_OPD_SESSION, APPOINTMENT, FILTER_OPD_DEPT } from \"../../../../config/apiConfig\";\r\nimport { getRequest, putRequest, postRequest } from \"../../../../service/apiService\";\r\nimport Popup from \"../../../../Components/popup\";\r\nimport LoadingScreen from \"../../../../Components/Loading\";\r\n\r\nconst AppointmentSetup = () => {\r\n  const [popup, setPopup] = useState(\"\");\r\n  const [popupMessage, setPopupMessage] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [doctor, setDoctor] = useState(\"\");\r\n  const [session, setSession] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [timeTaken, setTimeTaken] = useState(\"\");\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [filterDepartment, setFilterDepartment] = useState([]);\r\n  const [doctorData, setDoctorData] = useState([]);\r\n  const [sessionData, setSessionData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [appointmentData, setAppointmentData] = useState(null);\r\n  const [modifiedFields, setModifiedFields] = useState({});\r\n  const [dataFromDB, setDataFromDB] = useState(false);\r\n\r\n\r\n  const showPopup = (message, type = \"info\") => {\r\n    setPopupMessage({\r\n      message,\r\n      type,\r\n      onClose: () => {\r\n        setPopupMessage(null);\r\n      },\r\n    });\r\n  };\r\n\r\n  const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  const initialDaysState = daysOfWeek.reduce((acc, day) => {\r\n    const isWeekend = day === \"Sunday\" || day === \"Saturday\";\r\n    acc[day] = {\r\n      startToken: isWeekend ? \"0\" : \"\",\r\n      totalInterval: isWeekend ? \"0\" : \"\",\r\n      totalToken: isWeekend ? \"0\" : \"\",\r\n      totalOnlineToken: isWeekend ? \"0\" : \"\",\r\n      maxNoOfDays: isWeekend ? \"0\" : \"30\",\r\n      minNoOfDays: isWeekend ? \"0\" : \"1\"\r\n    };\r\n    return acc;\r\n  }, {});\r\n\r\n  const [daysConfig, setDaysConfig] = useState(initialDaysState);\r\n  const [originalDaysConfig, setOriginalDaysConfig] = useState(initialDaysState);\r\n\r\n  useEffect(() => {\r\n    fetchDepartmentData();\r\n    fetchSessionData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (department) {\r\n      fetchDoctorData();\r\n    }\r\n  }, [department]);\r\n\r\n  const fetchDepartmentData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${MAS_DEPARTMENT}/getAll/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        const filteredDepartments = data.response.filter(\r\n          (dept) => dept.departmentTypeName === `${FILTER_OPD_DEPT}`\r\n        );\r\n        setDepartmentData(data.response);\r\n        setFilterDepartment(filteredDepartments);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDepartmentData([]);\r\n        setFilterDepartment([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDoctorData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${DOCTOR}/doctorBySpeciality/${department}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setDoctorData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDoctorData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Doctor data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchSessionData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${MAS_OPD_SESSION}/getAll/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setSessionData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setSessionData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Session data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (department && doctor && session) {\r\n      handleFetchAppointment();\r\n    }\r\n  }, [department, doctor, session]);\r\n\r\n  const handleFetchAppointment = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setModifiedFields({});\r\n      const url = `${APPOINTMENT}/find?deptId=${department}&doctorId=${doctor}&sessionId=${session}`;\r\n      const data = await getRequest(url);\r\n      if (data?.status === 200 && data?.response) {\r\n        const { startTime, endTime, timeTaken, days } = data.response;\r\n        setAppointmentData(data.response);\r\n        setStartTime(startTime);\r\n        setEndTime(endTime);\r\n        setTimeTaken(timeTaken);\r\n        setDataFromDB(true);\r\n\r\n        if (Array.isArray(days)) {\r\n          const updatedDaysConfig = { ...initialDaysState };\r\n          days.forEach((dayConfig) => {\r\n            const dayName = dayConfig.days || dayConfig.day;\r\n            if (dayName && updatedDaysConfig[dayName]) {\r\n              updatedDaysConfig[dayName] = {\r\n                startToken: dayConfig.startToken !== null ? String(dayConfig.startToken) : \"\",\r\n                totalInterval: dayConfig.totalInterval !== null ? String(dayConfig.totalInterval) : \"\",\r\n                totalToken: dayConfig.totalToken !== null ? String(dayConfig.totalToken) : \"\",\r\n                totalOnlineToken: dayConfig.totalOnlineToken !== null ? String(dayConfig.totalOnlineToken) : \"\",\r\n                maxNoOfDays: dayConfig.maxNoOfDays !== null ? String(dayConfig.maxNoOfDays) : \"30\",\r\n                minNoOfDays: dayConfig.minNoOfDays !== null ? String(dayConfig.minNoOfDays) : \"1\"\r\n              };\r\n            }\r\n          });\r\n          setDaysConfig(updatedDaysConfig);\r\n          setOriginalDaysConfig(JSON.parse(JSON.stringify(updatedDaysConfig)));\r\n        }\r\n      } else {\r\n        setAppointmentData(null);\r\n        setDaysConfig(initialDaysState);\r\n        setStartTime(\"\");\r\n        setEndTime(\"\");\r\n        setTimeTaken(\"\");\r\n        setOriginalDaysConfig(initialDaysState);\r\n        setDataFromDB(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching appointment data:\", error);\r\n      setDataFromDB(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateOnlineToken = (totalToken, totalInterval) => {\r\n    if (!totalToken || !totalInterval || parseInt(totalInterval) === 0) {\r\n      return \"0\";\r\n    }\r\n\r\n    const calculatedValue = parseInt(totalToken) / parseInt(totalInterval);\r\n    return String(Math.ceil(calculatedValue));\r\n  };\r\n\r\n  const handleDayConfigChange = (day, field, value) => {\r\n    const stringValue = value === 0 || value ? String(value) : \"\";\r\n    const isWeekend = day === \"Sunday\" || day === \"Saturday\";\r\n\r\n    const updatedDayConfig = { ...daysConfig[day] };\r\n\r\n    updatedDayConfig[field] = stringValue;\r\n\r\n\r\n    if (field === \"totalToken\" && (stringValue === \"0\" || stringValue === \"\")) {\r\n      updatedDayConfig.startToken = \"0\";\r\n      updatedDayConfig.totalInterval = \"0\";\r\n      updatedDayConfig.totalOnlineToken = \"0\";\r\n    }\r\n\r\n    if ((field === \"totalInterval\" && (stringValue === \"0\" || stringValue === \"\")) ||\r\n      (field === \"totalToken\" && (updatedDayConfig.totalToken === \"0\" || updatedDayConfig.totalToken === \"\"))) {\r\n      updatedDayConfig.totalOnlineToken = \"0\";\r\n    } else if (field === \"totalInterval\" || field === \"totalToken\") {\r\n      updatedDayConfig.totalOnlineToken = calculateOnlineToken(\r\n        updatedDayConfig.totalToken,\r\n        updatedDayConfig.totalInterval\r\n      );\r\n    }\r\n\r\n    if (field === \"minNoOfDays\") {\r\n      const minVal = parseInt(stringValue) || 0;\r\n      const maxVal = parseInt(updatedDayConfig.maxNoOfDays) || 30;\r\n      if (minVal > maxVal) {\r\n        updatedDayConfig.minNoOfDays = updatedDayConfig.maxNoOfDays;\r\n      }\r\n    }\r\n\r\n    if (field === \"maxNoOfDays\") {\r\n      const maxVal = parseInt(stringValue) || 30;\r\n      const minVal = parseInt(updatedDayConfig.minNoOfDays) || 1;\r\n      if (maxVal < minVal) {\r\n        updatedDayConfig.minNoOfDays = String(maxVal);\r\n      }\r\n    }\r\n\r\n    setDaysConfig({\r\n      ...daysConfig,\r\n      [day]: updatedDayConfig\r\n    });\r\n\r\n    if (dataFromDB) {\r\n      const originalValue = originalDaysConfig[day][field];\r\n      const isModified = stringValue !== originalValue;\r\n\r\n      if (isModified) {\r\n        setModifiedFields({\r\n          ...modifiedFields,\r\n          [`${day}-${field}`]: true\r\n        });\r\n      } else {\r\n        const newModifiedFields = { ...modifiedFields };\r\n        delete newModifiedFields[`${day}-${field}`];\r\n        setModifiedFields(newModifiedFields);\r\n      }\r\n    }\r\n  };\r\n\r\n  const isFieldModified = (day, field) => {\r\n    return dataFromDB && modifiedFields[`${day}-${field}`] === true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const requestData = {\r\n      departmentId: department,\r\n      doctorId: doctor,\r\n      sessionId: session,\r\n      startTime,\r\n      endTime,\r\n      timeTaken,\r\n      days: daysOfWeek.map(day => {\r\n        const existingDay = appointmentData?.days?.find(d => (d.days || d.day) === day);\r\n        return {\r\n          id: appointmentData ? (existingDay?.id || null) : null,\r\n          day: day,\r\n          tokenStartNo: daysConfig[day].startToken !== \"\" ? parseInt(daysConfig[day].startToken) : null,\r\n          tokenInterval: daysConfig[day].totalInterval !== \"\" ? parseInt(daysConfig[day].totalInterval) : null,\r\n          totalToken: daysConfig[day].totalToken !== \"\" ? parseInt(daysConfig[day].totalToken) : null,\r\n          totalOnlineToken: daysConfig[day].totalOnlineToken !== \"\" ? parseInt(daysConfig[day].totalOnlineToken) : null,\r\n          maxNoOfDay: daysConfig[day].maxNoOfDays !== \"\" ? parseInt(daysConfig[day].maxNoOfDays) : null,\r\n          minNoOfday: daysConfig[day].minNoOfDays !== \"\" ? parseInt(daysConfig[day].minNoOfDays) : null\r\n        };\r\n      })\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await postRequest(`${APPOINTMENT}/setup`, requestData);\r\n\r\n      if (response.status === 200) {\r\n        showPopup(response.message || `Appointment ${appointmentData ? \"updated\" : \"created\"} successfully!`, \"success\");\r\n        setOriginalDaysConfig(JSON.parse(JSON.stringify(daysConfig)));\r\n        setModifiedFields({});\r\n        handleReset();\r\n      } else {\r\n        showPopup(`Failed to ${appointmentData ? \"update\" : \"create\"} Appointment. Please try again.`, \"error\");\r\n      }\r\n    } catch (error) {\r\n      showPopup(\r\n        \"An error occurred: \" + (error.message || \"Unknown error\"),\r\n        \"error\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setDepartment(\"\");\r\n    setDoctor(\"\");\r\n    setSession(\"\");\r\n    setStartTime(\"\");\r\n    setEndTime(\"\");\r\n    setTimeTaken(\"\");\r\n    setDaysConfig(initialDaysState);\r\n    setAppointmentData(null);\r\n    setModifiedFields({});\r\n    setOriginalDaysConfig(initialDaysState);\r\n    setDataFromDB(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"body d-flex py-3\">\r\n        <div className=\"container-xxl\">\r\n          {popupMessage && (\r\n            <Popup\r\n              message={popupMessage.message}\r\n              type={popupMessage.type}\r\n              onClose={popupMessage.onClose}\r\n            />\r\n          )}\r\n\r\n          {loading && <LoadingScreen />}\r\n\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"border-0 mb-4\">\r\n              <div className=\"card-header py-3 bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n                <h3 className=\"fw-bold mb-0\">Appointment Setup</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"card shadow mb-3\">\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"row g-3\">\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Department *</label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          value={department}\r\n                          onChange={(e) => setDepartment(parseInt(e.target.value))}\r\n                          required\r\n                        >\r\n                          <option value=\"\" disabled>Select</option>\r\n                          {filterDepartment.map((dept) => (\r\n                            <option key={dept.id} value={dept.id}>\r\n                              {dept.departmentName}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Doctor List *</label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          value={doctor}\r\n                          onChange={(e) => setDoctor(parseInt(e.target.value))}\r\n                          required\r\n                          disabled={!department}\r\n                        >\r\n                          <option value=\"\">Select Doctor</option>\r\n                          {doctorData.map((doc) => (\r\n                            <option key={doc.userId} value={doc.userId}>\r\n                              {doc.firstName} {doc.lastName}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Session *</label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          value={session}\r\n                          onChange={(e) => setSession(parseInt(e.target.value))}\r\n                          required\r\n                        >\r\n                          <option value=\"\" disabled>Select</option>\r\n                          {sessionData.map((sess) => (\r\n                            <option key={sess.id} value={sess.id}>\r\n                              {sess.sessionName}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Start Time *</label>\r\n                        <input\r\n                          type=\"time\"\r\n                          className=\"form-control\"\r\n                          value={startTime}\r\n                          onChange={(e) => setStartTime(e.target.value)}\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">End Time *</label>\r\n                        <input\r\n                          type=\"time\"\r\n                          className=\"form-control\"\r\n                          value={endTime}\r\n                          onChange={(e) => setEndTime(e.target.value)}\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Time Taken (minutes) *</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          value={timeTaken}\r\n                          onChange={(e) => setTimeTaken(e.target.value ? parseInt(e.target.value) : \"\")}\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-12\">\r\n                        <table className=\"table table-bordered\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Days</th>\r\n                              <th>Token Start No.</th>\r\n                              <th>Token Interval</th>\r\n                              <th>Total Token</th>\r\n                              <th>Total Online Token</th>\r\n                              <th>Max No. of Days</th>\r\n                              <th>Min No. of Days</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {daysOfWeek.map((day) => (\r\n                              <tr key={day}>\r\n                                <td>{day}</td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"startToken\") ? \"#ffd24d\" : \"\" }}\r\n                                    value={daysConfig[day].startToken}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"startToken\", e.target.value)}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"totalInterval\") ? \"#ffd24d\" : \"\" }}\r\n                                    value={daysConfig[day].totalInterval}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"totalInterval\", e.target.value)}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"totalToken\") ? \"#ffd24d\" : \"\" }}\r\n                                    value={daysConfig[day].totalToken}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"totalToken\", e.target.value)}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"totalOnlineToken\") ? \"#ffd24d\" : \"\" }}\r\n                                    value={daysConfig[day].totalOnlineToken}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"totalOnlineToken\", e.target.value)}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"maxNoOfDays\") ? \"#ffd24d\" : \"\" }}\r\n                                    value={daysConfig[day].maxNoOfDays}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"maxNoOfDays\", e.target.value)}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    style={{ backgroundColor: isFieldModified(day, \"minNoOfDays\") ? \"#ffd24d\" : \"\" }}\r\n                                    value={daysConfig[day].minNoOfDays}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"minNoOfDays\", e.target.value)}\r\n                                  />\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n\r\n                      <div className=\"d-flex align-items-center mb-2\">\r\n                        <div style={{ width: '20px', height: '20px', backgroundColor: '#ffd24d', marginRight: '10px' }}></div>\r\n                        <span>Modified database data</span>\r\n                      </div>\r\n\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                      <button type=\"submit\" className=\"btn btn-primary me-2\" disabled={loading}>\r\n                        {loading ? \"Processing...\" : appointmentData ? \"Update Appointment\" : \"Create Appointment\"}\r\n                      </button>\r\n                      <button type=\"button\" className=\"btn btn-secondary\" onClick={handleReset}>Reset</button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentSetup;"],"names":["AppointmentSetup","popup","setPopup","useState","popupMessage","setPopupMessage","department","setDepartment","doctor","setDoctor","session","setSession","startTime","setStartTime","endTime","setEndTime","timeTaken","setTimeTaken","departmentData","setDepartmentData","filterDepartment","setFilterDepartment","doctorData","setDoctorData","sessionData","setSessionData","loading","setLoading","appointmentData","setAppointmentData","modifiedFields","setModifiedFields","dataFromDB","setDataFromDB","showPopup","message","type","arguments","length","undefined","onClose","daysOfWeek","initialDaysState","reduce","acc","day","isWeekend","startToken","totalInterval","totalToken","totalOnlineToken","maxNoOfDays","minNoOfDays","daysConfig","setDaysConfig","originalDaysConfig","setOriginalDaysConfig","useEffect","fetchDepartmentData","fetchSessionData","fetchDoctorData","async","data","getRequest","MAS_DEPARTMENT","status","Array","isArray","response","filteredDepartments","filter","dept","departmentTypeName","FILTER_OPD_DEPT","console","error","DOCTOR","MAS_OPD_SESSION","handleFetchAppointment","url","APPOINTMENT","days","updatedDaysConfig","forEach","dayConfig","dayName","String","JSON","parse","stringify","handleDayConfigChange","field","value","stringValue","updatedDayConfig","calculateOnlineToken","parseInt","calculatedValue","Math","ceil","maxVal","newModifiedFields","isFieldModified","handleReset","_jsx","_Fragment","children","className","_jsxs","Popup","LoadingScreen","onSubmit","e","preventDefault","requestData","departmentId","doctorId","sessionId","map","_appointmentData$days","existingDay","find","d","id","tokenStartNo","tokenInterval","maxNoOfDay","minNoOfday","postRequest","onChange","target","required","disabled","departmentName","doc","userId","firstName","lastName","sess","sessionName","style","backgroundColor","width","height","marginRight","onClick"],"sourceRoot":""}