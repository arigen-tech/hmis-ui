{"version":3,"file":"static/js/322.758402ce.chunk.js","mappings":"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","sources":["service/apiService.js","Views/Admin/Apointment/ApointmentSetup/index.js"],"sourcesContent":["import { API_HOST } from \"../config/apiConfig\";\r\nconst BASE_URL = API_HOST;\r\n\r\n/**\r\n * Function to call GET API\r\n * @param {string} endpoint - The API endpoint\r\n * @param {object} headers - Optional headers\r\n * @returns {Promise<object>} - API response\r\n */\r\nexport const getRequest = async (endpoint, headers = {}) => {\r\n  try {\r\n    let token;\r\n    if (localStorage.token) {\r\n      token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n    } else {\r\n      token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n    }\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...token,\r\n        ...headers,\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`GET request failed: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"GET Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Function to call POST API\r\n * @param {string} endpoint - The API endpoint\r\n * @param {object} data - Request body\r\n * @param {object} headers - Optional headers\r\n * @returns {Promise<object>} - API response\r\n */\r\nexport const postRequest = async (endpoint, data, headers = {}) => {\r\n  try {\r\n    let token;\r\n    if (localStorage.token) {\r\n      token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n    } else {\r\n      token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n    }\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...token,\r\n        ...headers,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`POST request failed: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"POST Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Function to call PUT API\r\n * @param {string} endpoint - The API endpoint\r\n * @param {object} data - Request body\r\n * @param {object} headers - Optional headers\r\n * @returns {Promise<object>} - API response\r\n */\r\nexport const putRequest = async (endpoint, data, headers = {}) => {\r\n  try {\r\n    let token;\r\n    if (localStorage.token) {\r\n      token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n    } else {\r\n      token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n    }\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...token,\r\n        ...headers,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`PUT request failed: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"PUT Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\nconst uploadFileWithJson = async (endpoint, jsonData, files) => {\r\n  if (!files || !(files instanceof FileList || files instanceof File)) {\r\n    throw new Error(\"No valid file provided!\");\r\n  }\r\n\r\n  let token = localStorage.token\r\n    ? { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n    : { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n\r\n  // Add the file (only the first file if it's a FileList)\r\n  if (files instanceof FileList) {\r\n    formData.append(\"files\", files[0]); // Backend expects a single file\r\n  } else {\r\n    formData.append(\"files\", files); // Single file\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"POST\",\r\n      headers: { ...token },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file upload:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\nexport { uploadFileWithJson };\r\n\r\n\r\nconst updateFileWithJson = async (endpoint, jsonData, files) => {\r\n\r\n  let token = localStorage.token\r\n    ? { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n    : { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n\r\n  if (files instanceof FileList) {\r\n    formData.append(\"files\", files[0]); \r\n  } else {\r\n    formData.append(\"files\", files); \r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"PUT\", \r\n      headers: { ...token },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file upload:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\nexport { updateFileWithJson };\r\n\r\n\r\n\r\nasync function uploadMultiFileWithJson(endpoint, jsonData, files1, files2) {\r\n  let token;\r\n  if (localStorage.token) {\r\n    token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n  } else {\r\n    token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n  formData.append(`bannerImage`, files1);\r\n  formData.append(`thumbImage`, files2);\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        ...token,\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(errorText || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file upload:\", error.message);\r\n    throw error;\r\n  }\r\n}\r\nexport { uploadMultiFileWithJson };\r\n\r\n\r\n\r\nasync function updateMultiFileWithJson(endpoint, jsonData, files1, files2) {\r\n  let token;\r\n  if (localStorage.token) {\r\n    token = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n  } else {\r\n    token = { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` };\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append(\r\n    \"json\",\r\n    new Blob([JSON.stringify(jsonData)], { type: \"application/json\" })\r\n  );\r\n  if (files1) {\r\n    formData.append(\"bannerImage\", files1);\r\n  }\r\n  if (files2) {\r\n    formData.append(\"thumbImage\", files2);\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n      method: \"PUT\", // Use PUT or PATCH based on your API\r\n      headers: {\r\n        ...token,\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(errorText || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error during file update:\", error.message);\r\n    throw error;\r\n  }\r\n}\r\nexport { updateMultiFileWithJson };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DEPARTMENT, DOCTOR, SESSION, APPOINTMENT } from \"../../../../config/apiConfig\";\r\nimport { getRequest, putRequest, postRequest } from \"../../../../service/apiService\";\r\nimport Popup from \"../../../../Components/popup\";\r\n\r\nconst AppointmentSetup = () => {\r\n  const [popup, setPopup] = useState(\"\");\r\n  const [popupMessage, setPopupMessage] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [doctor, setDoctor] = useState(\"\");\r\n  const [session, setSession] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [timeTaken, setTimeTaken] = useState(\"\");\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [doctorData, setDoctorData] = useState([]);\r\n  const [sessionData, setSessionData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [appointmentData, setAppointmentData] = useState(null);\r\n\r\n  const showPopup = (message, type = \"info\") => {\r\n    setPopupMessage({\r\n      message,\r\n      type,\r\n      onClose: () => {\r\n        setPopupMessage(null);\r\n\r\n      },\r\n    });\r\n  };\r\n\r\n  const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  const initialDaysState = daysOfWeek.reduce((acc, day) => {\r\n    acc[day] = {\r\n      startToken: \"\",\r\n      totalInterval: \"\",\r\n      totalToken: \"\",\r\n      totalOnlineToken: \"\",\r\n      maxNoOfDays: \"\",\r\n      minNoOfDays: \"\"\r\n    };\r\n    return acc;\r\n  }, {});\r\n\r\n  const [daysConfig, setDaysConfig] = useState(initialDaysState);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchDepartmentData();\r\n    fetchSessionData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (department) {\r\n      fetchDoctorData();\r\n    }\r\n  }, [department]);\r\n\r\n  const fetchDepartmentData = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const data = await getRequest(`${DEPARTMENT}/all`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setDepartmentData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDepartmentData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Department data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDoctorData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${DEPARTMENT}/userDepartments/${department}`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setDoctorData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDoctorData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Doctor data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchSessionData = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const data = await getRequest(`${SESSION}/all`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setSessionData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setSessionData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Session data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  console.log(doctorData);\r\n\r\n  useEffect(() => {\r\n    if (department && doctor && session) {\r\n      handleFetchAppointment();\r\n    }\r\n  }, [department, doctor, session]);\r\n\r\n  const handleDepartmentChange = (event) => {\r\n    setDepartment(event.target.value);\r\n  };\r\n\r\n  const handleFetchAppointment = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const url = `${APPOINTMENT}/find?deptId=${department}&doctorId=${doctor}&sessionId=${session}`;\r\n\r\n      const data = await getRequest(url);\r\n\r\n      if (data?.status === 200 && data?.response) {\r\n        const { startTime, endTime, timeTaken, days } = data.response;\r\n\r\n        setAppointmentData(data.response);\r\n        setStartTime(startTime);\r\n        setEndTime(endTime);\r\n        setTimeTaken(timeTaken);\r\n\r\n        if (Array.isArray(days)) {\r\n          const updatedDaysConfig = { ...initialDaysState };\r\n\r\n          days.forEach((dayConfig) => {\r\n            const dayName = dayConfig.days || dayConfig.day;\r\n\r\n            if (dayName && updatedDaysConfig[dayName]) {\r\n              updatedDaysConfig[dayName] = {\r\n                startToken: dayConfig.startToken || \"\",\r\n                totalInterval: dayConfig.totalInterval || \"\",\r\n                totalToken: dayConfig.totalToken || \"\",\r\n                totalOnlineToken: dayConfig.totalOnlineToken || \"\",\r\n                maxNoOfDays: dayConfig.maxNoOfDays || \"\",\r\n                minNoOfDays: dayConfig.minNoOfDays || \"\"\r\n              };\r\n            }\r\n          });\r\n\r\n          setDaysConfig(updatedDaysConfig);\r\n        }\r\n      } else {\r\n        setAppointmentData(null);\r\n        setDaysConfig(initialDaysState);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching appointment data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleDayConfigChange = (day, field, value) => {\r\n    setDaysConfig({\r\n      ...daysConfig,\r\n      [day]: {\r\n        ...daysConfig[day],\r\n        [field]: value\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const requestData = {\r\n      id: appointmentData ? appointmentData.id : null,\r\n      departmentId: department,\r\n      doctorId: doctor,\r\n      sessionId: session,\r\n      startTime,\r\n      endTime,\r\n      timeTaken,\r\n      days: daysOfWeek.map(day => {\r\n        const existingDay = appointmentData?.days?.find(d => (d.days || d.day) === day);\r\n\r\n        return {\r\n          id: appointmentData ? (existingDay?.id || null) : null,\r\n          day: day,\r\n          tokenStartNo: daysConfig[day].startToken,\r\n          tokenInterval: daysConfig[day].totalInterval,\r\n          totalToken: daysConfig[day].totalToken,\r\n          totalOnlineToken: daysConfig[day].totalOnlineToken,\r\n          maxNoOfDay: daysConfig[day].maxNoOfDays,\r\n          minNoOfday: daysConfig[day].minNoOfDays\r\n        };\r\n      })\r\n    };\r\n\r\n    console.log(requestData);\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = appointmentData\r\n        ? await postRequest(`${APPOINTMENT}/setup`, requestData)\r\n        : await postRequest(`${APPOINTMENT}/setup`, requestData);\r\n\r\n      if ((appointmentData && response.status === 200) || (!appointmentData && response.status === 201)) {\r\n        showPopup(response.message || `Appointment ${appointmentData ? \"updated\" : \"created\"} successfully!`, \"success\");\r\n        handleReset();\r\n      } else {\r\n        showPopup(`Failed to ${appointmentData ? \"update\" : \"create\"} Appointment. Please try again.`, \"error\");\r\n      }\r\n    } catch (error) {\r\n      showPopup(\r\n        \"An error occurred: \" + (error.message || \"Unknown error\"),\r\n        \"error\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const handleReset = () => {\r\n    setDepartment(\"\");\r\n    setDoctor(\"\");\r\n    setSession(\"\");\r\n    setStartTime(\"\");\r\n    setEndTime(\"\");\r\n    setTimeTaken(\"\");\r\n    setDaysConfig(initialDaysState);\r\n    setAppointmentData(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"body d-flex py-3\">\r\n        <div className=\"container-xxl\">\r\n          {popupMessage && (\r\n            <Popup\r\n              message={popupMessage.message}\r\n              type={popupMessage.type}\r\n              onClose={popupMessage.onClose}\r\n            />\r\n          )}\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"border-0 mb-4\">\r\n              <div className=\"card-header py-3 bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n                <h3 className=\"fw-bold mb-0\">Appointment Setup</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"card shadow mb-3\">\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"row g-3\">\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Department *</label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          value={department}\r\n                          onChange={(e) => setDepartment(parseInt(e.target.value))}\r\n                          required\r\n                        >\r\n                          <option value=\"\" disabled>Select</option>\r\n                          {departmentData.map((dept) => (\r\n                            <option key={dept.id} value={dept.id}>\r\n                              {dept.departmentName}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Doctor List *</label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          value={doctor}\r\n                          onChange={(e) => setDoctor(parseInt(e.target.value))}\r\n                          required\r\n                          disabled={!department}\r\n                        >\r\n                          <option value=\"\">Select Doctor</option>\r\n                          {doctorData\r\n                            .filter((doc) => doc.departmentId === parseInt(department))\r\n                            .map((doc) => (\r\n                              <option key={doc.userId} value={doc.userId}>\r\n                                {doc.userName}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </div>\r\n\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Session *</label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          value={session}\r\n                          onChange={(e) => setSession(parseInt(e.target.value))}\r\n                          required\r\n                        >\r\n                          <option value=\"\" disabled>Select</option>\r\n                          {sessionData.map((sess) => (\r\n                            <option key={sess.id} value={sess.id}>\r\n                              {sess.sessionName}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Start Time *</label>\r\n                        <input\r\n                          type=\"time\"\r\n                          className=\"form-control\"\r\n                          value={startTime}\r\n                          onChange={(e) => setStartTime(e.target.value)}\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">End Time *</label>\r\n                        <input\r\n                          type=\"time\"\r\n                          className=\"form-control\"\r\n                          value={endTime}\r\n                          onChange={(e) => setEndTime(e.target.value)}\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">Time Taken (minutes) *</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          value={timeTaken}\r\n                          onChange={(e) => setTimeTaken(parseInt(e.target.value))}\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-12\">\r\n                        <table className=\"table table-bordered\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Days</th>\r\n                              <th>Token Start No.</th>\r\n                              <th>Token Interval</th>\r\n                              <th>Total Token</th>\r\n                              <th>Total Online Token</th>\r\n                              <th>Max No. of Days</th>\r\n                              <th>Min No. of Days</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {daysOfWeek.map((day) => (\r\n                              <tr key={day}>\r\n                                <td>{day}</td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={daysConfig[day].startToken}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"startToken\", parseInt(e.target.value) || 0)}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={daysConfig[day].totalInterval}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"totalInterval\", parseInt(e.target.value) || 0)}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={daysConfig[day].totalToken}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"totalToken\", parseInt(e.target.value) || 0)}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={daysConfig[day].totalOnlineToken}\r\n                                    onChange={(e) =>\r\n                                      handleDayConfigChange(day, \"totalOnlineToken\", parseInt(e.target.value) || 0)\r\n                                    }\r\n                                  />\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={daysConfig[day].maxNoOfDays}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"maxNoOfDays\", parseInt(e.target.value) || 0)}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={daysConfig[day].minNoOfDays}\r\n                                    onChange={(e) => handleDayConfigChange(day, \"minNoOfDays\", parseInt(e.target.value) || 0)}\r\n                                  />\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                      <button type=\"submit\" className=\"btn btn-primary me-2\" disabled={loading}>\r\n                        {loading ? \"Processing...\" : appointmentData ? \"Update Appointment\" : \"Create Appointment\"}\r\n                      </button>\r\n\r\n                      <button type=\"button\" className=\"btn btn-secondary\" onClick={handleReset}>Reset</button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentSetup;"],"names":["BASE_URL","API_HOST","getRequest","async","endpoint","headers","arguments","length","undefined","token","localStorage","Authorization","getItem","sessionStorage","response","fetch","method","ok","Error","status","json","error","console","postRequest","data","body","JSON","stringify","AppointmentSetup","popup","setPopup","useState","popupMessage","setPopupMessage","department","setDepartment","doctor","setDoctor","session","setSession","startTime","setStartTime","endTime","setEndTime","timeTaken","setTimeTaken","departmentData","setDepartmentData","doctorData","setDoctorData","sessionData","setSessionData","loading","setLoading","appointmentData","setAppointmentData","showPopup","message","type","onClose","daysOfWeek","initialDaysState","reduce","acc","day","startToken","totalInterval","totalToken","totalOnlineToken","maxNoOfDays","minNoOfDays","daysConfig","setDaysConfig","useEffect","fetchDepartmentData","fetchSessionData","fetchDoctorData","DEPARTMENT","Array","isArray","SESSION","log","handleFetchAppointment","url","APPOINTMENT","days","updatedDaysConfig","forEach","dayConfig","dayName","handleDayConfigChange","field","value","handleReset","_jsx","_Fragment","children","className","_jsxs","Popup","onSubmit","e","preventDefault","requestData","id","departmentId","doctorId","sessionId","map","_appointmentData$days","existingDay","find","d","tokenStartNo","tokenInterval","maxNoOfDay","minNoOfday","onChange","parseInt","target","required","disabled","dept","departmentName","filter","doc","userId","userName","sess","sessionName","onClick"],"sourceRoot":""}