"use strict";(self.webpackChunkhmis=self.webpackChunkhmis||[]).push([[709],{709:(e,s,t)=>{t.r(s),t.d(s,{default:()=>d});var r=t(43),a=t(533),n=t(253),l=t(351),c=t(128),o=t(579);const d=()=>{const[e,s]=(0,r.useState)(""),[t,d]=(0,r.useState)(""),[i,m]=(0,r.useState)(""),[h,u]=(0,r.useState)([]),[p,f]=(0,r.useState)([]),[g,x]=(0,r.useState)(!1),[N,j]=(0,r.useState)(null),[v,b]=(0,r.useState)([]),[y,$]=(0,r.useState)(""),[S,D]=(0,r.useState)(""),[w,k]=(0,r.useState)(!1),I=function(e){D({message:e,type:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",onClose:()=>{D(null)}})};(0,r.useEffect)((()=>{A()}),[]),(0,r.useEffect)((()=>{e&&E()}),[e]),(0,r.useEffect)((()=>{i&&C()}),[i,p]),(0,r.useEffect)((()=>{e&&i&&Y()}),[e,t,i]);const A=async()=>{x(!0);try{const e=await(0,n.iq)(`${a.Xw}/getAllDepartments/1`);200===e.status&&Array.isArray(e.response)?u(e.response):(console.error("Unexpected API response format:",e),u([]))}catch(e){console.error("Error fetching Department data:",e)}finally{x(!1)}},E=async()=>{x(!0);try{const s=await(0,n.iq)(`${a.WX}/doctorBySpeciality/${e}`);200===s.status&&Array.isArray(s.response)?f(s.response):(console.error("Unexpected API response format:",s),f([]))}catch(s){console.error("Error fetching Doctor data:",s)}finally{x(!1)}},C=()=>{if(!i)return;const e=new Date(i),s=[];for(let t=0;t<7;t++){const r=new Date(e);r.setDate(e.getDate()+t);const a=`${r.getDate().toString().padStart(2,"0")}/${(r.getMonth()+1).toString().padStart(2,"0")}/${r.getFullYear()}`;s.push(a)}let r=[];if(t){const e=p.find((e=>e.userId===parseInt(t)));e&&(r=[{name:`${e.firstName} ${e.lastName}`,id:e.userId}])}else r=p.map((e=>({name:`${e.firstName} ${e.lastName}`,id:e.userId})));const a=r.map((e=>({doctorName:e.name,doctorId:e.id,schedule:s.map((e=>({date:e,morning:!0,evening:!0})))})));b(a)},Y=async()=>{try{x(!0);const s=new URLSearchParams({deptId:e,rosterDate:i});t&&s.append("doctorId",t);const r=`${a._}/rosterfind?${s.toString()}`,l=await(0,n.iq)(r);if(j(l),k(l&&Array.isArray(l)&&l.length>0),l&&Array.isArray(l)&&l.length>0){const e=[...v];l.forEach((s=>{const t=e.findIndex((e=>e.doctorName===s.doctorName));if(-1!==t){const r=e[t].schedule.findIndex((e=>e.date===s.date));-1!==r&&("YN"===s.rosterValue?(e[t].schedule[r].morning=!0,e[t].schedule[r].evening=!1):"NY"===s.rosterValue?(e[t].schedule[r].morning=!1,e[t].schedule[r].evening=!0):"YY"===s.rosterValue?(e[t].schedule[r].morning=!0,e[t].schedule[r].evening=!0):"NN"===s.rosterValue&&(e[t].schedule[r].morning=!1,e[t].schedule[r].evening=!1))}})),b(e)}}catch(s){console.error("Error fetching Doctor Roster data:",s),k(!1)}finally{x(!1)}},R=(e,s,t)=>{const r=[...v];r[e].schedule[s][t]=!r[e].schedule[s][t],b(r)},U=e=>{const[s,t,r]=e.split("/");return`${r}-${t}-${s}T00:00:00.000Z`};return(0,o.jsx)("div",{className:"body d-flex py-3",children:(0,o.jsxs)("div",{className:"container-xxl",children:[(0,o.jsx)("div",{className:"row align-items-center",children:(0,o.jsx)("div",{className:"border-0 mb-4",children:(0,o.jsx)("div",{className:"card-header py-3 bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap",children:(0,o.jsx)("h3",{className:"fw-bold mb-0",children:"Doctor Roster"})})})}),S&&(0,o.jsx)(c.A,{message:S.message,type:S.type,onClose:S.onClose}),g&&(0,o.jsx)(l.A,{}),(0,o.jsx)("div",{className:"row mb-3",children:(0,o.jsx)("div",{className:"col-sm-12",children:(0,o.jsx)("div",{className:"card shadow mb-3",children:(0,o.jsx)("div",{className:"card-body",children:(0,o.jsxs)("form",{onSubmit:async s=>{if(s.preventDefault(),e&&i){x(!0);try{const s=[];v.forEach((e=>{e.schedule.forEach((t=>{const r=(a=t.morning,n=t.evening,a&&n?"YY":a&&!n?"YN":!a&&n?"NY":"NN");var a,n;s.push({dates:U(t.date),rosterVale:r,doctorId:e.doctorId,id:0})}))}));const t={departmentId:parseInt(e),fromDate:i,dates:s},r=`${a._}/roster`,l=w?n.zi:n.MB,c=await l(r,t);200===c.status?(I(`Roster ${w?"updated":"added"} successfully!`,"success"),Y()):I(`Error ${w?"updating":"adding"} roster: ${c.message||"Unknown error"}`,"error")}catch(t){console.error("Error saving/updating roster:",t),I("An error occurred while saving the roster","error")}finally{x(!1)}}else alert("Please fill all required fields")},children:[(0,o.jsxs)("div",{className:"row g-3",children:[(0,o.jsxs)("div",{className:"col-md-4",children:[(0,o.jsx)("label",{className:"form-label",children:"Department *"}),(0,o.jsxs)("select",{className:"form-select",value:e,onChange:e=>s(parseInt(e.target.value)),required:!0,children:[(0,o.jsx)("option",{value:"",disabled:!0,children:"Select"}),h.map((e=>(0,o.jsx)("option",{value:e.id,children:e.departmentName},e.id)))]})]}),(0,o.jsxs)("div",{className:"col-md-4",children:[(0,o.jsx)("label",{className:"form-label",children:"Doctor (Optional)"}),(0,o.jsxs)("select",{className:"form-select",value:t,onChange:e=>d(e.target.value),disabled:!e,children:[(0,o.jsx)("option",{value:"",children:"All Doctors"}),p.map((e=>(0,o.jsxs)("option",{value:e.userId,children:[e.firstName," ",e.lastName]},e.userId)))]})]}),(0,o.jsxs)("div",{className:"col-md-4",children:[(0,o.jsx)("label",{className:"form-label",children:"From Date *"}),(0,o.jsx)("input",{type:"date",className:"form-control",value:i,onChange:e=>m(e.target.value),required:!0})]}),v.length>0&&(0,o.jsx)("div",{className:"col-md-12 mt-4",children:(0,o.jsx)("div",{className:"table-responsive",children:(0,o.jsxs)("table",{className:"table table-bordered",children:[(0,o.jsx)("thead",{children:(0,o.jsxs)("tr",{children:[(0,o.jsx)("th",{children:"Doctor"}),(i&&0!==v.length&&0!==v[0].schedule.length?v[0].schedule.map((e=>(e=>{if(!e)return"";const[s,t,r]=e.split("/");return new Date(`${r}-${t}-${s}`).toLocaleDateString("en-US",{day:"2-digit",month:"short",year:"numeric"})})(e.date))):Array(7).fill(null).map(((e,s)=>`Date ${s+1}`))).map(((e,s)=>(0,o.jsxs)("th",{className:"text-center",children:[e,(0,o.jsx)("div",{className:"small text-muted",children:v[0].schedule[s]?new Date(U(v[0].schedule[s].date)).toLocaleDateString("en-US",{weekday:"short"}):""})]},s)))]})}),(0,o.jsx)("tbody",{children:v.map(((e,s)=>(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:e.doctorName}),e.schedule.map(((e,t)=>(0,o.jsxs)("td",{className:"text-center",children:[(0,o.jsxs)("div",{className:"form-check form-check-inline",children:[(0,o.jsx)("input",{type:"checkbox",className:"form-check-input",id:`morning-${s}-${t}`,checked:e.morning,onChange:()=>R(s,t,"morning")}),(0,o.jsx)("label",{className:"form-check-label",htmlFor:`morning-${s}-${t}`,children:"M"})]}),(0,o.jsxs)("div",{className:"form-check form-check-inline",children:[(0,o.jsx)("input",{type:"checkbox",className:"form-check-input",id:`evening-${s}-${t}`,checked:e.evening,onChange:()=>R(s,t,"evening")}),(0,o.jsx)("label",{className:"form-check-label",htmlFor:`evening-${s}-${t}`,children:"E"})]})]},t)))]},s)))})]})})})]}),(0,o.jsxs)("div",{className:"mt-4",children:[(0,o.jsx)("button",{type:"submit",className:"btn btn-primary me-2",disabled:g||0===v.length,children:g?"Processing...":w?"Update Roster":"Save Roster"}),(0,o.jsx)("button",{type:"button",className:"btn btn-secondary",onClick:()=>{s(""),d(""),m(""),j(null),b([]),k(!1)},disabled:g,children:"Reset"})]})]})})})})})]})})}}}]);
//# sourceMappingURL=709.4275a713.chunk.js.map