{"version":3,"file":"static/js/194.162b9a51.chunk.js","mappings":"0LAOA,MAmuCA,EAnuC2BA,KACzB,MAAMC,EAAkB,CACtBC,eAAgB,KAChBC,eAAgB,KAChBC,UAAW,GACXC,WAAY,GACZC,SAAU,GACVC,IAAK,GACLC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,WAAY,GACZC,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,mBAAoB,GACpBC,eAAgB,GAChBC,iBAAkB,GAClBC,eAAgB,GAChBC,OAAQ,GACRC,SAAU,GACVC,cAAe,CAAC,CAAEC,wBAAyB,EAAGC,gBAAiB,GAAIC,eAAgB,GAAIC,kBAAmB,GAAIC,SAAU,OACxHC,SAAU,CAAC,CAAEC,mBAAoB,EAAGC,aAAc,GAAIH,SAAU,SAG3DI,EAAUC,IAAeC,EAAAA,EAAAA,UAAShC,IAElCiC,EAAUC,IAAeF,EAAAA,EAAAA,WAAS,IAClCG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,OAChDK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,KACpCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,KAC5BS,EAAcC,IAAmBV,EAAAA,EAAAA,UAAS,KAC1CW,EAAaC,IAAkBZ,EAAAA,EAAAA,UAAS,OACxCa,EAASC,IAAcd,EAAAA,EAAAA,WAAS,IAChCe,EAAaC,IAAkBhB,EAAAA,EAAAA,UAAS,KACxCiB,EAAWC,IAAgBlB,EAAAA,EAAAA,UAAS,KACpCmB,EAAcC,IAAmBpB,EAAAA,EAAAA,UAAS,KAC1CqB,EAAYC,IAAiBtB,EAAAA,EAAAA,UAAS,KACtCuB,EAAYC,IAAiBxB,EAAAA,EAAAA,UAAS,KACtCyB,EAAUC,IAAe1B,EAAAA,EAAAA,UAAS,KAClC2B,EAAYC,IAAiB5B,EAAAA,EAAAA,UAAS,KACtC6B,EAAUC,IAAe9B,EAAAA,EAAAA,UAAS,KAClC+B,EAAkBC,IAAuBhC,EAAAA,EAAAA,UAAS,KAClDiC,EAAoBC,IAAyBlC,EAAAA,EAAAA,UAAS,KACtDmC,EAAmBC,IAAwBpC,EAAAA,EAAAA,UAAS,KACpDqC,EAAcC,IAAmBtC,EAAAA,EAAAA,UAAS,KAC1CuC,EAAYC,IAAiBxC,EAAAA,EAAAA,UAAS,KACtCyC,EAAWC,IAAgB1C,EAAAA,EAAAA,UAAS,KACpC2C,EAAaC,IAAkB5C,EAAAA,EAAAA,UAAS,IAK/C6C,EAAAA,EAAAA,YAAU,KACRC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IAAyB,GACxB,IAEH,MAAMC,EAAY,SAACC,GACjB5C,EAAgB,CACd4C,UACAC,KAH4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAI/BG,QAASA,KACPjD,EAAgB,KAAK,GAG3B,EAEMoC,GAAqBc,UACzB9C,GAAW,GACX,IACE,MAAM+C,QAAaC,EAAAA,EAAAA,IAAW,GAAGC,EAAAA,qBACb,MAAhBF,EAAKG,QAAkBC,MAAMC,QAAQL,EAAKM,WAC5C7D,EAAauD,EAAKM,UAClB/B,EAAqByB,EAAKM,YAE1BC,QAAQC,MAAM,kCAAmCR,GACjDvD,EAAa,IACb8B,EAAqB,IAEzB,CAAE,MAAOiC,GACPD,QAAQC,MAAM,iCAAkCA,EAClD,CAAC,QACCvD,GAAW,EACb,GAIIiC,GAAmBa,UACvB9C,GAAW,GACX,IACE,MAAM+C,QAAaC,EAAAA,EAAAA,IAAW,GAAGQ,EAAAA,wBACb,MAAhBT,EAAKG,QAAkBC,MAAMC,QAAQL,EAAKM,UAC5CnD,EAAe6C,EAAKM,WAEpBC,QAAQC,MAAM,kCAAmCR,GACjD7C,EAAe,IAEnB,CAAE,MAAOqD,GACPD,QAAQC,MAAM,+BAAgCA,EAChD,CAAC,QACCvD,GAAW,EACb,GAGIyD,GAAiBX,UACrB9C,GAAW,GACX,IACE,MAAM0D,EAAa,GAAGC,EAAAA,cAAoBlD,IACpCsC,QAAaC,EAAAA,EAAAA,IAAWU,GACV,MAAhBX,EAAKG,QAAkBC,MAAMC,QAAQL,EAAKM,UAC5CjD,EAAa2C,EAAKM,WAElBC,QAAQC,MAAM,kCAAmCR,GACjD3C,EAAa,IAEjB,CAAE,MAAOmD,GACPD,QAAQC,MAAM,6BAA8BA,EAC9C,CAAC,QACCvD,GAAW,EACb,GAGI4D,GAAoBd,UACxB9C,GAAW,GACX,IACE,MAAM6D,EAAa,GAAGC,EAAAA,YAAqBnD,IACrCoC,QAAaC,EAAAA,EAAAA,IAAWa,GACV,MAAhBd,EAAKG,QAAkBC,MAAMC,QAAQL,EAAKM,UAC5C/C,EAAgByC,EAAKM,WAErBC,QAAQC,MAAM,kCAAmCR,GACjDzC,EAAgB,IAEpB,CAAE,MAAOiD,GACPD,QAAQC,MAAM,4BAA6BA,EAC7C,CAAC,QACCvD,GAAW,EACb,GAGIkC,GAAkBY,UACtB9C,GAAW,GACX,IACE,MAAM+C,QAAaC,EAAAA,EAAAA,IAAW,GAAGe,EAAAA,eACb,MAAhBhB,EAAKG,QAAkBC,MAAMC,QAAQL,EAAKM,UAC5C7C,EAAcuC,EAAKM,WAEnBC,QAAQC,MAAM,kCAAmCR,GACjDvC,EAAc,IAElB,CAAE,MAAO+C,GACPD,QAAQC,MAAM,8BAA+BA,EAC/C,CAAC,QACCvD,GAAW,EACb,GAGImC,GAAkBW,UACtB9C,GAAW,GACX,IACE,MAAM+C,QAAaC,EAAAA,EAAAA,IAAW,GAAGgB,EAAAA,kCACb,MAAhBjB,EAAKG,QAAkBC,MAAMC,QAAQL,EAAKM,UAC5CvC,EAAciC,EAAKM,WAEnBC,QAAQC,MAAM,kCAAmCR,GACjDjC,EAAc,IAElB,CAAE,MAAOyC,GACPD,QAAQC,MAAM,8BAA+BA,EAC/C,CAAC,QACCvD,GAAW,EACb,GAGIqC,GAAwBS,UAC5B9C,GAAW,GACX,IACE,MAAM+C,QAAaC,EAAAA,EAAAA,IAAW,GAAGiB,EAAAA,uBACb,MAAhBlB,EAAKG,QAAkBC,MAAMC,QAAQL,EAAKM,UAC5CnC,EAAoB6B,EAAKM,WAEzBC,QAAQC,MAAM,kCAAmCR,GACjD7B,EAAoB,IAExB,CAAE,MAAOqC,GACPD,QAAQC,MAAM,oCAAqCA,EACrD,CAAC,QACCvD,GAAW,EACb,GAGIsC,GAA0BQ,UAC9B9C,GAAW,GACX,IACE,MAAM+C,QAAaC,EAAAA,EAAAA,IAAW,GAAGkB,EAAAA,6BACb,MAAhBnB,EAAKG,QAAkBC,MAAMC,QAAQL,EAAKM,UAC5CjC,EAAsB2B,EAAKM,WAE3BC,QAAQC,MAAM,kCAAmCR,GACjD3B,EAAsB,IAE1B,CAAE,MAAOmC,GACPD,QAAQC,MAAM,sCAAuCA,EACvD,CAAC,QACCvD,GAAW,EACb,GAGIoC,GAAgBU,UACpB9C,GAAW,GACX,IACE,MAAM+C,QAAaC,EAAAA,EAAAA,IAAW,GAAGmB,EAAAA,QACb,MAAhBpB,EAAKG,QAAkBC,MAAMC,QAAQL,EAAKM,UAC5CrC,EAAY+B,EAAKM,WAEjBC,QAAQC,MAAM,kCAAmCR,GACjD/B,EAAY,IAEhB,CAAE,MAAOuC,GACPD,QAAQC,MAAM,4BAA6BA,EAC7C,CAAC,QACCvD,GAAW,EACb,GAgEIoE,GAA4BA,CAACC,EAAOC,EAAOC,KAC/CtF,GAAYuF,IAAI,IACXA,EACHjG,cAAeiG,EAAKjG,cAAckG,KAAI,CAACC,EAAMC,IAC3CA,IAAMN,EAAQ,IAAKK,EAAM,CAACJ,GAAQC,GAAUG,OAE7C,EA4BCE,GAAuBA,CAACP,EAAOC,EAAOC,KAC1CtF,GAAYuF,IAAI,IACXA,EACH3F,SAAU2F,EAAK3F,SAAS4F,KAAI,CAACC,EAAMC,IACjCA,IAAMN,EAAQ,IAAKK,EAAM,CAACJ,GAAQC,GAAUG,OAE7C,EAmFCG,GAAqBC,IACzB,MAAM,GAAEC,EAAE,MAAER,GAAUO,EAAEE,OACxB/F,GAAagG,IAAQ,IAAWA,EAAU,CAACF,GAAKR,KAAS,EAGrDW,GAA2BJ,IAC/B,MAAM,GAAEC,EAAE,MAAER,GAAUO,EAAEE,OAClBG,EAAeZ,EAAMa,QAAQ,MAAO,IAC1CnG,GAAagG,IAAQ,IAAWA,EAAU,CAACF,GAAKI,KAAgB,EAqB5DE,GAAqBC,KAAKC,KAAKlE,EAAkBsB,OA3YlC,GA2bf6C,GAAenE,EAAkBoE,MA3blB,GA4blB5D,EAAc,GA5bI,EA6bnBA,GAII6D,GAAYA,KAChBzG,EAAY/B,GACZkC,GAAY,GACZE,EAAmB,KAAK,EA8BpBqG,GAAkBA,KACtB,IA5BmBC,MACnB,MAAMC,EAAiB,CACrB,YAAa,WAAY,MAAO,WAAY,WAC5C,YAAa,UAAW,aAAc,OAAQ,UAC9C,WAAY,qBAAsB,kBAGpC,IAAK,MAAMvB,KAASuB,EAClB,IAAK7G,EAASsF,GAEZ,OADA/B,EAAU,sCAAsC+B,EAAMc,QAAQ,WAAY,OAAOA,QAAQ,MAAOU,GAAQA,EAAIC,kBAAkB,UACvH,EAIX,OAAK/G,EAAS7B,gBAAkC,OAAfkC,QAAe,IAAfA,GAAAA,EAAiBlC,kBAK7C6B,EAAS5B,gBAAkC,OAAfiC,QAAe,IAAfA,GAAAA,EAAiBjC,kBAChDmF,EAAU,0BAA2B,UAC9B,IANPA,EAAU,8BAA+B,UAClC,EAQE,EAINqD,GACH,OAAO,KAGT,MAAMI,EAAiB,IAAIC,SA4D3B,OAzDAD,EAAeE,OAAO,YAAalH,EAAS3B,WAC5C2I,EAAeE,OAAO,WAAYlH,EAASzB,UACvCyB,EAAS1B,YAAY0I,EAAeE,OAAO,aAAclH,EAAS1B,YACtE0I,EAAeE,OAAO,MAAO,IAAIC,KAAKnH,EAASxB,KAAK4I,cAAcC,MAAM,KAAK,IAC7EL,EAAeE,OAAO,WAAYlH,EAASvB,UAC3CuI,EAAeE,OAAO,WAAYlH,EAAStB,UAC3CsI,EAAeE,OAAO,YAAalH,EAASrB,WAC5CqI,EAAeE,OAAO,UAAWlH,EAASpB,SAC1CoI,EAAeE,OAAO,aAAclH,EAASnB,YAC7CmI,EAAeE,OAAO,OAAQlH,EAASlB,MACvCkI,EAAeE,OAAO,UAAWlH,EAASjB,SAC1CiI,EAAeE,OAAO,WAAYlH,EAAShB,UAC3CgI,EAAeE,OAAO,iBAAkBlH,EAASd,gBACjD8H,EAAeE,OAAO,qBAAsBlH,EAASf,oBACrD+H,EAAeE,OAAO,iBAAkBlH,EAASZ,gBACjD4H,EAAeE,OAAO,mBAAoBlH,EAASb,kBACnD6H,EAAeE,OAAO,SAAUlH,EAASX,QACzC2H,EAAeE,OAAO,WAAY,IAAIC,KAAKnH,EAASV,UAAU8H,eAE1DpH,EAASsH,SACXN,EAAeE,OAAO,eAAgBlH,EAASsH,SAG7CtH,EAAS7B,0BAA0BoJ,MACrCP,EAAeE,OAAO,iBAAkBlH,EAAS7B,gBAG/C6B,EAAS5B,0BAA0BmJ,MACrCP,EAAeE,OAAO,iBAAkBlH,EAAS5B,gBAGnD4B,EAAST,cAAciI,SAAQ,CAACC,EAAMpC,KACpC2B,EAAeE,OAAO,iBAAiB7B,qBAA0BoC,EAAKhI,iBACtEuH,EAAeE,OAAO,iBAAiB7B,oBAAyBoC,EAAK/H,gBACrEsH,EAAeE,OAAO,iBAAiB7B,uBAA4BoC,EAAK9H,mBAEpE8H,EAAKjI,yBAA4D,IAAjCiI,EAAKjI,yBACvCwH,EAAeE,OAAO,iBAAiB7B,6BAAkCoC,EAAKjI,yBAG5EiI,EAAK7H,oBAAoB2H,MAC3BP,EAAeE,OAAO,iBAAiB7B,cAAmBoC,EAAK7H,SACjE,IAGFI,EAASH,SAAS2H,SAAQ,CAACE,EAAKrC,KAC9B2B,EAAeE,OAAO,YAAY7B,kBAAuBqC,EAAI3H,cAEzD2H,EAAI5H,oBAAiD,IAA3B4H,EAAI5H,oBAChCkH,EAAeE,OAAO,YAAY7B,wBAA6BqC,EAAI5H,oBAGjE4H,EAAI9H,oBAAoB2H,MAC1BP,EAAeE,OAAO,YAAY7B,cAAmBqC,EAAI9H,SAC3D,IAGKoH,CAAc,EAoCvB,OACEW,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,CAC3BlH,IACCgH,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CACJvE,QAAS7C,EAAa6C,QACtBC,KAAM9C,EAAa8C,KACnBI,QAASlD,EAAakD,UAGzB9C,IAAW4G,EAAAA,EAAAA,KAACK,EAAAA,EAAa,KAE1BL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iHAAgHC,UAC7HF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,SAAC,yBAKjC1H,GAuIA2H,EAAAA,EAAAA,MAAA,QAAMG,SAAWnC,IACfA,EAAEoC,iBA5LOpE,WACjB,MAAMkD,EAAiBL,KACvB,GAAKK,EAAL,CACA1C,QAAQ6D,IAAI,qBAAsBnB,GAClChG,GAAW,GACX,IACE,MAAMqD,QAAiB+D,MAAM,GAAGC,EAAAA,KAAWpE,EAAAA,eAAkCpD,IAAe,CAC1FyH,OAAQ,MACRC,QAAS,CACP,cAAiB,yPACjB,OAAU,oBAEZC,KAAMxB,IAGFjD,QAAaM,EAASoE,OAExBpE,EAASqE,IACXnF,EAAU,gCAAiC,WAC3CmD,MAEAnD,EAAU,UAAUQ,EAAKP,SAAW,8BAA+B,QAEvE,CAAE,MAAOe,GACPD,QAAQC,MAAM,2BAA4BA,GAC1ChB,EAAU,2CAA4C,QACxD,CAAC,QACCvC,GAAW,EACb,CA1B2B,CA0B3B,EAiKQ2H,EAAY,EACXf,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,kBAC9BF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmF,UAAQ,EACRhB,UAAU,eACV7B,GAAG,YACH8C,YAAY,aACZC,SAAUjD,GACVN,MAAOvF,EAAS3B,UAChB0K,UAxwBA,SA2wBJjB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,iBAC9BF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmE,UAAU,eACV7B,GAAG,aACH8C,YAAY,cACZC,SAAUjD,GACVN,MAAOvF,EAAS1B,WAChByK,UApxBA,SAuxBJjB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,iBAC9BF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmF,UAAQ,EACRhB,UAAU,eACV7B,GAAG,WACH8C,YAAY,YACZC,SAAUjD,GACVN,MAAOvF,EAASzB,SAChBwK,UAjyBA,SAoyBJjB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,qBAC9BF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmF,UAAQ,EACR7C,GAAG,MACHR,MAAOvF,EAASxB,IAChBoJ,UAAU,eACVkB,SAAUjD,SAGdiC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,cAC9BC,EAAAA,EAAAA,MAAA,UACEF,UAAU,cACVoB,MAAO,CAAEC,aAAc,QACvB1D,MAAOvF,EAASvB,SAChBqK,SAAWhD,IACToD,OA/kBUC,EA+kBSC,SAAStD,EAAEE,OAAOT,MAAO,SA9kB5DtF,GAAaoJ,IAAS,IACjBA,EACH5K,SAAU0K,MAHcA,KAglBX,EACDG,SAAUvI,EAAQ8G,SAAA,EAElBF,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEsC,SAAC,kBAChBtG,EAAWkE,KAAK8D,IACf5B,EAAAA,EAAAA,KAAA,UAAwBpC,MAAOgE,EAAOxD,GAAG8B,SACtC0B,EAAOC,YADGD,EAAOxD,aAM1B+B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,eAC9BF,EAAAA,EAAAA,KAAA,YACEiB,UAAQ,EACR7C,GAAG,WACHR,MAAOvF,EAAStB,SAChBkJ,UAAU,eACVkB,SAAUjD,GACVgD,YAAY,gBAGhBf,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,eAC9BC,EAAAA,EAAAA,MAAA,UACEF,UAAU,cACVrC,MAAOvF,EAASrB,UAChBmK,SAAWhD,IACT,MAAM2D,EAAkBxI,EAAYyI,MACjCC,GAAYA,EAAQ5D,GAAG6D,aAAe9D,EAAEE,OAAOT,QAvoBvCQ,MAyoBP0D,IAzoBO1D,EA0oBW0D,EAAgB1D,GAzoBtD9F,GAAaoJ,IAAS,IACjBA,EACH1K,UAAWoH,EACXnH,QAAS,GACTC,WAAY,OAEd4F,GAAesB,GAooBGrE,EAAc+H,EAAgB1D,IAC9BtB,GAAegF,EAAgB1D,IACjC,EAEFuD,SAAUvI,EAAQ8G,SAAA,EAElBF,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEsC,SAAC,mBAChB5G,EAAYwE,KAAKkE,IAChBhC,EAAAA,EAAAA,KAAA,UAAyBpC,MAAOoE,EAAQ5D,GAAG8B,SACxC8B,EAAQE,aADEF,EAAQ5D,aAM3B+B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,aAC9BC,EAAAA,EAAAA,MAAA,UACEF,UAAU,cACVrC,MAAOvF,EAASpB,QAChBkK,SAAWhD,IACT,MAAMgE,EAAgB3I,EAAUuI,MAC7BK,GAAUA,EAAMhE,GAAG6D,aAAe9D,EAAEE,OAAOT,QAtpBrCQ,MAwpBL+D,IAxpBK/D,EAypBW+D,EAAc/D,GAxpBlD9F,GAAaoJ,IAAS,IACjBA,EACHzK,QAASmH,EACTlH,WAAY,OAEd+F,GAAkBmB,GAopBAnE,EAAYkI,EAAc/D,IAC1BnB,GAAkBkF,EAAc/D,IAClC,EAEFuD,SAAUvI,IAAYf,EAASrB,UAAUkJ,SAAA,EAEzCF,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEsC,SAAC,iBAChB1G,EAAUsE,KAAKsE,IACdpC,EAAAA,EAAAA,KAAA,UAAuBpC,MAAOwE,EAAMhE,GAAG8B,SACpCkC,EAAMC,WADID,EAAMhE,aAMzB+B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,gBAC9BC,EAAAA,EAAAA,MAAA,UACEF,UAAU,cACVrC,MAAOvF,EAASnB,WAChBiK,SAAWhD,IAAMmE,OApqBHpL,EAoqBwBiH,EAAEE,OAAOT,WAnqB7DtF,GAAaoJ,IAAS,IACjBA,EACHxK,WAAYA,MAHcA,KAoqBwC,EACtDyK,SAAUvI,IAAYf,EAASpB,QAAQiJ,SAAA,EAEvCF,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEsC,SAAC,oBAChBxG,EAAaoE,KAAKyE,IACjBvC,EAAAA,EAAAA,KAAA,UAAsBpC,MAAO2E,EAAKnE,GAAG8B,SAClCqC,EAAKC,cADKD,EAAKnE,aAMxB+B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,YAC9BF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmF,UAAQ,EACRhB,UAAU,eACV7B,GAAG,OACH8C,YAAY,OACZC,SAAUjD,GACVN,MAAOvF,EAASlB,KAChBiK,UAz5BA,SA45BJjB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,eAC9BF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmF,UAAQ,EACRhB,UAAU,eACV7B,GAAG,UACH8C,YAAY,UACZC,SAAU5C,GACVX,MAAOvF,EAASjB,QAChBgK,UAAW,EACXqB,UAAW,EACXC,UAAU,UACVC,QAAQ,aAGZxC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,kBAC9BF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmF,UAAQ,EACRhB,UAAU,eACV7B,GAAG,WACH8C,YAAY,aACZC,SAAU5C,GACVX,MAAOvF,EAAShB,SAChB+J,UAAW,GACXqB,UAAW,GACXC,UAAU,UACVC,QAAQ,aAGZxC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,eAC9BC,EAAAA,EAAAA,MAAA,UACEF,UAAU,cACVoB,MAAO,CAAEC,aAAc,QACvB1D,MAAOvF,EAASf,mBAChB6J,SAAWhD,IACTyE,OAhsBUC,EAgsBSpB,SAAStD,EAAEE,OAAOT,MAAO,SA/rB5DtF,GAAaoJ,IAAS,IACjBA,EACHpK,mBAAoBuL,MAHIA,KAisBX,EACDlB,SAAUvI,EAAQ8G,SAAA,EAElBF,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEsC,SAAC,mBAChBhG,EAAW4D,KAAKgF,IACf9C,EAAAA,EAAAA,KAAA,UAA0CpC,MAAOkF,EAAOC,qBAAqB7C,SAC1E4C,EAAOE,oBADGF,EAAOC,+BAM1B5C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,iBAC9BF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmF,UAAQ,EACRhB,UAAU,eACV7B,GAAG,iBACH8C,YAAY,YACZC,SAAUjD,GACVN,MAAOvF,EAASd,eAChB6J,UAz9BA,SA49BJjB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,4BAC9BF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLsC,GAAG,iBACH6B,UAAU,oBACVgD,OAAO,uBACP9B,SAAWhD,GAAM7F,EAAY,IAAKD,EAAU5B,eAAgB0H,EAAEE,OAAO6E,MAAM,QAE7D,OAAfxK,QAAe,IAAfA,OAAe,EAAfA,EAAiBjC,iBAAkB4B,EAAS5B,iBAC3C0J,EAAAA,EAAAA,MAAA,SAAOF,UAAU,aAAYC,SAAA,CAAC,iBAAexH,EAAgBjC,eAAeiJ,MAAM,KAAKyD,MAAM1E,QAAQ,QAAS,WAKlH0B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,iBAC9BC,EAAAA,EAAAA,MAAA,UACEF,UAAU,cACVoB,MAAO,CAAEC,aAAc,QACvB1D,MAAOvF,EAASX,OAChByJ,SAAWhD,IACTiF,OAtvBQC,EAsvBS5B,SAAStD,EAAEE,OAAOT,MAAO,SArvB1DtF,GAAaoJ,IAAS,IACjBA,EACHhK,OAAQ2L,MAHcA,KAuvBT,EACD1B,SAAUvI,EAAQ8G,SAAA,EAElBF,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEsC,SAAC,gBAChB9F,EAAS0D,KAAKuF,IACbrD,EAAAA,EAAAA,KAAA,UAAsBpC,MAAOyF,EAAKjF,GAAG8B,SAClCmD,EAAKC,UADKD,EAAKjF,aAOxB+B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,oCAC9BF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLsC,GAAG,WACHR,MAAOvF,EAASV,SAChBsI,UAAU,eACVkB,SAAUjD,SAGdiC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,wBAC9BC,EAAAA,EAAAA,MAAA,UACEF,UAAU,cACVoB,MAAO,CAAEC,aAAc,QACvB1D,MAAOvF,EAASZ,eAChB0J,SAAWhD,IACToF,OA3xBgBC,EA2xBS/B,SAAStD,EAAEE,OAAOT,MAAO,SA1xBlEtF,GAAaoJ,IAAS,IACjBA,EACHjK,eAAgB+L,MAHcA,KA4xBjB,EACD7B,SAAUvI,EAAQ8G,SAAA,EAElBF,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEsC,SAAC,yBAChB5F,EAAiBwD,KAAK2F,IACrBzD,EAAAA,EAAAA,KAAA,UAAiCpC,MAAO6F,EAAQC,WAAWxD,SACxDuD,EAAQE,cADEF,EAAQC,qBAM3BvD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,0BAC9BC,EAAAA,EAAAA,MAAA,UACEF,UAAU,cACVoB,MAAO,CAAEC,aAAc,QACvB1D,MAAOvF,EAASb,iBAChB2J,SAAWhD,IACTyF,OArzBkBC,EAqzBSpC,SAAStD,EAAEE,OAAOT,MAAO,SApzBpEtF,GAAaoJ,IAAS,IACjBA,EACHlK,iBAAkBqM,MAHcA,KAszBnB,EACDlC,SAAUvI,EAAQ8G,SAAA,EAElBF,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEsC,SAAC,2BAChB1F,EAAmBsD,KAAKgG,IACvB9D,EAAAA,EAAAA,KAAA,UAA0BpC,MAAOkG,EAAS1F,GAAG8B,SAC1C4D,EAASC,gBADCD,EAAS1F,gBAQ9B4B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UACxDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,SAAC,iCAE/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,uBAAsBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGRF,EAAAA,EAAAA,KAAA,SAAAE,SACG7H,EAAST,cAAckG,KAAI,CAACkG,EAAKtG,KAChCyC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKxC,EAAQ,KACbsC,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmE,UAAU,eACVrC,MAAOoG,EAAIhM,kBACXmJ,SAAWhD,GAAMV,GAA0BC,EAAO,oBAAqBS,EAAEE,OAAOT,YAGpFoC,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmE,UAAU,eACVrC,MAAOoG,EAAIlM,gBACXqJ,SAAWhD,GAAMV,GAA0BC,EAAO,kBAAmBS,EAAEE,OAAOT,YAGlFoC,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmE,UAAU,eACViB,YAAY,OACZtD,MAAOoG,EAAIjM,eACXoJ,SAAWhD,GAAMV,GAA0BC,EAAO,iBAAkBS,EAAEE,OAAOT,YAGjFuC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmE,UAAU,eACVkB,SAAWhD,GAAMV,GAA0BC,EAAO,WAAYS,EAAEE,OAAO6E,MAAM,IAC7ED,OAAO,yBAERe,EAAI/L,UAAoC,kBAAjB+L,EAAI/L,WAC1BkI,EAAAA,EAAAA,MAAA,SAAOF,UAAU,aAAYC,SAAA,CAAC,iBAAe8D,EAAI/L,SAASyH,MAAM,KAAKyD,MAAM1E,QAAQ,QAAS,WAGhGuB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,UACElE,KAAK,SACLmE,UAAU,iBACVgE,QAASA,IA51BXvG,KAC1BpF,GAAYuF,IAAI,IACXA,EACHjG,cAAeiG,EAAKjG,cAAcsM,QAAO,CAACC,EAAGnG,IAAMA,IAAMN,OACxD,EAw1BwC0G,CAAmB1G,GAAOwC,UAEzCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBA5CVvC,WAmDfsC,EAAAA,EAAAA,KAAA,UAAQlE,KAAK,SAASmE,UAAU,kBAAkBgE,QA91B3C9F,IACvBA,EAAEoC,iBACFjI,GAAYuF,IAAI,IACXA,EACHjG,cAAe,IACViG,EAAKjG,cACR,CACEC,wBAAyB,KACzBC,gBAAiB,GACjBC,eAAgB,GAChBC,kBAAmB,GACnBC,SAAU,UAGb,EAg1BwFiI,SAAC,yBAQpFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UACxDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,SAAC,0BAE/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,uBAAsBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGRF,EAAAA,EAAAA,KAAA,SAAAE,SACG7H,EAASH,SAAS4F,KAAI,CAACkG,EAAKtG,KAC3ByC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKxC,EAAQ,KACbsC,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmE,UAAU,eACVrC,MAAOoG,EAAI5L,aACX+I,SAAWhD,GAAMF,GAAqBP,EAAO,eAAgBS,EAAEE,OAAOT,YAG1EuC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmE,UAAU,eACVkB,SAAWhD,GAAMF,GAAqBP,EAAO,WAAYS,EAAEE,OAAO6E,MAAM,IACxED,OAAO,yBAERe,EAAI/L,UAAoC,kBAAjB+L,EAAI/L,WAC1BkI,EAAAA,EAAAA,MAAA,SAAOF,UAAU,aAAYC,SAAA,CAAC,iBAAe8D,EAAI/L,SAASyH,MAAM,KAAKyD,MAAM1E,QAAQ,QAAS,WAGhGuB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,UAAQlE,KAAK,SAASmE,UAAU,iBAAiBgE,QAASA,IAx2B3DvG,KACzBpF,GAAYuF,IAAI,IACXA,EACH3F,SAAU2F,EAAK3F,SAASgM,QAAO,CAACC,EAAGnG,IAAMA,IAAMN,OAC9C,EAo2BuF2G,CAAkB3G,GAAOwC,UACvFF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAvBVvC,WA8BfsC,EAAAA,EAAAA,KAAA,UAAQlE,KAAK,SAASmE,UAAU,kBAAkBgE,QA33B5C9F,IACtBA,EAAEoC,iBACFjI,GAAYuF,IAAI,IACXA,EACH3F,SAAU,IACL2F,EAAK3F,SACR,CAAEC,mBAAoB,KAAMC,aAAc,GAAIH,SAAU,UAEzD,EAm3BuFiI,SAAC,yBAQnFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uDAAsDC,SAAA,EACnEF,EAAAA,EAAAA,KAAA,UACElE,KAAK,SAASmE,UAAU,uBAAsBC,SAC7CxH,EAAkB,SAAW,UAEhCsH,EAAAA,EAAAA,KAAA,UAAQlE,KAAK,SAASmE,UAAU,iBAAiBgE,QAASlF,GAAUmB,SAAC,kBA1kBzEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EAExBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmE,UAAU,eACViB,YAAY,gBACZtD,MAAOhD,EACPuG,SAAWhD,GAAMtD,EAAgBsD,EAAEE,OAAOT,YAG9CoC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,SACElE,KAAK,OACLmE,UAAU,eACViB,YAAY,gBACZtD,MAAO9C,EACPqG,SAAWhD,GAAMpD,EAAcoD,EAAEE,OAAOT,YAG5CoC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,wBAAwBgE,QA5PzCK,KACnB,MAAMC,EAAYzJ,EAAW0J,cACvBC,EAAW7L,EAAUsL,QAAOQ,IAChC,MAAMC,EAAW,GAAGD,EAAIhO,aAAagO,EAAI/N,cAAc+N,EAAI9N,WAAW4N,cACtE,OACoB,KAAjB5J,GAAuB8J,EAAIrN,SAASuN,SAAShK,MAC9B,KAAfE,GAAqB6J,EAASC,SAASL,GAAW,IAGvD5J,EAAqB8J,EAAS,EAmPoDvE,SAAC,cAEnEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,wBAAwBgE,QAnPxCY,KACpBlK,EAAqB/B,GACrBiC,EAAgB,IAChBE,EAAc,GAAG,EAgPkEmF,SAAC,mBAItEC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,uBAAsBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAGRF,EAAAA,EAAAA,KAAA,SAAAE,SACGxF,EAAkBsB,OAAS,EAC1B6C,GAAaf,KAAI,CAACgH,EAAUpH,KAC1ByC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SA9oBL,GA8oBWhF,EAAc,GAAoBwC,EAAQ,KAChDyC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAK4E,EAASpO,UAAU,IAAEoO,EAASnO,WAAW,IAAEmO,EAASlO,aACzDoJ,EAAAA,EAAAA,KAAA,MAAAE,SAAK4E,EAASlD,UACd5B,EAAAA,EAAAA,KAAA,MAAAE,SAAK4E,EAASjO,OACdmJ,EAAAA,EAAAA,KAAA,MAAAE,SAAK4E,EAASzN,YACd2I,EAAAA,EAAAA,KAAA,MAAAE,SAAK4E,EAASC,gBACd/E,EAAAA,EAAAA,KAAA,MAAAE,SAAK4E,EAASzB,QACdrD,EAAAA,EAAAA,KAAA,MAAAE,SACuB,MAApB4E,EAASvI,QACRyD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAEbD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4CAGjBD,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,UACEC,UAAU,yBACVgE,QAASA,IA/WX9H,WAAqB,IAAD6I,EAAAC,EAC9CtM,EAAmBmM,GACnBrM,GAAY,GACZU,EAAe2L,EAASI,YAExB,MAAMC,EAAc,IACf5O,EACHC,eAAgBsO,EAAStO,gBAAkB,KAC3CC,eAAgBqO,EAASrO,gBAAkB,KAC3CC,UAAWoO,EAASpO,WAAa,GACjCC,WAAYmO,EAASnO,YAAc,GACnCC,SAAUkO,EAASlO,UAAY,GAC/BC,IAAKiO,EAASjO,KAAO,GACrBC,SAAUgO,EAAShO,UAAY,GAC/BC,SAAU+N,EAAS/N,UAAY,GAC/BC,UAAW8N,EAAS9N,WAAa,GACjCC,QAAS6N,EAAS7N,SAAW,GAC7BC,WAAY4N,EAAS5N,YAAc,GACnCC,KAAM2N,EAAS3N,MAAQ,GACvBC,QAAS0N,EAAS1N,SAAW,GAC7BC,SAAUyN,EAASzN,UAAY,GAC/BC,mBAAoBwN,EAAS/B,sBAAwB,GACrDxL,eAAgBuN,EAASvN,gBAAkB,GAC3CC,iBAAkBsN,EAAStN,kBAAoB,GAC/CC,eAAgBqN,EAASrN,gBAAkB,GAC3CC,OAAQoN,EAASpN,QAAU,GAC3BC,SAAUmN,EAASnN,SAAWmN,EAASnN,SAASmH,MAAM,EAAG,IAAM,IAItC,QAA3BkG,EAAIF,EAASM,sBAAc,IAAAJ,GAAvBA,EAAyBhJ,SAC3BmJ,EAAYvN,cAAgBkN,EAASM,eAAetH,KAAKuH,IAAC,CACxDxN,wBAAyBwN,EAAExN,wBAC3BC,gBAAiBuN,EAAEvN,iBAAmB,GACtCC,eAAgBsN,EAAEtN,gBAAkB,GACpCC,kBAAmBqN,EAAErN,mBAAqB,GAC1CC,SAAUoN,EAAEpN,UAAY,UAIN,QAAtBgN,EAAIH,EAASQ,iBAAS,IAAAL,GAAlBA,EAAoBjJ,SACtBmJ,EAAYjN,SAAW4M,EAASQ,UAAUxH,KAAKyH,IAAC,CAC9CpN,mBAAoBoN,EAAEpN,mBACtBC,aAAcmN,EAAEnN,cAAgB,GAChCH,SAAUsN,EAAEtN,UAAY,UAI5BK,EAAY6M,GAERL,EAAS9N,kBAEL8F,GAAegI,EAAS9N,WAE1B8N,EAAS7N,eACLgG,GAAkB6H,EAAS7N,SAIrC,EAoT2CuO,CAAoBV,GACnCnD,SAA8B,MAApBmD,EAASvI,OAAe2D,UAElCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBArBVvC,MA0BRsC,EAAAA,EAAAA,KAAA,MAAAE,UACHF,EAAAA,EAAAA,KAAA,MAAIyF,QAAQ,IAAIxF,UAAU,0BAAyBC,SAAC,4BAQ1DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yDAAwDC,SAAA,EACrEF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,QACEhF,EAAY,OAAKwD,GAAmB,qBAAmBhE,EAAkBsB,aAGnFmE,EAAAA,EAAAA,MAAA,MAAIF,UAAU,kBAAiBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIC,UAAW,cAA6B,IAAhB/E,EAAoB,WAAa,IAAKgF,UAChEF,EAAAA,EAAAA,KAAA,UACEC,UAAU,YACVgE,QAASA,IAAM9I,EAAeD,EAAc,GAC5CyG,SAA0B,IAAhBzG,EAAkBgF,SAC7B,oBA/SEwF,MACvB,MAAMC,EAAc,GAEpB,IAAIC,EAAYjH,KAAKkH,IAAI,EAAG3K,EAAcyD,KAAKmH,MAAMC,MACrD,MAAMC,EAAUrH,KAAKsH,IAAIvH,GAAoBkH,EAFrB,EAEmD,GAEvEI,EAAUJ,EAAYG,IACxBH,EAAYjH,KAAKkH,IAAI,EAAGG,EALF,EAK8B,IAGlDJ,EAAY,IACdD,EAAYO,KAAK,GACbN,EAAY,GAAGD,EAAYO,KAAK,QAGtC,IAAK,IAAIlI,EAAI4H,EAAW5H,GAAKgI,EAAShI,IACpC2H,EAAYO,KAAKlI,GAQnB,OALIgI,EAAUtH,KACRsH,EAAUtH,GAAqB,GAAGiH,EAAYO,KAAK,OACvDP,EAAYO,KAAKxH,KAGZiH,EAAY7H,KAAI,CAACqI,EAAQzI,KAC9BsC,EAAAA,EAAAA,KAAA,MAAgBC,UAAW,cAAakG,IAAWjL,EAAc,SAAW,IAAKgF,SAC5D,kBAAXiG,GACNnG,EAAAA,EAAAA,KAAA,UAAQC,UAAU,YAAYgE,QAASA,IAAM9I,EAAegL,GAAQjG,SACjEiG,KAGHnG,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAEiG,KANjCzI,IAST,EAiRiBgI,IACD1F,EAAAA,EAAAA,KAAA,MAAIC,UAAW,cAAa/E,IAAgBwD,GAAqB,WAAa,IAAKwB,UACjFF,EAAAA,EAAAA,KAAA,UACEC,UAAU,YACVgE,QAASA,IAAM9I,EAAeD,EAAc,GAC5CyG,SAAUzG,IAAgBwD,GAAmBwB,SAC9C,oBAKLC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,SACElE,KAAK,SACLmK,IAAI,IACJJ,IAAKnH,GACLd,MAAO5C,EACPmG,SAAWhD,GAAMlD,EAAakD,EAAEE,OAAOT,OACvCsD,YAAY,aACZjB,UAAU,uBAEZD,EAAAA,EAAAA,KAAA,UACEC,UAAU,kBACVgE,QArSOmC,KAC3B,MAAMC,EAAa5E,SAASzG,EAAW,IACnCqL,EAAa,GAAKA,GAAc3H,GAClCvD,EAAekL,GAEfC,MAAM,oCACR,EA+RkDpG,SAC/B,0BAqdb,C","sources":["Views/Admin/Employee/ViewSearchEmployee/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport placeholderImage from \"../../../../assets/images/placeholder.jpg\";\r\nimport { COUNTRYAPI, DISTRICTAPI, STATEAPI, DEPARTMENT, GENDERAPI, ALL_ROLE, IDENTITY_TYPE, API_HOST, EMPLOYMENT_TYPE, EMPLOYEE_TYPE, EMPLOYEE_REGISTRATION } from \"../../../../config/apiConfig\";\r\nimport { getRequest, putRequest, postRequestWithFormData } from \"../../../../service/apiService\";\r\nimport Popup from \"../../../../Components/popup\";\r\nimport LoadingScreen from \"../../../../Components/Loading\";\r\n\r\nconst ViewSearchEmployee = () => {\r\n  const initialFormData = {\r\n    profilePicName: null,\r\n    idDocumentName: null,\r\n    firstName: \"\",\r\n    middleName: \"\",\r\n    lastName: \"\",\r\n    dob: \"\",\r\n    genderId: \"\",\r\n    address1: \"\",\r\n    countryId: \"\",\r\n    stateId: \"\",\r\n    districtId: \"\",\r\n    city: \"\",\r\n    pincode: \"\",\r\n    mobileNo: \"\",\r\n    identificationType: \"\",\r\n    registrationNo: \"\",\r\n    employmentTypeId: \"\",\r\n    employeeTypeId: \"\",\r\n    roleId: \"\",\r\n    fromDate: \"\",\r\n    qualification: [{ employeeQualificationId: 1, institutionName: \"\", completionYear: \"\", qualificationName: \"\", filePath: null }],\r\n    document: [{ employeeDocumentId: 1, documentName: \"\", filePath: null }],\r\n  };\r\n\r\n  const [formData, setFormData] = useState(initialFormData);\r\n  const mlenght = 15;\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingEmployee, setEditingEmployee] = useState(null);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [popup, setPopup] = useState(\"\");\r\n  const [popupMessage, setPopupMessage] = useState(\"\");\r\n  const [empUpdateId, setEmpUpdateId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [countryData, setCountryData] = useState([]);\r\n  const [stateData, setStateData] = useState([]);\r\n  const [districtData, setDistrictData] = useState([]);\r\n  const [genderData, setGenderData] = useState([]);\r\n  const [countryIds, setCountryIds] = useState(\"\");\r\n  const [stateIds, setStateIds] = useState(\"\");\r\n  const [idTypeData, setIdTypeData] = useState([]);\r\n  const [roleData, setRoleData] = useState([]);\r\n  const [employeeTypeData, setEmployeeTypeData] = useState([]);\r\n  const [employmentTypeData, setEmploymentTypeData] = useState([]);\r\n  const [filteredEmployees, setFilteredEmployees] = useState([]);\r\n  const [searchMobile, setSearchMobile] = useState(\"\");\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [pageInput, setPageInput] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhYmNAZ21haWwuY29tIiwiaG9zcGl0YWxJZCI6MSwiZW1wbG95ZWVJZCI6MSwiZXhwIjoxNzQ1MjI2Nzg3LCJ1c2VySWQiOjQsImlhdCI6MTc0NDYyMTk4N30.7Rf_Bzy5bbvdWMXIXC6yuFo9u48i9peUyGd4bS0D5nb4ib8vRWWIsk5Uie0dIM6pVyGt0awYymUlAEDv0OeiLw\";\r\n\r\n  useEffect(() => {\r\n    fetchEmployeesData();\r\n    fetchCountryData();\r\n    fetchGenderData();\r\n    fetchIdTypeData();\r\n    fetchRoleData();\r\n    fetchEmployeeTypeData();\r\n    fetchEmploymentTypeData();\r\n  }, []);\r\n\r\n  const showPopup = (message, type = \"info\") => {\r\n    setPopupMessage({\r\n      message,\r\n      type,\r\n      onClose: () => {\r\n        setPopupMessage(null);\r\n      },\r\n    });\r\n  };\r\n\r\n  const fetchEmployeesData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${EMPLOYEE_REGISTRATION}/getAllEmployee`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setEmployees(data.response);\r\n        setFilteredEmployees(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setEmployees([]);\r\n        setFilteredEmployees([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Employees data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const fetchCountryData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${COUNTRYAPI}/getAllCountries/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setCountryData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setCountryData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching country data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStateData = async (countryIds) => {\r\n    setLoading(true);\r\n    try {\r\n      const GET_STATES = `${STATEAPI}/country/${countryIds}`;\r\n      const data = await getRequest(GET_STATES);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setStateData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setStateData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching state data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDistrictData = async (stateIds) => {\r\n    setLoading(true);\r\n    try {\r\n      const GET_CITIES = `${DISTRICTAPI}/state/${stateIds}`;\r\n      const data = await getRequest(GET_CITIES);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setDistrictData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setDistrictData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching city data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchGenderData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${GENDERAPI}/getAll/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setGenderData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setGenderData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Gender data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchIdTypeData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${IDENTITY_TYPE}/getAllIdentificationTypes/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setIdTypeData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setIdTypeData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching IdType data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchEmployeeTypeData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${EMPLOYEE_TYPE}/getAllUserType/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setEmployeeTypeData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setEmployeeTypeData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching EmployeeType data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchEmploymentTypeData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${EMPLOYMENT_TYPE}/getAllEmploymentType/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setEmploymentTypeData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setEmploymentTypeData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching EmploymentType data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchRoleData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(`${ALL_ROLE}/1`);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setRoleData(data.response);\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setRoleData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Role data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCountryChange = (id) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      countryId: id,\r\n      stateId: \"\",\r\n      districtId: \"\",\r\n    }));\r\n    fetchStateData(id);\r\n  };\r\n\r\n  const handleStateChange = (id) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      stateId: id,\r\n      districtId: \"\",\r\n    }));\r\n    fetchDistrictData(id);\r\n  };\r\n\r\n  const handleDistrictChange = (districtId) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      districtId: districtId,\r\n    }));\r\n  };\r\n\r\n  const handleGenderChange = (gendersId) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      genderId: gendersId,\r\n    }));\r\n  };\r\n\r\n  const handleEmploymentTypeChange = (emptTypeId) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      employmentTypeId: emptTypeId,\r\n    }));\r\n  };\r\n\r\n  const handleEmployeeTypeChange = (empTypeId) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      employeeTypeId: empTypeId,\r\n    }));\r\n  };\r\n\r\n  const handleRoleChange = (role) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      roleId: role,\r\n    }));\r\n  };\r\n\r\n  const handleIdTypeChange = (idTypeId) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      identificationType: idTypeId,\r\n    }));\r\n  };\r\n\r\n  const handleQualificationChange = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      qualification: prev.qualification.map((item, i) =>\r\n        i === index ? { ...item, [field]: value } : item\r\n      )\r\n    }));\r\n  };\r\n\r\n  const removeEducationRow = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      qualification: prev.qualification.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addEducationRow = (e) => {\r\n    e.preventDefault();\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      qualification: [\r\n        ...prev.qualification,\r\n        {\r\n          employeeQualificationId: null,\r\n          institutionName: \"\",\r\n          completionYear: \"\",\r\n          qualificationName: \"\",\r\n          filePath: null,\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n\r\n  const handleDocumentChange = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      document: prev.document.map((item, i) =>\r\n        i === index ? { ...item, [field]: value } : item\r\n      )\r\n    }));\r\n  };\r\n\r\n  const addDocumentRow = (e) => {\r\n    e.preventDefault();\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      document: [\r\n        ...prev.document,\r\n        { employeeDocumentId: null, documentName: \"\", filePath: null },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const removeDocumentRow = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      document: prev.document.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const handleAnotherAction = async (employee) => {\r\n    setEditingEmployee(employee);\r\n    setShowForm(true);\r\n    setEmpUpdateId(employee.employeeId);\r\n    // Set basic form data\r\n    const newFormData = {\r\n      ...initialFormData,\r\n      profilePicName: employee.profilePicName || null,\r\n      idDocumentName: employee.idDocumentName || null,\r\n      firstName: employee.firstName || \"\",\r\n      middleName: employee.middleName || \"\",\r\n      lastName: employee.lastName || \"\",\r\n      dob: employee.dob || \"\",\r\n      genderId: employee.genderId || \"\",\r\n      address1: employee.address1 || \"\",\r\n      countryId: employee.countryId || \"\",\r\n      stateId: employee.stateId || \"\",\r\n      districtId: employee.districtId || \"\",\r\n      city: employee.city || \"\",\r\n      pincode: employee.pincode || \"\",\r\n      mobileNo: employee.mobileNo || \"\",\r\n      identificationType: employee.identificationTypeId || \"\",\r\n      registrationNo: employee.registrationNo || \"\",\r\n      employmentTypeId: employee.employmentTypeId || \"\",\r\n      employeeTypeId: employee.employeeTypeId || \"\",\r\n      roleId: employee.roleId || \"\",\r\n      fromDate: employee.fromDate ? employee.fromDate.slice(0, 10) : \"\",\r\n    };\r\n\r\n    // Set qualifications and documents\r\n    if (employee.qualifications?.length) {\r\n      newFormData.qualification = employee.qualifications.map((q) => ({\r\n        employeeQualificationId: q.employeeQualificationId,\r\n        institutionName: q.institutionName || \"\",\r\n        completionYear: q.completionYear || \"\",\r\n        qualificationName: q.qualificationName || \"\",\r\n        filePath: q.filePath || null,\r\n      }));\r\n    }\r\n\r\n    if (employee.documents?.length) {\r\n      newFormData.document = employee.documents.map((d) => ({\r\n        employeeDocumentId: d.employeeDocumentId,\r\n        documentName: d.documentName || \"\",\r\n        filePath: d.filePath || null,\r\n      }));\r\n    }\r\n\r\n    setFormData(newFormData);\r\n\r\n    if (employee.countryId) {\r\n\r\n      await fetchStateData(employee.countryId);\r\n\r\n      if (employee.stateId) {\r\n        await fetchDistrictData(employee.stateId);\r\n\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [id]: value }));\r\n  };\r\n\r\n  const handleInputMobileChange = (e) => {\r\n    const { id, value } = e.target;\r\n    const numericValue = value.replace(/\\D/g, '');\r\n    setFormData((prevData) => ({ ...prevData, [id]: numericValue }));\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const lowerName = searchName.toLowerCase();\r\n    const filtered = employees.filter(emp => {\r\n      const fullName = `${emp.firstName} ${emp.middleName} ${emp.lastName}`.toLowerCase();\r\n      return (\r\n        (searchMobile === \"\" || emp.mobileNo.includes(searchMobile)) &&\r\n        (searchName === \"\" || fullName.includes(lowerName))\r\n      );\r\n    });\r\n    setFilteredEmployees(filtered);\r\n  };\r\n\r\n  const handleShowAll = () => {\r\n    setFilteredEmployees(employees);\r\n    setSearchMobile(\"\");\r\n    setSearchName(\"\");\r\n  };\r\n\r\n  const filteredTotalPages = Math.ceil(filteredEmployees.length / itemsPerPage);\r\n\r\n  const renderPagination = () => {\r\n    const pageNumbers = [];\r\n    const maxVisiblePages = 5;\r\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\r\n    const endPage = Math.min(filteredTotalPages, startPage + maxVisiblePages - 1);\r\n\r\n    if (endPage - startPage < maxVisiblePages - 1) {\r\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n    }\r\n\r\n    if (startPage > 1) {\r\n      pageNumbers.push(1);\r\n      if (startPage > 2) pageNumbers.push(\"...\");\r\n    }\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    if (endPage < filteredTotalPages) {\r\n      if (endPage < filteredTotalPages - 1) pageNumbers.push(\"...\");\r\n      pageNumbers.push(filteredTotalPages);\r\n    }\r\n\r\n    return pageNumbers.map((number, index) => (\r\n      <li key={index} className={`page-item ${number === currentPage ? \"active\" : \"\"}`}>\r\n        {typeof number === \"number\" ? (\r\n          <button className=\"page-link\" onClick={() => setCurrentPage(number)}>\r\n            {number}\r\n          </button>\r\n        ) : (\r\n          <span className=\"page-link disabled\">{number}</span>\r\n        )}\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  const handlePageNavigation = () => {\r\n    const pageNumber = parseInt(pageInput, 10);\r\n    if (pageNumber > 0 && pageNumber <= filteredTotalPages) {\r\n      setCurrentPage(pageNumber);\r\n    } else {\r\n      alert(\"Please enter a valid page number.\");\r\n    }\r\n  };\r\n\r\n  const currentItems = filteredEmployees.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n\r\n  const resetForm = () => {\r\n    setFormData(initialFormData);\r\n    setShowForm(false);\r\n    setEditingEmployee(null);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const requiredFields = [\r\n      'firstName', 'lastName', 'dob', 'genderId', 'address1',\r\n      'countryId', 'stateId', 'districtId', 'city', 'pincode',\r\n      'mobileNo', 'identificationType', 'registrationNo'\r\n    ];\r\n\r\n    for (const field of requiredFields) {\r\n      if (!formData[field]) {\r\n        showPopup(`Please fill in the required field: ${field.replace(/([A-Z])/g, ' $1').replace(/^./, (str) => str.toUpperCase())}`, \"error\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (!formData.profilePicName && !editingEmployee?.profilePicName) {\r\n      showPopup(\"Profile picture is required\", \"error\");\r\n      return false;\r\n    }\r\n\r\n    if (!formData.idDocumentName && !editingEmployee?.idDocumentName) {\r\n      showPopup(\"ID document is required\", \"error\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const prepareFormData = () => {\r\n    if (!validateForm()) {\r\n      return null;\r\n    }\r\n\r\n    const formDataToSend = new FormData();\r\n\r\n    // Basic info fields\r\n    formDataToSend.append('firstName', formData.firstName);\r\n    formDataToSend.append('lastName', formData.lastName);\r\n    if (formData.middleName) formDataToSend.append('middleName', formData.middleName);\r\n    formDataToSend.append('dob', new Date(formData.dob).toISOString().split('T')[0]);\r\n    formDataToSend.append('genderId', formData.genderId);\r\n    formDataToSend.append('address1', formData.address1);\r\n    formDataToSend.append('countryId', formData.countryId);\r\n    formDataToSend.append('stateId', formData.stateId);\r\n    formDataToSend.append('districtId', formData.districtId);\r\n    formDataToSend.append('city', formData.city);\r\n    formDataToSend.append('pincode', formData.pincode);\r\n    formDataToSend.append('mobileNo', formData.mobileNo);\r\n    formDataToSend.append('registrationNo', formData.registrationNo);\r\n    formDataToSend.append('identificationType', formData.identificationType);\r\n    formDataToSend.append('employeeTypeId', formData.employeeTypeId);\r\n    formDataToSend.append('employmentTypeId', formData.employmentTypeId);\r\n    formDataToSend.append('roleId', formData.roleId);\r\n    formDataToSend.append('fromDate', new Date(formData.fromDate).toISOString());\r\n\r\n    if (formData.deprtId) {\r\n      formDataToSend.append('departmentId', formData.deprtId);\r\n    }\r\n\r\n    if (formData.profilePicName instanceof File) {\r\n      formDataToSend.append('profilePicName', formData.profilePicName);\r\n    }\r\n\r\n    if (formData.idDocumentName instanceof File) {\r\n      formDataToSend.append('idDocumentName', formData.idDocumentName);\r\n    }\r\n\r\n    formData.qualification.forEach((qual, index) => {\r\n      formDataToSend.append(`qualification[${index}].institutionName`, qual.institutionName);\r\n      formDataToSend.append(`qualification[${index}].completionYear`, qual.completionYear);\r\n      formDataToSend.append(`qualification[${index}].qualificationName`, qual.qualificationName);\r\n\r\n      if (qual.employeeQualificationId && qual.employeeQualificationId !== 1) {\r\n        formDataToSend.append(`qualification[${index}].employeeQualificationId`, qual.employeeQualificationId);\r\n      }\r\n\r\n      if (qual.filePath instanceof File) {\r\n        formDataToSend.append(`qualification[${index}].filePath`, qual.filePath);\r\n      }\r\n    });\r\n\r\n    formData.document.forEach((doc, index) => {\r\n      formDataToSend.append(`document[${index}].documentName`, doc.documentName);\r\n\r\n      if (doc.employeeDocumentId && doc.employeeDocumentId !== 1) {\r\n        formDataToSend.append(`document[${index}].employeeDocumentId`, doc.employeeDocumentId);\r\n      }\r\n\r\n      if (doc.filePath instanceof File) {\r\n        formDataToSend.append(`document[${index}].filePath`, doc.filePath);\r\n      }\r\n    });\r\n\r\n    return formDataToSend;\r\n  };\r\n\r\n\r\n  const handleSave = async () => {\r\n    const formDataToSend = prepareFormData();\r\n    if (!formDataToSend) return;\r\n    console.log(\"Form data to send:\", formDataToSend);\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_HOST}${EMPLOYEE_REGISTRATION}/employee/${empUpdateId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Accept': 'application/json'\r\n        },\r\n        body: formDataToSend\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        showPopup(\"Employee updated successfully\", \"success\");\r\n        resetForm();\r\n      } else {\r\n        showPopup(`Error: ${data.message || 'Failed to update employee'}`, \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating employee:\", error);\r\n      showPopup(\"Error submitting form. Please try again.\", \"error\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"body d-flex py-3\">\r\n      <div className=\"container-xxl\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"border-0 mb-4\">\r\n            {popupMessage && (\r\n              <Popup\r\n                message={popupMessage.message}\r\n                type={popupMessage.type}\r\n                onClose={popupMessage.onClose}\r\n              />\r\n            )}\r\n            {loading && <LoadingScreen />}\r\n\r\n            <div className=\"card-header py-3 bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n              <h3 className=\"fw-bold mb-0\">Employee List</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {!showForm ? (\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"card shadow\">\r\n                <div className=\"card-body\">\r\n                  {/* Search Section */}\r\n                  <div className=\"row mb-4\">\r\n                    <div className=\"col-md-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Mobile Number\"\r\n                        value={searchMobile}\r\n                        onChange={(e) => setSearchMobile(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Employee Name\"\r\n                        value={searchName}\r\n                        onChange={(e) => setSearchName(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <button className=\"btn btn-primary w-100\" onClick={handleSearch}>Search</button>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <button className=\"btn btn-warning w-100\" onClick={handleShowAll}>Show All</button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <table className=\"table table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>S.N.</th>\r\n                        <th>Employee Name</th>\r\n                        <th>Gender</th>\r\n                        <th>Date Of Birth</th>\r\n                        <th>Mobile No</th>\r\n                        <th>Type Of Employee</th>\r\n                        <th>Role</th>\r\n                        <th>Status</th>\r\n                        <th>Edit</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredEmployees.length > 0 ? (\r\n                        currentItems.map((employee, index) => (\r\n                          <tr key={index}>\r\n                            <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\r\n                            <td>{employee.firstName} {employee.middleName} {employee.lastName}</td>\r\n                            <td>{employee.gender}</td>\r\n                            <td>{employee.dob}</td>\r\n                            <td>{employee.mobileNo}</td>\r\n                            <td>{employee.employeeType}</td>\r\n                            <td>{employee.role}</td>\r\n                            <td>\r\n                              {employee.status === \"A\" ? (\r\n                                <i className=\"fa fa-check-circle text-success fa-2x\"></i>\r\n                              ) : (\r\n                                <i className=\"fa fa-times-circle fa-2x text-danger\"></i>\r\n                              )}\r\n                            </td>\r\n                            <td>\r\n                              <button\r\n                                className=\"btn btn-sm btn-success\"\r\n                                onClick={() => handleAnotherAction(employee)}\r\n                                disabled={employee.status !== \"S\"}\r\n                              >\r\n                                <i className=\"fa fa-pencil\"></i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))\r\n                      ) : (<tr>\r\n                        <td colSpan=\"7\" className=\"text-center text-danger\">\r\n                          No Record Found\r\n                        </td>\r\n                      </tr>)}\r\n\r\n                    </tbody>\r\n                  </table>\r\n\r\n                  <nav className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                    <div>\r\n                      <span>\r\n                        Page {currentPage} of {filteredTotalPages} | Total Records: {filteredEmployees.length}\r\n                      </span>\r\n                    </div>\r\n                    <ul className=\"pagination mb-0\">\r\n                      <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n                        <button\r\n                          className=\"page-link\"\r\n                          onClick={() => setCurrentPage(currentPage - 1)}\r\n                          disabled={currentPage === 1}\r\n                        >\r\n                          &laquo; Previous\r\n                        </button>\r\n                      </li>\r\n                      {renderPagination()}\r\n                      <li className={`page-item ${currentPage === filteredTotalPages ? \"disabled\" : \"\"}`}>\r\n                        <button\r\n                          className=\"page-link\"\r\n                          onClick={() => setCurrentPage(currentPage + 1)}\r\n                          disabled={currentPage === filteredTotalPages}\r\n                        >\r\n                          Next &raquo;\r\n                        </button>\r\n                      </li>\r\n                    </ul>\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        max={filteredTotalPages}\r\n                        value={pageInput}\r\n                        onChange={(e) => setPageInput(e.target.value)}\r\n                        placeholder=\"Go to page\"\r\n                        className=\"form-control me-2\"\r\n                      />\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={handlePageNavigation}\r\n                      >\r\n                        Go\r\n                      </button>\r\n                    </div>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={(e) => {\r\n            e.preventDefault();\r\n            handleSave();\r\n          }} className=\"forms row\">\r\n            <div className=\"g-3 row\">\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">First Name *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  id=\"firstName\"\r\n                  placeholder=\"First Name\"\r\n                  onChange={handleInputChange}\r\n                  value={formData.firstName}\r\n                  maxLength={mlenght}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Middle Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"middleName\"\r\n                  placeholder=\"Middle Name\"\r\n                  onChange={handleInputChange}\r\n                  value={formData.middleName}\r\n                  maxLength={mlenght}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Last Name *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  id=\"lastName\"\r\n                  placeholder=\"Last Name\"\r\n                  onChange={handleInputChange}\r\n                  value={formData.lastName}\r\n                  maxLength={mlenght}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Date of Birth *</label>\r\n                <input\r\n                  type=\"date\"\r\n                  required\r\n                  id=\"dob\"\r\n                  value={formData.dob}\r\n                  className=\"form-control\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Gender *</label>\r\n                <select\r\n                  className=\"form-select\"\r\n                  style={{ paddingRight: \"40px\" }}\r\n                  value={formData.genderId}\r\n                  onChange={(e) =>\r\n                    handleGenderChange(parseInt(e.target.value, 10))\r\n                  }\r\n                  disabled={loading}\r\n                >\r\n                  <option value=\"\">Select Gender</option>\r\n                  {genderData.map((gender) => (\r\n                    <option key={gender.id} value={gender.id}>\r\n                      {gender.genderName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Address *</label>\r\n                <textarea\r\n                  required\r\n                  id=\"address1\"\r\n                  value={formData.address1}\r\n                  className=\"form-control\"\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Address\"\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Country *</label>\r\n                <select\r\n                  className=\"form-select\"\r\n                  value={formData.countryId}\r\n                  onChange={(e) => {\r\n                    const selectedCountry = countryData.find(\r\n                      (country) => country.id.toString() === e.target.value\r\n                    );\r\n                    if (selectedCountry) {\r\n                      handleCountryChange(selectedCountry.id);\r\n                      setCountryIds(selectedCountry.id);\r\n                      fetchStateData(selectedCountry.id);\r\n                    }\r\n                  }}\r\n                  disabled={loading}\r\n                >\r\n                  <option value=\"\">Select Country</option>\r\n                  {countryData.map((country) => (\r\n                    <option key={country.id} value={country.id}>\r\n                      {country.countryName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">State *</label>\r\n                <select\r\n                  className=\"form-select\"\r\n                  value={formData.stateId}\r\n                  onChange={(e) => {\r\n                    const selectedState = stateData.find(\r\n                      (state) => state.id.toString() === e.target.value\r\n                    );\r\n                    if (selectedState) {\r\n                      handleStateChange(selectedState.id);\r\n                      setStateIds(selectedState.id);\r\n                      fetchDistrictData(selectedState.id);\r\n                    }\r\n                  }}\r\n                  disabled={loading || !formData.countryId}\r\n                >\r\n                  <option value=\"\">Select State</option>\r\n                  {stateData.map((state) => (\r\n                    <option key={state.id} value={state.id}>\r\n                      {state.stateName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">District *</label>\r\n                <select\r\n                  className=\"form-select\"\r\n                  value={formData.districtId}\r\n                  onChange={(e) => handleDistrictChange(e.target.value)}\r\n                  disabled={loading || !formData.stateId}\r\n                >\r\n                  <option value=\"\">Select District</option>\r\n                  {districtData.map((dist) => (\r\n                    <option key={dist.id} value={dist.id}>\r\n                      {dist.districtName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">City *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  id=\"city\"\r\n                  placeholder=\"City\"\r\n                  onChange={handleInputChange}\r\n                  value={formData.city}\r\n                  maxLength={mlenght}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Pincode *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  id=\"pincode\"\r\n                  placeholder=\"Pincode\"\r\n                  onChange={handleInputMobileChange}\r\n                  value={formData.pincode}\r\n                  maxLength={6}\r\n                  minLength={6}\r\n                  inputMode=\"numeric\"\r\n                  pattern=\"\\d*\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Mobile No. *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  id=\"mobileNo\"\r\n                  placeholder=\"Mobile No.\"\r\n                  onChange={handleInputMobileChange}\r\n                  value={formData.mobileNo}\r\n                  maxLength={10}\r\n                  minLength={10}\r\n                  inputMode=\"numeric\"\r\n                  pattern=\"\\d*\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">ID Type *</label>\r\n                <select\r\n                  className=\"form-select\"\r\n                  style={{ paddingRight: \"40px\" }}\r\n                  value={formData.identificationType}\r\n                  onChange={(e) =>\r\n                    handleIdTypeChange(parseInt(e.target.value, 10))\r\n                  }\r\n                  disabled={loading}\r\n                >\r\n                  <option value=\"\">Select ID Type</option>\r\n                  {idTypeData.map((idType) => (\r\n                    <option key={idType.identificationTypeId} value={idType.identificationTypeId}>\r\n                      {idType.identificationName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">ID Number *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  id=\"registrationNo\"\r\n                  placeholder=\"ID Number\"\r\n                  onChange={handleInputChange}\r\n                  value={formData.registrationNo}\r\n                  maxLength={mlenght}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">ID Upload (JPEG/PDF) *</label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"idDocumentName\"\r\n                  className=\"form-control mt-2\"\r\n                  accept=\".jpg,.jpeg,.png,.pdf\"\r\n                  onChange={(e) => setFormData({ ...formData, idDocumentName: e.target.files[0] })}\r\n                />\r\n                {editingEmployee?.idDocumentName && formData.idDocumentName && (\r\n                  <small className=\"text-muted\">Current file: {editingEmployee.idDocumentName.split('/').pop().replace(/^\\d+_/, '')}</small>\r\n                )}\r\n              </div>\r\n\r\n\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Role Name *</label>\r\n                <select\r\n                  className=\"form-select\"\r\n                  style={{ paddingRight: \"40px\" }}\r\n                  value={formData.roleId}\r\n                  onChange={(e) =>\r\n                    handleRoleChange(parseInt(e.target.value, 10))\r\n                  }\r\n                  disabled={loading}\r\n                >\r\n                  <option value=\"\">Select Role</option>\r\n                  {roleData.map((role) => (\r\n                    <option key={role.id} value={role.id}>\r\n                      {role.roleDesc}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Period of Employment From Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"fromDate\"\r\n                  value={formData.fromDate}\r\n                  className=\"form-control\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Type of Employee *</label>\r\n                <select\r\n                  className=\"form-select\"\r\n                  style={{ paddingRight: \"40px\" }}\r\n                  value={formData.employeeTypeId}\r\n                  onChange={(e) =>\r\n                    handleEmployeeTypeChange(parseInt(e.target.value, 10))\r\n                  }\r\n                  disabled={loading}\r\n                >\r\n                  <option value=\"\">Select Employee Type</option>\r\n                  {employeeTypeData.map((empType) => (\r\n                    <option key={empType.userTypeId} value={empType.userTypeId}>\r\n                      {empType.userTypeName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label className=\"form-label\">Type of Employment *</label>\r\n                <select\r\n                  className=\"form-select\"\r\n                  style={{ paddingRight: \"40px\" }}\r\n                  value={formData.employmentTypeId}\r\n                  onChange={(e) =>\r\n                    handleEmploymentTypeChange(parseInt(e.target.value, 10))\r\n                  }\r\n                  disabled={loading}\r\n                >\r\n                  <option value=\"\">Select Employment Type</option>\r\n                  {employmentTypeData.map((emptType) => (\r\n                    <option key={emptType.id} value={emptType.id}>\r\n                      {emptType.employmentType}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row mb-3 mt-4\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"card shadow mb-3\">\r\n                  <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                    <h6 className=\"fw-bold mb-0\">Educational Qualification</h6>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table className=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>S.No</th>\r\n                          <th>Degree</th>\r\n                          <th>Name of Institution</th>\r\n                          <th>Year of Completion</th>\r\n                          <th>File Upload</th>\r\n                          <th>Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {formData.qualification.map((row, index) => (\r\n                          <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={row.qualificationName}\r\n                                onChange={(e) => handleQualificationChange(index, \"qualificationName\", e.target.value)}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={row.institutionName}\r\n                                onChange={(e) => handleQualificationChange(index, \"institutionName\", e.target.value)}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"YYYY\"\r\n                                value={row.completionYear}\r\n                                onChange={(e) => handleQualificationChange(index, \"completionYear\", e.target.value)}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <input\r\n                                type=\"file\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => handleQualificationChange(index, \"filePath\", e.target.files[0])}\r\n                                accept=\".pdf,.jpg,.jpeg,.png\"\r\n                              />\r\n                              {row.filePath && typeof row.filePath === \"string\" && (\r\n                                <small className=\"text-muted\">Current file: {row.filePath.split('/').pop().replace(/^\\d+_/, '')}</small>\r\n                              )}\r\n                            </td>\r\n                            <td>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => removeEducationRow(index)}\r\n                              >\r\n                                <i className=\"icofont-close\"></i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                    <button type=\"button\" className=\"btn btn-success\" onClick={addEducationRow}>\r\n                      Add Row +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"card shadow mb-3\">\r\n                  <div className=\"card-header bg-light border-bottom-1 py-3\">\r\n                    <h6 className=\"fw-bold mb-0\">Required Documents</h6>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table className=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>S.No</th>\r\n                          <th>Document Name</th>\r\n                          <th>File Upload</th>\r\n                          <th>Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {formData.document.map((row, index) => (\r\n                          <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={row.documentName}\r\n                                onChange={(e) => handleDocumentChange(index, \"documentName\", e.target.value)}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <input\r\n                                type=\"file\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => handleDocumentChange(index, \"filePath\", e.target.files[0])}\r\n                                accept=\".pdf,.jpg,.jpeg,.png\"\r\n                              />\r\n                              {row.filePath && typeof row.filePath === \"string\" && (\r\n                                <small className=\"text-muted\">Current file: {row.filePath.split('/').pop().replace(/^\\d+_/, '')}</small>\r\n                              )}\r\n                            </td>\r\n                            <td>\r\n                              <button type=\"button\" className=\"btn btn-danger\" onClick={() => removeDocumentRow(index)}>\r\n                                <i className=\"icofont-close\"></i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                    <button type=\"button\" className=\"btn btn-success\" onClick={addDocumentRow}>\r\n                      Add Row +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-12 d-flex justify-content-end mt-2\">\r\n              <button\r\n                type=\"submit\" className=\"btn btn-primary me-2\">\r\n                {editingEmployee ? \"Update\" : \"Save\"}\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-danger\" onClick={resetForm}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewSearchEmployee;"],"names":["ViewSearchEmployee","initialFormData","profilePicName","idDocumentName","firstName","middleName","lastName","dob","genderId","address1","countryId","stateId","districtId","city","pincode","mobileNo","identificationType","registrationNo","employmentTypeId","employeeTypeId","roleId","fromDate","qualification","employeeQualificationId","institutionName","completionYear","qualificationName","filePath","document","employeeDocumentId","documentName","formData","setFormData","useState","showForm","setShowForm","editingEmployee","setEditingEmployee","employees","setEmployees","popup","setPopup","popupMessage","setPopupMessage","empUpdateId","setEmpUpdateId","loading","setLoading","countryData","setCountryData","stateData","setStateData","districtData","setDistrictData","genderData","setGenderData","countryIds","setCountryIds","stateIds","setStateIds","idTypeData","setIdTypeData","roleData","setRoleData","employeeTypeData","setEmployeeTypeData","employmentTypeData","setEmploymentTypeData","filteredEmployees","setFilteredEmployees","searchMobile","setSearchMobile","searchName","setSearchName","pageInput","setPageInput","currentPage","setCurrentPage","useEffect","fetchEmployeesData","fetchCountryData","fetchGenderData","fetchIdTypeData","fetchRoleData","fetchEmployeeTypeData","fetchEmploymentTypeData","showPopup","message","type","arguments","length","undefined","onClose","async","data","getRequest","EMPLOYEE_REGISTRATION","status","Array","isArray","response","console","error","COUNTRYAPI","fetchStateData","GET_STATES","STATEAPI","fetchDistrictData","GET_CITIES","DISTRICTAPI","GENDERAPI","IDENTITY_TYPE","EMPLOYEE_TYPE","EMPLOYMENT_TYPE","ALL_ROLE","handleQualificationChange","index","field","value","prev","map","item","i","handleDocumentChange","handleInputChange","e","id","target","prevData","handleInputMobileChange","numericValue","replace","filteredTotalPages","Math","ceil","currentItems","slice","resetForm","prepareFormData","validateForm","requiredFields","str","toUpperCase","formDataToSend","FormData","append","Date","toISOString","split","deprtId","File","forEach","qual","doc","_jsx","className","children","_jsxs","Popup","LoadingScreen","onSubmit","preventDefault","log","fetch","API_HOST","method","headers","body","json","ok","handleSave","required","placeholder","onChange","maxLength","style","paddingRight","handleGenderChange","gendersId","parseInt","prevState","disabled","gender","genderName","selectedCountry","find","country","toString","countryName","selectedState","state","stateName","handleDistrictChange","dist","districtName","minLength","inputMode","pattern","handleIdTypeChange","idTypeId","idType","identificationTypeId","identificationName","accept","files","pop","handleRoleChange","role","roleDesc","handleEmployeeTypeChange","empTypeId","empType","userTypeId","userTypeName","handleEmploymentTypeChange","emptTypeId","emptType","employmentType","row","onClick","filter","_","removeEducationRow","removeDocumentRow","handleSearch","lowerName","toLowerCase","filtered","emp","fullName","includes","handleShowAll","employee","employeeType","_employee$qualificati","_employee$documents","employeeId","newFormData","qualifications","q","documents","d","handleAnotherAction","colSpan","renderPagination","pageNumbers","startPage","max","floor","maxVisiblePages","endPage","min","push","number","handlePageNavigation","pageNumber","alert"],"sourceRoot":""}